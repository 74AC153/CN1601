cscope 15 $HOME/Documents/sourcecode/cpu/spec3               0000350101
	@asm.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°rög.h
>

4 
	~<°dlib.h
>

5 
	~<uni°d.h
>

6 
	~<uni°d.h
>

7 
	~<f˙é.h
>

8 
	~<î∫o.h
>

9 
	~<as£π.h
>

10 
	~<˘y≥.h
>

12 
	~"ö°ru˘i⁄s.h
"

14 
	#SGNEXTEND
(
VAL
, 
TYPE
, 
BITNUM
) \

15 –(
TYPE
Ë–(
VAL
Ë<< (((VALË* 
CHAR_BIT
Ë- 
BITNUM
) ) \

16 >> (((
VAL
Ë* 
CHAR_BIT
Ë- 
BITNUM
Ë)

	)

18 
	s˛i_›ts


20 *
	möfûe
;

21 *
	moutfûe
;

22 
	mœbñs
;

23 
	mvîbo£
;

26 
	sœbñdec


28 
œbñdec
 *
	m√xt
;

29 
	mlöíum
;

30 *
	m«me
;

31 
	moff£t
;

33 
œbñdec
 
	tœbñdec_t
;

35 
	slöedec


37 
löedec
 *
	m√xt
;

38 
	mlöíum
;

39 *
	mœbñ
;

40 *
	m›
;

41 *
	m¨gs
[3];

43 
löedec
 
	tlöedec_t
;

48 
œbñdec_t
 *
	gœbñs_°¨t
 = 
NULL
;

49 
œbñdec_t
 *
	gœbñs_íd
 = 
NULL
;

50 
löedec_t
 *
	g•lôlöes_°¨t
 = 
NULL
;

51 
löedec_t
 *
	g•lôlöes_íd
 = 
NULL
;

52 
	#MAX_WORDS
 65536

	)

53 
uöt16_t
 
	goutbuf
[
MAX_WORDS
];

56 
	$ußge
(*
¥og«me
)

58 
	`¥ötf
("ußge: %†[-h] [-òöfûe] [-ÿoutfûe] [-l] [-v]\n", 
¥og«me
);

59 
	`¥ötf
("(omit -i or -oÅo use stdin or stdout)\n");

60 
	`¥ötf
("-h : showÅhisÅextánd stop.\n");

61 
	`¥ötf
("-l :ÖrintÜabelsÅo stdoutánd stop.\n");

62 
	`¥ötf
("-v :ÖrintÖarseÑesults\n");

63 
	}
}

65 
	$∑r£_˛i
(
¨gc
, *
¨gv
[], 
˛i_›ts
 *
›ts
)

67 
ch
;

69 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "i:o:lvh")) != -1) {

70 
ch
) {

72 
›ts
->
öfûe
 = 
›èrg
;

75 
›ts
->
outfûe
 = 
›èrg
;

78 
›ts
->
œbñs
 = 1;

81 
›ts
->
vîbo£
 = 1;

91 
	}
}

94 
	$ªadlöe
(
fd
, *
buf
, 
bufmax
, *
£¡öñs
)

96 
c
;

97 
bufoff
 = 0;

98 
°©us
;

101 
°©us
 = 
	`ªad
(
fd
, &
c
, (c));

103 if(
°©us
 <= 0) {

107 if(
bufoff
 =
bufmax
 - 1) {

111 
buf
[
bufoff
++] = 
c
;

113 if(
	`°rchr
(
£¡öñs
, 
c
Ë!
NULL
) {

118 
buf
[
bufoff
] = 0;

119  
bufoff
;

120 
	}
}

122 
	$issymch¨
(
c
)

124  
	`iß um
(
c
)

125 || 
c
 == '_'

126 || 
c
 == '.'

127 || 
c
 == '#'

128 || 
c
 == '@'

129 || 
c
 == '%'

130 || 
c
 == '-'

131 || 
c
 == '+';

132 
	}
}

134 
√xtsym
(*
löe
, **
sym
, (*
vÆid
)(
c
) )

136 *
sym°¨t
, *
symíd
, *
ªt
;

138 
sym°¨t
 = 
löe
; ! 
	`vÆid
(*symstart) && *symstart != 0; symstart++);

140 if(*
sym°¨t
 == 0) {

144 
symíd
 = 
sym°¨t
; 
	`vÆid
(*symend); symend++);

146 
ªt
 = 
	`ˇŒoc
(1, 
symíd
 - 
sym°¨t
 + 1);

147 if(!
ªt
) {

150 *
sym
 = 
ªt
;

152  ; 
sym°¨t
 < 
symíd
; sym°¨t++, 
ªt
++) {

153 *
ªt
 = *
sym°¨t
;

155 *
ªt
 = 0;

157  
symíd
 - 
löe
;

158 
	}
}

160 
	$•lôlöe
(*
löe
, 
löedec_t
 *
•lô
)

162 *
curs‹
;

163 
°©us
;

166 if((
curs‹
 = 
	`°rchr
(
löe
, ';'))) {

167 *
curs‹
 = 0;

171 if((
curs‹
 = 
	`°rchr
(
löe
, ':')Ë!
NULL
) {

172 
°©us
 = 
	`√xtsym
(
löe
, &(
•lô
->
œbñ
), 
issymch¨
);

173 
löe
 = 
curs‹
 + 1;

177 
°©us
 = 
	`√xtsym
(
löe
, &(
•lô
->
›
), 
issymch¨
);

178 
löe
 +
°©us
;

181 
°©us
 = 
	`√xtsym
(
löe
, &(
•lô
->
¨gs
[0]), 
issymch¨
);

182 if(
°©us
 <= 0) {

185 
löe
 +
°©us
;

188 
°©us
 = 
	`√xtsym
(
löe
, &(
•lô
->
¨gs
[1]), 
issymch¨
);

189 if(
°©us
 <= 0) {

192 
löe
 +
°©us
;

195 
°©us
 = 
	`√xtsym
(
löe
, &(
•lô
->
¨gs
[2]), 
issymch¨
);

198 
	}
}

200 
	$gíî©e_œbñs
(

201 
löedec_t
 *
•lôlöes_°¨t
,

202 
œbñdec_t
 **
œbñs_°¨t
,

203 
œbñdec_t
 **
œbñs_íd
)

205 
off£t
 = 0;

206 
löedec_t
 *
curs‹
;

207 
œbñdec_t
 
ãm∂abñ
, *
√wœbñ
;

209 
curs‹
 = 
•lôlöes_°¨t
; curs‹; curs‹ = curs‹->
√xt
) {

210 if(
curs‹
->
›
 !
NULL
 &&

211 
	`°rcmp
(
curs‹
->
›
, ".org") == 0) {

212 
off£t
 = 
	`°πﬁ
(
curs‹
->
¨gs
[0], 
NULL
, 0);

216 if(
curs‹
->
œbñ
 =
NULL
 && curs‹->
›
 != NULL) {

217 ++
off£t
;

221 
	`mem£t
(&
ãm∂abñ
, 0, (
œbñdec_t
));

222 
ãm∂abñ
.
«me
 = 
	`°rdup
(
curs‹
->
œbñ
);

223 
ãm∂abñ
.
off£t
 = offset;

224 
√wœbñ
 = 
	`mÆloc
((
œbñdec_t
));

225 
	`mem˝y
(
√wœbñ
, &
ãm∂abñ
, (
œbñdec_t
));

227 if(*
œbñs_°¨t
 =
NULL
) {

228 *
œbñs_°¨t
 = *
œbñs_íd
 = 
√wœbñ
;

230 (*
œbñs_íd
)->
√xt
 = 
√wœbñ
;

231 *
œbñs_íd
 = 
√wœbñ
;

234 if(
curs‹
->
›
 !
NULL
) {

235 ++
off£t
;

238 
	}
}

241 
	$föd_off£t
(*
föd
, 
œbñdec_t
 *
œbñs
)

243 
œbñdec_t
 *
œbñcurs‹
;

244 
ªt
 = -1;

245 
œbñ
[256];

246 *
dŸ
;

248 
	`°∫˝y
(
œbñ
, 
föd
, (label));

249 
œbñ
[(label) - 1] = 0;

251 
dŸ
 = 
	`°ºchr
(
œbñ
, '.');

252 if(
dŸ
 !
NULL
) {

253 *
dŸ
 = 0;

257 
œbñcurs‹
 = 
œbñs
;Üabñcurs‹;Üabñcurs‹ =Üabñcurs‹->
√xt
) {

258 if(
	`°rcmp
(
œbñ
, 
œbñcurs‹
->
«me
) == 0) {

259 
ªt
 = 
œbñcurs‹
->
off£t
;

264 if(
ªt
 == -1) {

265 
	`Ârötf
(
°dîr
, "îr‹:Üabñ %†nŸ found.\n", 
föd
);

268 if(
dŸ
 !
NULL
) {

269 if(
dŸ
[1] == 'h') {

270 
ªt
 >>= 8;

272 if(
dŸ
[1] == 'l') {

273 
ªt
 &= 0xFF;

277  
ªt
;

278 
	}
}

280 
	$föd_ªloff
(
size_t
 
cur_off
, *
föd
, 
œbñdec_t
 *
œbñs
)

282 
found
 = 
	`föd_off£t
(
föd
, 
œbñs
);

283 if(
found
 == -1) {

284  
MAX_WORDS
 + 1;

287  
found
 - (Ë
cur_off
;

288 
	}
}

290 
	$gíî©e_›codes
(

291 
löedec_t
 *
•lôlöes
,

292 
œbñdec_t
 *
œbñs
,

293 
uöt16_t
 *
outbuf
,

294 
size_t
 
outbuÊí
)

296 
löedec_t
 *
löecurs‹
;

297 
öt32_t
 
off£t
, 
off£t_max
;

298 *
nmem⁄ic
;

299 
uöt16_t
 
w‹d
;

300 
öt32_t
 
¨gs
[3], *
¨gs_curs‹
;

301 
¨gidx
;

302 *
sy¡ax
, *
syn_curs‹
;

303 **
löórgs_curs‹
;

304 
°©us
;

305 
numbôs
;

307 
off£t
 = 
off£t_max
 = 0;

309 
löecurs‹
 = 
•lôlöes
;Üöecurs‹;Üöecurs‹ =Üöecurs‹->
√xt
) {

310 if(
löecurs‹
->
›
 =
NULL
) {

314 
nmem⁄ic
 = 
löecurs‹
->
›
;

316 if(
	`°rcmp
(
nmem⁄ic
, ".data") == 0) {

317 if(
löecurs‹
->
¨gs
[0] =
NULL
 || (linecursor->args[0][0] != '@' &&

318 
löecurs‹
->
¨gs
[0][0] != '#')) {

319 
	`Ârötf
(
°dîr
, "errorÜine %d: %sÑequires [@|#|%%]\n",

320 
löecurs‹
->
löíum
, 
nmem⁄ic
);

324 if(
löecurs‹
->
¨gs
[0][0] == '#') {

325 
w‹d
 = 
	`°πﬁ
(
löecurs‹
->
¨gs
[0]+1, 
NULL
, 0);

326 } if(
löecurs‹
->
¨gs
[0][0] == '@') {

327 
w‹d
 = 
	`föd_off£t
(
löecurs‹
->
¨gs
[0] + 1, 
œbñs
);

328 } if(
löecurs‹
->
¨gs
[0][0] == '%') {

329 
w‹d
 = 
	`föd_ªloff
(
off£t
, 
löecurs‹
->
¨gs
[0] + 1, 
œbñs
);

332 
outbuf
[
off£t
++] = 
w‹d
;

333 
off£t_max_upd©e
;

336 if(
	`°rcmp
(
nmem⁄ic
, ".org") == 0) {

337 if(
löecurs‹
->
¨gs
[0] =
NULL
) {

338 
	`Ârötf
(
°dîr
,

340 
löecurs‹
->
löíum
, 
nmem⁄ic
);

343 
°©us
 = 
	`°πﬁ
(
löecurs‹
->
¨gs
[0], 
NULL
, 0);

344 
off£t
 = 
°©us
;

345 
off£t_max_upd©e
;

348 
	`nmem⁄ic_sy¡ax
(&
sy¡ax
, 
nmem⁄ic
);

350 
löórgs_curs‹
 = &
löecurs‹
->
¨gs
[0];

351 
syn_curs‹
 = 
sy¡ax
;

352 
¨gs_curs‹
 = &
¨gs
[0];

354 
¨gidx
 = 0;

355 *
syn_curs‹
) {

356 
	`as£π
(
¨gidx
 < 3);

358 *
syn_curs‹
) {

360 
	#SYN_TESTMISMATCH_FAIL
(
EXPECT
) \

362 if(
löórgs_curs‹
[
¨gidx
][0] !(
EXPECT
)) { \

363 
	`Ârötf
(
°dîr
, \

365 
löecurs‹
->
löíum
, 
sy¡ax
, 
¨gidx
, \

366 
löórgs_curs‹
[
¨gidx
][0], (
EXPECT
)); \

369 } 0);

	)

370 
	`SYN_TESTMISMATCH_FAIL
('c');

371 *
¨gs_curs‹
 = 
	`°πﬁ
(
löórgs_curs‹
[
¨gidx
]+1, 
NULL
, 10);

372 if(*
¨gs_curs‹
 > 0x7) {

373 
	`Ârötf
(
°dîr
,

375 
löecurs‹
->
löíum
, *
¨gs_curs‹
);

378 
syn_curs‹
++;

381 
	`SYN_TESTMISMATCH_FAIL
('q');

382 *
¨gs_curs‹
 = 
	`°πﬁ
(
löórgs_curs‹
[
¨gidx
]+1, 
NULL
, 10);

383 if(*
¨gs_curs‹
 > 0x1F) {

384 
	`Ârötf
(
°dîr
,

386 
löecurs‹
->
löíum
, *
¨gs_curs‹
);

389 
syn_curs‹
++;

392 
	`SYN_TESTMISMATCH_FAIL
('r');

393 *
¨gs_curs‹
 = 
	`°πﬁ
(
löórgs_curs‹
[
¨gidx
]+1, 
NULL
, 10);

394 if(*
¨gs_curs‹
 > 0x7) {

395 
	`Ârötf
(
°dîr
,

397 
löecurs‹
->
löíum
, *
¨gs_curs‹
);

400 
syn_curs‹
++;

403 
numbôs
 = 
	`°πﬁ
(
syn_curs‹
 + 1, &syn_cursor, 10);

404 if(
löórgs_curs‹
[
¨gidx
][0] == '%') {

405 *
¨gs_curs‹
 = 
	`föd_ªloff
(
off£t
,

406 
löórgs_curs‹
[
¨gidx
]+1,

407 
œbñs
);

408 } if(
löórgs_curs‹
[
¨gidx
][0] == '#') {

409 *
¨gs_curs‹
 = 
	`°πﬁ
(
löórgs_curs‹
[
¨gidx
]+1, 
NULL
, 0);

412 
	`Ârötf
(
°dîr
,

415 
löecurs‹
->
löíum
, 
sy¡ax
,

416 
¨gidx
, 
löórgs_curs‹
[argidx][0]);

419 if(*
¨gs_curs‹
 > (0x1 << (
numbôs
-1)) - 1 ||

420 *
¨gs_curs‹
 < -(0x1 << (
numbôs
-1))) {

421 
	`Ârötf
(
°dîr
, "errorÜine %d: immed overflow (0x%x)\n",

422 
löecurs‹
->
löíum
, *
¨gs_curs‹
);

427 
numbôs
 = 
	`°πﬁ
(
syn_curs‹
 + 1, &syn_cursor, 10);

428 if(
löórgs_curs‹
[
¨gidx
][0] == '@') {

429 *
¨gs_curs‹
 = 
	`föd_off£t
(
löórgs_curs‹
[
¨gidx
]+1,

430 
œbñs
);

431 } if(
löórgs_curs‹
[
¨gidx
][0] == '#') {

432 *
¨gs_curs‹
 = 
	`°πﬁ
(
löórgs_curs‹
[
¨gidx
]+1, 
NULL
, 0);

434 
	`Ârötf
(
°dîr
,

437 
löecurs‹
->
löíum
, 
sy¡ax
,

438 
¨gidx
, 
löórgs_curs‹
[argidx][0]);

441 if(*
¨gs_curs‹
 >0x1 << 
numbôs
) {

442 
	`Ârötf
(
°dîr
, "errorÜine %d: immed overflow (0x%x)\n",

443 
löecurs‹
->
löíum
, *
¨gs_curs‹
);

448 
	`SYN_TESTMISMATCH_FAIL
('x');

449 *
¨gs_curs‹
 = 
	`°πﬁ
(
löórgs_curs‹
[
¨gidx
] + 1, 
NULL
, 10);

450 if(*
¨gs_curs‹
 > 0x1F) {

451 
	`Ârötf
(
°dîr
,

453 
löecurs‹
->
löíum
, *
¨gs_curs‹
);

456 
syn_curs‹
++;

459 
	`Ârötf
(
°dîr
, "îr‹: bad sy¡ax s≥cifõ∏%s\n", 
sy¡ax
);

464 
¨gidx
++;

465 
¨gs_curs‹
++;

467 #unde‡
SYN_MISMATCH


468 if(
	`as£mbÀ_ö°ru˘i⁄
(&
outbuf
[
off£t
++], 
nmem⁄ic
, 
¨gs
)) {

469 
	`Ârötf
(
°dîr
, "errorÜine %d: unknownÇmemonic %s\n",

470 
löecurs‹
->
löíum
, 
nmem⁄ic
);

474 
off£t_max_upd©e
:

475 if(
off£t
 > 
off£t_max
) {

476 
off£t_max
 = 
off£t
;

477 if(
off£t_max
 >
MAX_WORDS
) {

478 
	`Ârötf
(
°dîr
, "errorÜine %d: max imageÜengthÉxceeded\n",

479 
löecurs‹
->
löíum
);

485  
off£t_max
;

486 
	}
}

488 
	$tokíize
(
öfd
, 
löedec_t
 **
löes_hód
,Üöedec_à**
löes_èû
)

490 *
£micﬁ⁄
;

491 
löebuf
[256];

492 
löedec_t
 
löëemp
, *
√wlöe
;

493 
°©us
;

494 
löíum
 = 0;

496 0 < (
°©us
 = 
	`ªadlöe
(
öfd
, 
löebuf
, (linebuf), "\n"))) {

497 ++
löíum
;

500 
£micﬁ⁄
 = 
	`°rchr
(
löebuf
, ';');

501 if(
£micﬁ⁄
) {

502 *
£micﬁ⁄
 = '\0';

506 
	`mem£t
(&
löëemp
, 0, (linetemp));

507 
	`•lôlöe
(
löebuf
, &
löëemp
);

508 if(
löëemp
.
›
 =
NULL
 &&Üöëemp.
œbñ
 == NULL) {

513 
√wlöe
 = 
	`mÆloc
((
löedec_t
));

514 
	`mem˝y
(
√wlöe
, &
löëemp
, (linetemp));

515 
√wlöe
->
löíum
 =Üinenum;

516 if(
•lôlöes_íd
 =
NULL
) {

517 *
löes_hód
 = *
löes_èû
 = 
√wlöe
;

519 (*
löes_èû
)->
√xt
 = 
√wlöe
;

520 (*
löes_èû
Ë
√wlöe
;

524 
	}
}

526 
	$maö
(
¨gc
, *
¨gv
[])

528 
°©us
;

529 
˛i_›ts
 
›ts
;

530 
löedec_t
 *
√wlöe
;

531 
maxÀn
;

532 
öfd
;

533 
outfd
;

535 
	`mem£t
(&
›ts
, 0, (opts));

538 
°©us
 = 
	`∑r£_˛i
(
¨gc
, 
¨gv
, &
›ts
);

539 if(
°©us
) {

540 
	`ußge
(
¨gv
[0]);

541  
°©us
;

545 if(
›ts
.
öfûe
 =
NULL
) {

546 
öfd
 = 
STDIN_FILENO
;

548 
öfd
 = 
	`›í
(
›ts
.
öfûe
, 
O_RDONLY
);

549 if(
öfd
 < 0) {

550 
	`Ârötf
(
°dîr
, "error opening input file %s (errno=%d, %s)\n",

551 
›ts
.
öfûe
, 
î∫o
, 
	`°ªº‹
(errno));

557 
°©us
 = 
	`tokíize
(
öfd
, &
•lôlöes_°¨t
, &
•lôlöes_íd
);

558 if(
°©us
) {

562 if(
›ts
.
vîbo£
) {

563 
	`¥ötf
("tokenized:\n");

564 
√wlöe
 = 
•lôlöes_°¨t
;

565 
√wlöe
 !
NULL
;

566 
√wlöe
 =Çewlöe->
√xt
) {

567 
	`¥ötf
("line:Üabel: %s, op: %s,árg1: %s,árg2: %s,árg3: %s\n",

568 
√wlöe
->
œbñ
 =
NULL
 ? "(null)" :Çewline->label,

569 
√wlöe
->
›
 =
NULL
 ? "(null)" :Çewline->op,

570 
√wlöe
->
¨gs
[0] =
NULL
 ? "(null)" :Çewline->args[0],

571 
√wlöe
->
¨gs
[1] =
NULL
 ? "(null)" :Çewline->args[1],

572 
√wlöe
->
¨gs
[2] =
NULL
 ? "(null)" :Çewline->args[2] );

577 
	`gíî©e_œbñs
(
•lôlöes_°¨t
, &
œbñs_°¨t
, &
œbñs_íd
);

579 if(
›ts
.
œbñs
) {

580 
œbñdec_t
 *
œbñãmp
;

581 
œbñãmp
 = 
œbñs_°¨t
;

582 
œbñãmp
;

583 
œbñãmp
 =Üabñãmp->
√xt
) {

584 
	`¥ötf
("%s %d\n",

585 
œbñãmp
->
«me
,Üabñãmp->
off£t
);

591 
maxÀn
 =

592 
	`gíî©e_›codes
(
•lôlöes_°¨t
, 
œbñs_°¨t
, 
outbuf
, (outbuf));

593 if(
maxÀn
 < 0) {

598 if(
›ts
.
outfûe
 =
NULL
) {

599 
outfd
 = 
STDOUT_FILENO
;

601 
outfd
 = 
	`›í
(
›ts
.
outfûe
, 
O_WRONLY
|
O_CREAT
, 0666);

602 if(
outfd
 < 0) {

603 
	`Ârötf
(
°dîr
, "error opening otput file %s (errno=%d, %s)\n",

604 
›ts
.
outfûe
, 
î∫o
, 
	`°ªº‹
(errno));

608 
	`wrôe
(
outfd
, 
outbuf
, 
maxÀn
 * (
uöt16_t
));

611 
	}
}

	@dasm.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<f˙é.h
>

4 
	~<uni°d.h
>

5 
	~<°rög.h
>

6 
	~<î∫o.h
>

7 
	~<°dboﬁ.h
>

8 
	~<°dlib.h
>

9 
	~"ö°ru˘i⁄s.h
"

11 
	s˛i_›ts


13 *
	möfûe
;

14 *
	moutfûe
;

15 
	m°¨t
;

16 
	mÀn
;

17 
boﬁ
 
	md©amode
;

18 
boﬁ
 
	mcommít
;

21 
	$ußge
(*
¥og«me
)

23 
	`¥ötf
("usage: %s [-h] [-i infile] [-o outfile] [-s offset] [-nÜen] [-d] [-c]\n",

24 
¥og«me
);

25 
	`¥ötf
("omit -i or -oÅo use stdin or stdout\n");

26 
	`¥ötf
("-dÉmitsÉach word inÅhe format .data 0xabcd ; instr\n");

27 
	`¥ötf
("-cÉmitsÉach word inÅhe format istr ; 0xabcd \n");

28 
	`¥ötf
("-h :ÅhisÅext\n");

29 
	}
}

31 
	$∑r£_˛i
(
¨gc
, *
¨gv
[], 
˛i_›ts
 *
›ts
)

33 
ch
;

35 
›ts
->
Àn
 = -1;

37 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "hi:o:s:n:dc")) != -1) {

38 
ch
) {

40 'i': 
›ts
->
öfûe
 = 
›èrg
; ;

41 'o': 
›ts
->
outfûe
 = 
›èrg
; ;

42 's': 
›ts
->
°¨t
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 0); ;

43 'n': 
›ts
->
Àn
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 0); ;

44 'd': 
›ts
->
d©amode
 = 
åue
; ;

45 'c': 
›ts
->
commít
 = 
åue
; ;

51 
	}
}

53 
	$dißs£mbÀ
(
uöt16_t
 
ö°r
, *
out°r
, 
size_t
 
Àn
, **
√wout
)

55 
›code
, 
subcode
;

56 *
sy¡ax
, *
nmem⁄ic
;

57 
fõlds
[3];

58 
¨gnum
;

59 
°©us
;

61 
	`decode_ö°ru˘i⁄
(&
›code
, &
subcode
, &
fõlds
[0], 
ö°r
);

62 
	`ªsﬁve_nmem⁄ic
(&
nmem⁄ic
, 
›code
, 
subcode
);

63 
	`nmem⁄ic_sy¡ax
(&
sy¡ax
, 
nmem⁄ic
);

65 
°©us
 = 
	`¢¥ötf
(
out°r
, 
Àn
, "%†", 
nmem⁄ic
);

66 
Àn
 -
°©us
;

67 
out°r
 +
°©us
;

69 
¨gnum
 = 0;

70 *
sy¡ax
) {

71 *
sy¡ax
) {

73 
°©us
 = 
	`¢¥ötf
(
out°r
, 
Àn
, "c%u", 
fõlds
[
¨gnum
++]);

74 
Àn
 -
°©us
;

75 
out°r
 +
°©us
;

78 
°©us
 = 
	`¢¥ötf
(
out°r
, 
Àn
, "q%u", 
fõlds
[
¨gnum
++]);

79 
Àn
 -
°©us
;

80 
out°r
 +
°©us
;

83 
°©us
 = 
	`¢¥ötf
(
out°r
, 
Àn
, "r%u", 
fõlds
[
¨gnum
++]);

84 
Àn
 -
°©us
;

85 
out°r
 +
°©us
;

88 
°©us
 = 
	`°πﬁ
(
sy¡ax
+1, &syntax, 10);

89 
sy¡ax
--;

90 
°©us
 = 
	`¢¥ötf
(
out°r
, 
Àn
, "#%d", 
fõlds
[
¨gnum
++]);

91 
Àn
 -
°©us
;

92 
out°r
 +
°©us
;

95 
°©us
 = 
	`°πﬁ
(
sy¡ax
+1, &syntax, 10);

96 
sy¡ax
--;

97 
°©us
 = 
	`¢¥ötf
(
out°r
, 
Àn
, "#%u", 
fõlds
[
¨gnum
++]);

98 
Àn
 -
°©us
;

99 
out°r
 +
°©us
;

102 
°©us
 = 
	`¢¥ötf
(
out°r
, 
Àn
, "x%u", 
fõlds
[
¨gnum
++]);

103 
Àn
 -
°©us
;

104 
out°r
 +
°©us
;

107 
	`Ârötf
(
°dîr
, "bad syntax specifier '%c' for instruction %s\n",

108 *
sy¡ax
, 
nmem⁄ic
);

111 if(
sy¡ax
[1]) {

112 
°©us
 = 
	`¢¥ötf
(
out°r
, 
Àn
, ", ");

113 
Àn
 -
°©us
;

114 
out°r
 +
°©us
;

116 
sy¡ax
++;

119 
Àn
 -
°©us
;

120 *
√wout
 = 
out°r
;

122 
	}
}

124 
	$maö
(
¨gc
, *
¨gv
[])

126 
°©us
;

127 
˛i_›ts
 
›ts
;

128 
uöt16_t
 
w‹d
;

129 
öfd
, 
outfd
;

130 
out°r
[256], *
curs‹
, *
limô
;

131 
numw‹ds
;

133 
limô
 = 
out°r
 + (outstr) - 1;

135 
	`mem£t
(&
›ts
, 0, (opts));

138 
°©us
 = 
	`∑r£_˛i
(
¨gc
, 
¨gv
, &
›ts
);

139 if(
°©us
) {

140 
	`ußge
(
¨gv
[0]);

141  
°©us
;

145 if(
›ts
.
öfûe
 =
NULL
) {

146 
öfd
 = 
STDIN_FILENO
;

148 
öfd
 = 
	`›í
(
›ts
.
öfûe
, 
O_RDONLY
);

149 if(
öfd
 < 0) {

150 
	`Ârötf
(
°dîr
, "error opening input file %s (errno=%d, %s)\n",

151 
›ts
.
öfûe
, 
î∫o
, 
	`°ªº‹
(errno));

156 if(
›ts
.
outfûe
 =
NULL
) {

157 
outfd
 = 
STDOUT_FILENO
;

159 
outfd
 = 
	`›í
(
›ts
.
outfûe
, 
O_WRONLY
|
O_CREAT
, 0666);

160 if(
outfd
 < 0) {

161 
	`Ârötf
(
°dîr
, "error opening output file %s (errno=%d, %s)\n",

162 
›ts
.
outfûe
, 
î∫o
, 
	`°ªº‹
(errno));

168 
numw‹ds
 = 0;

169 0 < (
°©us
 = 
	`ªad
(
öfd
, &
w‹d
, (word)))) {

170 if(
›ts
.
°¨t
 != 0) {

171 --
›ts
.
°¨t
;

174 if(
›ts
.
Àn
 == 0) {

177 --
›ts
.
Àn
;

179 
curs‹
 = 
out°r
;

181 if(
›ts
.
d©amode
) {

182 
°©us
 = 
	`¢¥ötf
(
curs‹
, 
limô
-curs‹, ".d©®0x%4.4x", 
w‹d
);

183 
curs‹
 +
°©us
;

185 
°©us
 = 
	`dißs£mbÀ
(
w‹d
, 
curs‹
, 
limô
-cursor, &cursor);

186 if(
°©us
Ë
dis_îr‹
;

189 if(
›ts
.
commít
) {

190 if(
›ts
.
d©amode
) {

191 
°©us
 = 
	`¢¥ötf
(
curs‹
, 
limô
-cursor, " ; ");

192 
curs‹
 +
°©us
;

193 
°©us
 = 
	`dißs£mbÀ
(
w‹d
, 
curs‹
, 
limô
-cursor, &cursor);

194 if(
°©us
Ë
dis_îr‹
;

196 
°©us
 = 
	`¢¥ötf
(
curs‹
, 
limô
-curs‹, " ; 0x%4.4x", 
w‹d
);

197 
curs‹
 +
°©us
;

201 
	`¢¥ötf
(
curs‹
, 
limô
-cursor, "\n");

203 
	`wrôe
(
outfd
, 
out°r
, 
	`°æí
(outstr));

204 
numw‹ds
++;

209 
dis_îr‹
:

210 
	`Ârötf
(
°dîr
, "îr‹ dißs£mblög w‹d %d\n", 
numw‹ds
);

212 
	}
}

	@dlist.h

1 #i‚de‡
DLIST_H


2 
	#DLIST_H


	)

4 
	~<°dboﬁ.h
>

6 
	sd ode
 {

7 
d ode
 *
	m¥ev
, *
	m√xt
;

8 
dli°
 *
	mow√r
;

10 
d ode
 
	td ode_t
;

12 
	sdli°
 {

13 
d ode_t
 
	mhdr
;

15 
dli°
 
	tdli°_t
;

17 
	#DLIST_STATIC_INITIALIZER
(
LIST
) \

18 { { &((
LIST
).
hdr
), &((LIST).hdr), &(LIST)} }

	)

38 
ölöe


39 
d ode_t
 *
	$d ode_öô
(
d ode_t
 *
n
)

41 
n
->
ow√r
 = 
NULL
;

42 
n
->
¥ev
 =Ç->
√xt
 = 
NULL
;

43  
n
;

44 
	}
}

46 
ölöe


47 
boﬁ
 
	$d ode_is_ãrmöÆ
(
d ode_t
 *
n
)

49  
n
 =&“->
ow√r
->
hdr
);

50 
	}
}

52 
ölöe


53 
d ode_t
 *
	$d ode_√xt
(
d ode_t
 *
n
)

55  
n
->
√xt
;

56 
	}
}

58 
ölöe


59 
d ode_t
 *
	$d ode_¥ev
(
d ode_t
 *
n
)

61  
n
->
¥ev
;

62 
	}
}

64 
ölöe


65 
dli°_t
 *
	$d ode_ow√r
(
d ode_t
 *
n
)

67  
n
->
ow√r
;

68 
	}
}

70 
ölöe


71 
	$d ode_ö£π√xt
(
d ode_t
 *
n
, d ode_à*
√xt
)

73 
√xt
->√xà
n
->next;

74 
n
->
√xt
->
¥ev
 =Çext;

75 
n
->
√xt
 =Çext;

76 
√xt
->
¥ev
 = 
n
;

77 
√xt
->
ow√r
 = 
n
->owner;

78 
	}
}

80 
ölöe


81 
	$d ode_ö£π¥ev
(
d ode_t
 *
n
, d ode_à*
¥ev
)

83 
¥ev
->¥ev = 
n
->prev;

84 
n
->
¥ev
->
√xt
 =Örev;

85 
n
->
¥ev
 =Örev;

86 
¥ev
->
√xt
 = 
n
;

87 
¥ev
->
ow√r
 = 
n
->owner;

88 
	}
}

90 
ölöe


91 
d ode_t
 *
	$d ode_ªmove
(
d ode_t
 *
n
)

93 
n
->
¥ev
->
√xt
 =Ç->next;

94 
n
->
√xt
->
¥ev
 =Ç->prev;

95 
n
->
√xt
 =Ç->
¥ev
 = 
NULL
;

96 
n
->
ow√r
 = 
NULL
;

97  
n
;

98 
	}
}

101 
ölöe


102 
	$dli°_öô
(
dli°_t
 *
l
)

104 
l
->
hdr
.
¥ev
 =Ü->hdr.
√xt
 = &(l->hdr);

105 
l
->
hdr
.
ow√r
 =Ü;

106 
	}
}

108 
ölöe


109 
d ode_t
 *
	$dli°_fú°
(
dli°_t
 *
l
)

111  
l
->
hdr
.
√xt
;

112 
	}
}

114 
ölöe


115 
d ode_t
 *
	$dli°_œ°
(
dli°_t
 *
l
)

117  
l
->
hdr
.
¥ev
;

118 
	}
}

120 
ölöe


121 
	$dli°_ö£πfú°
(
dli°_t
 *
l
, 
d ode_t
 *
n
)

123 
	`d ode_ö£π√xt
(&(
l
->
hdr
), 
n
);

124 
	}
}

126 
ölöe


127 
	$dli°_ö£πœ°
(
dli°_t
 *
l
, 
d ode_t
 *
n
)

129 
	`d ode_ö£π¥ev
(&(
l
->
hdr
), 
n
);

130 
	}
}

132 
ölöe


133 
boﬁ
 
	$dli°_is_em±y
(
dli°_t
 *
l
)

135  
l
->
hdr
.
√xt
 == &(l->hdr);

136 
	}
}

	@fifostdio.c

1 
	~<î∫o.h
>

2 
	~<°rög.h
>

3 
	~<°dio.h
>

4 
	~<f˙é.h
>

5 
	~<uni°d.h
>

6 
	~<ãrmios.h
>

7 
	~<°dlib.h
>

8 
	~<sys/°©.h
>

9 
	~<°dboﬁ.h
>

11 
ãrmios
 
	gﬁd_tio
, 
	g√w_tio
;

12 *
	gout_∑th
;

14 
	$ª°‹e
(
s
)

16 
	`tc£èâr
(
STDIN_FILENO
, 
TCSANOW
, &
ﬁd_tio
);

17 
	`exô
(0);

18 
	}
}

20 
	$maö
(
¨gc
, *
¨gv
[])

22 
outfd
;

23 
c
;

24 
°©us
;

26 if(
¨gc
 != 2) {

27 
	`¥ötf
("ußge: %†fifo\n", 
¨gv
[0]);

31 
out_∑th
 = 
¨gv
[1];

33 
	`tcgë©å
(
STDIN_FILENO
,&
ﬁd_tio
);

34 
√w_tio
=
ﬁd_tio
;

35 
√w_tio
.
c_lÊag
 &=(~
ICANON
 & ~
ECHO
);

36 
	`tc£èâr
(
STDIN_FILENO
,
TCSANOW
,&
√w_tio
);

38 
outfd
 = 
	`›í
(
out_∑th
, 
O_WRONLY
);

39 if(
outfd
 < 0) {

40 
	`¥ötf
("error opening %s: %s (errno=%d)\n",

41 
out_∑th
, 
	`°ªº‹
(
î∫o
),Érrno);

45 
	`sig«l
(
SIGINT
, 
ª°‹e
);

48 
°©us
 = 
	`ªad
(
STDIN_FILENO
, &
c
, 1);

49 if(
°©us
 == 1) {

50 
	`wrôe
(
outfd
, &
c
, 1);

55 
	}
}

	@instr_table.c

1 
	~"ö°r_èbÀ.h
"

11 
ö°r_•ec_t
 
	gö°r_èbÀ
 [] = {

58 
	gö°r_èbÀ_Àn
 = (
ö°r_èbÀ
) / (instr_table[0]);

	@instr_table.h

1 #i‚de‡
INSTR_TABLE_H


2 
	#INSTR_TABLE_H


	)

4 
	#OPCODE_STARTBIT
 11

	)

5 
	#OPCODE_NUMBITS
 5

	)

6 
	#SUBCODE_STARTBIT
 0

	)

7 
	#SUBCODE_NUMBITS
 2

	)

17 
	sö°r_•ec


19 *
	mnmem⁄ic
;

20 
	m›code
;

21 
	mhas_subcode
;

22 
	msubcode
;

23 *
	mf‹m©
;

24 *
	msy¡ax
;

25 } 
	tö°r_•ec_t
;

27 
ö°r_•ec_t
 
ö°r_èbÀ
[];

28 
ö°r_èbÀ_Àn
;

	@instructions.c

1 
	~<°d¨g.h
>

2 
	~<°rögs.h
>

3 
	~<as£π.h
>

4 
	~<limôs.h
>

5 
	~<°rög.h
>

6 
	~<˘y≥.h
>

7 
	~<°dlib.h
>

8 
	~"ö°ru˘i⁄s.h
"

10 
	#BITMASK
(
WIDTH
, 
START
) \

11 ––(0x1 << (
WIDTH
)Ë- 1Ë<< (
START
Ë)

	)

13 
	#SGNEXTEND
(
VAL
, 
TYPE
, 
BITNUM
) \

14 –(
TYPE
Ë–(
VAL
Ë<< (((VALË* 
CHAR_BIT
Ë- 
BITNUM
) ) \

15 >> (((
VAL
Ë* 
CHAR_BIT
Ë- 
BITNUM
Ë)

	)

16 
	$nmem⁄ic_sy¡ax
(

17 **
sy¡ax
,

18 *
nmem⁄ic
)

20 
i
;

21 
i
 = 0; i < 
ö°r_èbÀ_Àn
; i++) {

22 if(
	`°rˇ£cmp
(
nmem⁄ic
, 
ö°r_èbÀ
[
i
].nmemonic) == 0) {

23 *
sy¡ax
 = 
ö°r_èbÀ
[
i
].syntax;

28 
	}
}

30 
	$as£mbÀ_ö°ru˘i⁄
(

31 
uöt16_t
 *
ö°r
,

32 *
nmem⁄ic
,

33 *
fõlds
)

35 
bœnk
, 
numbôs
, 
vÆ
;

36 
uöt16_t
 
ö°r_loˇl
;

37 *
f‹m©
;

38 
i
;

40 
i
 = 0; i < 
ö°r_èbÀ_Àn
; i++) {

41 if(
	`°rˇ£cmp
(
nmem⁄ic
, 
ö°r_èbÀ
[
i
].nmemonic) == 0) {

42 
f‹m©
 = 
ö°r_èbÀ
[
i
].format;

46 if(
i
 =
ö°r_èbÀ_Àn
) {

51 
ö°r_loˇl
 = 
ö°r_èbÀ
[
i
].
›code
;

53 *
f‹m©
) {

54 
bœnk
 = 0;

55 if(*
f‹m©
++ == '_') {

56 
bœnk
 = 1;

58 
	`as£π
(*
f‹m©
);

60 
vÆ
 = 
bœnk
 ? 0 : *
fõlds
++;

61 
numbôs
 = 
	`°πﬁ
(
f‹m©
, &format, 10);

62 
ö°r_loˇl
 <<
numbôs
;

63 
ö°r_loˇl
 |
vÆ
 & 
	`BITMASK
(
numbôs
, 0);

66 if(
ö°r_èbÀ
[
i
].
has_subcode
) {

67 
ö°r_loˇl
 <<= 2;

68 
ö°r_loˇl
 |
ö°r_èbÀ
[
i
].
subcode
;

71 *
ö°r
 = 
ö°r_loˇl
;

73 
	}
}

75 
	$ªsﬁve_nmem⁄ic
(

76 **
nmem⁄ic
,

77 
›code
,

78 
subcode
)

80 
i
;

82 
i
 = 0; i < 
ö°r_èbÀ_Àn
 && 
ö°r_èbÀ
[i].
›code
 != opcode; i++);

83 
	`as£π
(
i
 !
ö°r_èbÀ_Àn
);

84 if(
ö°r_èbÀ
[
i
].
has_subcode
) {

85  ; 
i
 < 
ö°r_èbÀ_Àn
 && 
ö°r_èbÀ
[i].
subcode
 != subcode; i++);

86 
	`as£π
(
i
 !
ö°r_èbÀ_Àn
);

89 *
nmem⁄ic
 = 
ö°r_èbÀ
[
i
].nmemonic;

91 
	}
}

94 
	mFMT_INVALID
,

95 
	mFMT_u3u3u3u2
,

96 
	mFMT_u3_2u4u2
,

97 
	mFMT_u3u8
,

98 
	mFMT_u3_8
,

99 
	mFMT__11
,

100 
	mFMT_s11
,

101 
	mFMT_u3s8
,

102 
	mFMT_u3u3s5
,

103 
	mFMT_u3u3u5
,

104 
	mFMT_u3u3_5
,

105 
	mFMT_u11
,

106 
	mFMT_u3_3u5


107 } 
	tö°r_fmt_t
;

109 
	$decode_ö°ru˘i⁄
(

110 *
›code
,

111 *
subcode
,

112 *
fõlds
,

113 
uöt16_t
 
ö°r
)

115 
ö°r_fmt_t
 
fmt
 = 
FMT_INVALID
;

116 *
›code
 = (
ö°r
 >> 
OPCODE_STARTBIT
Ë& 
	`BITMASK
(
OPCODE_NUMBITS
, 0);

118 *
›code
) {

121 0x02: 
fmt
 = 
FMT_u3u3u3u2
; ;

122 0x03: 
fmt
 = 
FMT_u3_2u4u2
; ;

132 0x0D: 
fmt
 = 
FMT_u3u8
; ;

133 0x0E: 
fmt
 = 
FMT__11
; ;

135 0x10: 
fmt
 = 
FMT_s11
; ;

139 0x14: 
fmt
 = 
FMT_u3s8
; ;

143 0x18: 
fmt
 = 
FMT_u3u3s5
; ;

145 0x1A: 
fmt
 = 
FMT_u3u3u5
; ;

146 0x1B: 
fmt
 = 
FMT_u3u3_5
; ;

147 0x1C: 
fmt
 = 
FMT_u11
; ;

148 0x1D: 
fmt
 = 
FMT__11
; ;

150 0x1F: 
fmt
 = 
FMT_u3_3u5
; ;

154 
fmt
) {

155 
FMT_u3u3u3u2
:

156 
fõlds
[0] = (
ö°r
 >> 8) & 0x7;

157 
fõlds
[1] = (
ö°r
 >> 5) & 0x7;

158 
fõlds
[2] = (
ö°r
 >> 2) & 0x7;

159 *
subcode
 = (
ö°r
) & 0x3;

161 
FMT_u3_2u4u2
:

162 
fõlds
[0] = (
ö°r
 >> 8) & 0x7;

163 
fõlds
[1] = (
ö°r
 >> 2) & 0xF;

164 
fõlds
[2] = 0;

165 *
subcode
 = (
ö°r
) & 0x3;

167 
FMT_u3u8
:

168 
fõlds
[0] = (
ö°r
 >> 8) & 0x7;

169 
fõlds
[1] = 
ö°r
 & 0xFF;

170 
fõlds
[2] = 0;

171 *
subcode
 = 0;

173 
FMT_u3_8
:

174 
fõlds
[0] = (
ö°r
 >> 8) & 0x7;

175 
fõlds
[1] = 0;

176 
fõlds
[2] = 0;

177 *
subcode
 = 0;

179 
FMT__11
:

180 
fõlds
[0] = 0;

181 
fõlds
[1] = 0;

182 
fõlds
[2] = 0;

183 *
subcode
 = 0;

185 
FMT_s11
:

186 
fõlds
[0] = 
	`SGNEXTEND
(
ö°r
 & 0x7FF, 
öt32_t
, 11);

187 
fõlds
[1] = 0;

188 
fõlds
[2] = 0;

189 *
subcode
 = 0;

191 
FMT_u3s8
:

192 
fõlds
[0] = (
ö°r
 >> 8) & 0x7;

193 
fõlds
[1] = 
	`SGNEXTEND
(
ö°r
 & 0xFF, 
öt32_t
, 8);

194 
fõlds
[2] = 0;

195 *
subcode
 = 0;

197 
FMT_u3u3s5
:

198 
fõlds
[0] = (
ö°r
 >> 8) & 0x7;

199 
fõlds
[1] = (
ö°r
 >> 5) & 0x7;

200 
fõlds
[2] = 
	`SGNEXTEND
(
ö°r
 & 0x1F, 
öt32_t
, 5);

201 *
subcode
 = 0;

203 
FMT_u3u3u5
:

204 
fõlds
[0] = (
ö°r
 >> 8) & 0x7;

205 
fõlds
[1] = (
ö°r
 >> 5) & 0x7;

206 
fõlds
[2] = 
ö°r
 & 0x1F;

207 *
subcode
 = 0;

209 
FMT_u3u3_5
:

210 
fõlds
[0] = (
ö°r
 >> 8) & 0x7;

211 
fõlds
[1] = (
ö°r
 >> 5) & 0x7;

212 
fõlds
[2] = 0;

213 *
subcode
 = 0;

215 
FMT_u11
:

216 
fõlds
[0] = (
ö°r
 & 0x7FF);

217 
fõlds
[1] = 0;

218 
fõlds
[2] = 0;

219 *
subcode
 = 0;

221 
FMT_u3_3u5
:

222 
fõlds
[0] = (
ö°r
 >> 8) & 0x7;

223 
fõlds
[1] = 
ö°r
 & 0x1F;

224 
fõlds
[2] = 0;

225 *
subcode
 = 0;

232 
	}
}

	@instructions.h

1 #i‚de‡
INSTRUCTIONS_H


2 
	#INSTRUCTIONS_H


	)

4 
	~<°döt.h
>

5 
	~"ö°r_èbÀ.h
"

7 
nmem⁄ic_sy¡ax
(

8 **
sy¡ax
,

9 *
nmem⁄ic
);

11 
as£mbÀ_ö°ru˘i⁄
(

12 
uöt16_t
 *
ö°r
,

13 *
nmem⁄ic
,

14 *
fõlds
);

16 
ªsﬁve_nmem⁄ic
(

17 **
nmem⁄ic
,

18 
›code
,

19 
subcode
);

21 
decode_ö°ru˘i⁄
(

22 *
›code
,

23 *
subcode
,

24 *
fõlds
,

25 
uöt16_t
 
ö°r
);

	@instructions_test.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<as£π.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~"ö°r_èbÀ.h
"

7 
	~"ö°ru˘i⁄s.h
"

11 
uöt16_t
 
	mö°r
;

12 
	m›code
;

13 
	msubcode
;

14 
	mfõlds
[3];

15 *
	mnmem⁄ic
;

16 } 
	tã°ˇ£_t
;

18 
ã°ˇ£_t
 
	gˇ£s
[] = {

208 
	$run_ˇ£
(
i
)

210 
›code
, 
subcode
;

211 
uöt16_t
 
ö°r
;

212 *
nmem⁄ic
;

213 
fõlds
[3];

215 #ifde‡
VERBOSE


216 
	`¥ötf
("case %d: op=%x sub=%x fields=[%d %d %d]:\n",

217 
i
, 
ˇ£s
[i].
›code
, ca£s[i].
subcode
,

218 
ˇ£s
[
i
].
fõlds
[0], cases[i].fields[1], cases[i].fields[2]);

221 
	`as£mbÀ_ö°ru˘i⁄
(&
ö°r
, 
ˇ£s
[
i
].
nmem⁄ic
, ca£s[i].
fõlds
);

222 
	`as£π
(
ö°r
 =
ˇ£s
[
i
].instr);

224 
	`decode_ö°ru˘i⁄
(&
›code
, &
subcode
, &
fõlds
[0], 
ˇ£s
[
i
].
ö°r
);

225 
	`as£π
(
›code
 =
ˇ£s
[
i
].opcode);

226 
	`as£π
(
fõlds
[0] =
ˇ£s
[
i
].fields[0]);

227 
	`as£π
(
fõlds
[1] =
ˇ£s
[
i
].fields[1]);

228 
	`as£π
(
fõlds
[2] =
ˇ£s
[
i
].fields[2]);

229 
	`as£π
(
subcode
 =
ˇ£s
[
i
].subcode);

231 
	`ªsﬁve_nmem⁄ic
(&
nmem⁄ic
, 
›code
, 
subcode
);

232 
	`as£π
(! 
	`°rcmp
(
nmem⁄ic
, 
ˇ£s
[
i
].nmemonic));

233 
	}
}

235 
	$maö
(
¨gc
, *
¨gv
[])

237 
i
 = 0;

239 if(
¨gc
 == 1) {

240 
i
 = 0; i < (
ˇ£s
) / (cases[0]); i++) {

241 
	`run_ˇ£
(
i
);

244 
	`run_ˇ£
(
	`°πﬁ
(
¨gv
[1], 
NULL
, 0));

248 
	}
}

	@mbox.c

1 
	~<as£π.h
>

2 
	~<sys/time.h
>

3 
	~"mbox.h
"

5 
msg_t
 *
	$msg_öô
(*
p
)

7 
msg_t
 *
ªt
 = (msg_à*Ë
p
;

8 if(
ªt
) {

9 
	`d ode_öô
(&(
ªt
->
hdr
));

11  
ªt
;

12 
	}
}

14 
mbox_t
 *
	$mbox_öô
(*
p
)

16 
mbox_t
 *
ªt
 = (mbox_à*Ë
p
;

17 if(
ªt
) {

18 
	`±hªad_muãx_öô
(&(
ªt
->
mux
), 
NULL
);

19 
	`dli°_öô
(&(
ªt
->
mesßges
));

20 
ªt
->
Àn
 = 0;

22 
	`±hªad_c⁄d_öô
(&(
ªt
->
c⁄d
), 
NULL
);

23 
ªt
->
waôög
 = 0;

26  
ªt
;

27 
	}
}

29 
	$mbox_msg_po°
(
mbox_t
 *
box
, 
msg_t
 *
msg
)

31 
	`±hªad_muãx_lock
(&(
box
->
mux
));

33 
	`dli°_ö£πœ°
(&(
box
->
mesßges
), &(
msg
->
hdr
));

34 
box
->
Àn
++;

36 if(
box
->
waôög
) {

37 
	`±hªad_c⁄d_sig«l
(&(
box
->
c⁄d
));

40 
	`±hªad_muãx_u∆ock
(&(
box
->
mux
));

41 
	}
}

43 
msg_t
 *
	$mbox_msg_gë
(
mbox_t
 *
box
)

45 
msg_t
 *
ªt
;

46 
	`±hªad_muãx_lock
(&(
box
->
mux
));

48 if((
ªt
 = (
msg_t
 *Ë
	`dli°_fú°
(&(
box
->
mesßges
)))) {

49 
	`d ode_ªmove
(&(
ªt
->
hdr
));

50 
box
->
Àn
--;

53 
	`±hªad_muãx_u∆ock
(&(
box
->
mux
));

54  
ªt
;

55 
	}
}

57 
msg_t
 *
	$mbox_msg_gë_waô
(
mbox_t
 *
box
, 
s
, 
ns
)

59 
msg_t
 *
ªt
 = 
NULL
;

60 
°©us
 = 0;

61 
	`±hªad_muãx_lock
(&(
box
->
mux
));

63 if(
s
 =0 && 
ns
 == 0) {

64 
box
->
Àn
 == 0) {

65 
box
->
waôög
++;

66 
°©us
 = 
	`±hªad_c⁄d_waô
(&(
box
->
c⁄d
), &(box->
mux
));

67 
box
->
waôög
--;

69 } if(
box
->
Àn
 == 0) {

70 
timevÆ
 
tv
;

71 
time•ec
 
ts
;

72 
	`gëtimeofday
(&
tv
, 
NULL
);

73 
ts
.
tv_£c
 = 
tv
.tv_£¯+ 
s
;

74 
ts
.
tv_n£c
 = 
ns
;

76 
box
->
waôög
++;

77 
°©us
 = 
	`±hªad_c⁄d_timedwaô
(&(
box
->
c⁄d
), &(box->
mux
), &
ts
);

78 
box
->
waôög
--;

81 if(!
°©us
 &&

82 (
ªt
 = (
msg_t
 *Ë
	`dli°_fú°
(&(
box
->
mesßges
)))) {

83 
	`d ode_ªmove
(&(
ªt
->
hdr
));

84 
box
->
Àn
--;

87 
	`±hªad_muãx_u∆ock
(&(
box
->
mux
));

88  
ªt
;

89 
	}
}

91 
size_t
 
	$mbox_Àn
(
mbox_t
 *
box
)

93  
box
->
Àn
;

94 
	}
}

	@mbox.h

1 #i‚de‡
MBOX_H


2 
	#MBOX_H


	)

4 
	~<±hªad.h
>

5 
	~<°dboﬁ.h
>

6 
	~<°ddef.h
>

7 
	~"dli°.h
"

11 
d ode_t
 
	mhdr
;

12 } 
	tmsg_t
;

16 
dli°_t
 
	mmesßges
;

17 
size_t
 
	mÀn
;

18 
±hªad_muãx_t
 
	mmux
;

20 
±hªad_c⁄d_t
 
	mc⁄d
;

21 
size_t
 
	mwaôög
;

22 } 
	tmbox_t
;

24 
msg_t
 *
msg_öô
(*
p
);

26 
mbox_t
 *
mbox_öô
(*
p
);

28 
mbox_msg_po°
(
mbox_t
 *
box
, 
msg_t
 *
msg
);

29 
msg_t
 *
mbox_msg_gë
(
mbox_t
 *
box
);

31 
msg_t
 *
mbox_msg_gë_waô
(
mbox_t
 *
box
, 
s
, 
ns
);

33 
size_t
 
mbox_Àn
(
mbox_t
 *
box
);

	@sim.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

4 
	~<°rög.h
>

5 
	~<uni°d.h
>

6 
	~<sig«l.h
>

7 
	~<°rög.h
>

8 
	~<°dlib.h
>

9 
	~<î∫o.h
>

11 
	~"sim_c‹e.h
"

12 
	~"sim_memif.h
"

13 
	~"sim_˝_timî.h
"

14 
	~"sim_˝_nvøm.h
"

15 
	~"sim_˝_u¨t.h
"

16 
	~"utûs.h
"

21 
sim_c‹e_°©e_t
 
	gc‹e_°©e
;

22 
sim_c‹e_ouçut_t
 
	gc‹e_ouçut
;

23 
sim_c‹e_öput_t
 
	gc‹e_öput
;

28 
sim_memif_°©e_t
 
	gdmem_°©e
;

29 
sim_memif_°©e_t
 
	gimem_°©e
;

31 
	#PHYSMEM_NUMWORDS
 65535

	)

32 
uöt16_t
 
	gphysmem
[
PHYSMEM_NUMWORDS
];

34 
sim_˝_timî_°©e_t
 
	gtimî_°©e
;

35 
sim_˝_nvøm_°©e_t
 
	gnvøm_°©e
;

36 
sim_˝_u¨t_°©e_t
 
	gu¨t_°©e
;

38 
boﬁ
 
	gg_c⁄töue
 = 
åue
;

40 
	$un£t_run_sim
(
¨g
)

42 
¨g
 =árg;

43 
	`¥ötf
("stopped\n");

44 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

45 
g_c⁄töue
 = 
Ál£
;

46 
	}
}

48 
sim_˝_öfo_t
 
	gc›roc_öfo
[] = {

52 (
sim_˝_°©e_hdr_t
 *Ë&
timî_°©e
,

53 
NULL
,

54 
NULL
,

55 
NULL
,

56 
timî_°©e_d©a
,

57 
timî_°©e_exec
,

58 
NULL
,

59 
timî_°©e_¥öt


64 (
sim_˝_°©e_hdr_t
 *Ë&
nvøm_°©e
,

65 
nvøm_°©e_öô
,

66 
nvøm_°©e_deöô
,

67 
nvøm_°©e_ª£t
,

68 
nvøm_°©e_d©a
,

69 
nvøm_°©e_exec
,

70 
NULL
,

71 
nvøm_°©e_¥öt


76 (
sim_˝_°©e_hdr_t
 *Ë&
u¨t_°©e
,

77 
u¨t_°©e_öô
,

78 
u¨t_°©e_deöô
,

79 
u¨t_°©e_ª£t
,

80 
u¨t_°©e_d©a
,

81 
u¨t_°©e_exec
,

82 
NULL
,

83 
u¨t_°©e_¥öt


87 
	#ARRLEN
(
ARR
Ë((ARRË/ (ARR[0]))

	)

90 *
	möfûe
;

91 
boﬁ
 
	mdebug
;

92 
boﬁ
 
	mhÆt°©e
;

93 
	m°¨èddr
;

94 
	mlﬂdoff
;

95 *
	m˝¨g
[8];

96 } 
	t˛i_¨gs_t
;

98 
	$ußge
(*
¥og«me
)

100 
i
;

101 
	`¥ötf
("usage: %s [-i <img>] [-o <off>] [-s <start>] [-d] [-# <args>] [-e]\n",

102 
¥og«me
);

103 
	`¥ötf
("<img>: initial memory image, ifÇot specified, -d implied\n");

104 
	`¥ötf
("<off>:Üoad offset for <img>, defaultsÅo 0\n");

105 
	`¥ötf
("<start>: starting PCáddress, defaultsÅo 0\n");

106 
	`¥ötf
("-d: start in command mode\n");

107 
	`¥ötf
("-e:Örint core stateátÉxit\n");

108 
	`¥ötf
("-# <args>: # from 0..%d, <args> comma delimited withÇo spaces\n",

109 (Ë
	`ARRLEN
(
c›roc_öfo
) - 1);

110 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

111 
	`¥ötf
("coproc %d (%s) usage: %s\n",

112 
i
, 
c›roc_öfo
[i].
«me
, c›roc_öfo[i].
ußge
);

115 
	}
}

117 
	$∑r£_˛i
(
¨gc
, *
¨gv
[], 
˛i_¨gs_t
 *
¨gs
)

119 
ch
;

120 
	`mem£t
(
¨gs
, 0, (*args));

122 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "i:o:s:de0:1:2:3:4:5:6:7:")) != -1) {

123 
ch
) {

124 'i': 
¨gs
->
öfûe
 = 
›èrg
; ;

125 'o': 
¨gs
->
lﬂdoff
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 0); ;

126 's': 
¨gs
->
°¨èddr
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 0); ;

127 'd': 
¨gs
->
debug
 = 
åue
; ;

128 'e': 
¨gs
->
hÆt°©e
 = 
åue
; ;

136 '7': 
¨gs
->
˝¨g
[
ch
 - '0'] = 
›èrg
; ;

138 
	`¥ötf
("îr‹: unknow¿swôch %c\n", 
ch
);

139 
	`ußge
(
¨gv
[0]);

144 if(!
¨gs
->
öfûe
) {

145 
¨gs
->
debug
 = 
åue
;

148 
	}
}

150 
	$¥öt_°©e
(
sim_c‹e_°©e_t
 *
°©e
)

152 
i
;

153 
	`¥ötf
("pc=%4.4x\n", 
°©e
->
pc
);

154 
i
 = 
SIM_CORE_NUM_GPREGS
-1; i >= 0; i--)

155 
	`¥ötf
("s%d=%4.4x ", 
i
, 
°©e
->
g¥_su≥r
[i]);

156 
	`¥ötf
("\n");

157 
i
 = 
SIM_CORE_NUM_GPREGS
-1; i >= 0; i--)

158 
	`¥ötf
("r%d=%4.4x ", 
i
, 
°©e
->
˘l
.
«med
.
g¥_u£r
[i]);

159 
	`¥ötf
("\n");

160 
	`¥ötf
("epc=%4.4xÉpc_s=%4.4x\n",

161 
°©e
->
˘l
.
«med
.
ïc
, sèã->˘l.«med.
ïc_ßved
);

162 
	`¥ötf
("swiarg=%4.4xÑu_s=%dÜl=%dÑu=%d gie=%d um=%d\n",

163 
	`STATUS_GET_SWIARG
(
°©e
->
˘l
.
«med
.
°©us
),

164 
	`STATUS_GET_UMSAVE
(
°©e
->
˘l
.
«med
.
°©us
),

165 
	`STATUS_GET_LL
(
°©e
->
˘l
.
«med
.
°©us
),

166 
	`STATUS_GET_RUMODE
(
°©e
->
˘l
.
«med
.
°©us
),

167 
	`STATUS_GET_GIE
(
°©e
->
˘l
.
«med
.
°©us
),

168 
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
));

169 
	`¥ötf
("ifhdl=%4.4x dfhdl=%4.4x swihdl=%4.4x illhdl=%4.4xÖrvhdl=%4.4x\n",

170 
°©e
->
˘l
.
«med
.
iÁu…hdl
, sèã->˘l.«med.
dÁu…hdl
,

171 
°©e
->
˘l
.
«med
.
swihdl
, sèã->˘l.«med.
ûl›hdl
,

172 
°©e
->
˘l
.
«med
.
¥iv›hdl
);

173 
	`¥ötf
("exöthdl[%d..0]: ", 
SIM_CORE_NUM_EXTINT
-1);

174 
i
 = 
SIM_CORE_NUM_EXTINT
-1; i >= 0; i--)

175 
	`¥ötf
("%4.4x ", 
°©e
->
˘l
.
«med
.
exihdl
[
i
]);

176 
	`¥ötf
("\n");

177 
	`¥ötf
(" iíabÀ[%d..0]: ", 
SIM_CORE_NUM_EXTINT
-1);

178 
i
 = 
SIM_CORE_NUM_EXTINT
-1; i >= 0; i--)

179 
	`¥ötf
("%d ", (
°©e
->
˘l
.
«med
.
õ«bÀ
 & (0x1 << 
i
)) != 0);

180 
	`¥ötf
("\n");

181 
	`¥ötf
("ùídög[%d..0]: ", 
SIM_CORE_NUM_EXTINT
-1);

182 
i
 = 
SIM_CORE_NUM_EXTINT
-1; i >= 0; i--)

183 
	`¥ötf
("%d ", (
°©e
->
˘l
.
«med
.
ùíd
 & (0x1 << 
i
)) != 0);

184 
	`¥ötf
("\n");

185 
	`¥ötf
(" iack[%d..0]: ", 
SIM_CORE_NUM_EXTINT
-1);

186 
i
 = 
SIM_CORE_NUM_EXTINT
-1; i >= 0; i--)

187 
	`¥ötf
("%d ", (
°©e
->
˘l
.
«med
.
ück
 & (0x1 << 
i
)) != 0);

188 
	`¥ötf
("\n");

189 
	`¥ötf
(" um˝í[%d..0]: ", 
SIM_CORE_NUM_EXTINT
-1);

190 
i
 = 
SIM_CORE_NUM_EXTINT
-1; i >= 0; i--)

191 
	`¥ötf
("%d ", (
°©e
->
˘l
.
«med
.
um˝í
 & (0x1 << 
i
)) != 0);

192 
	`¥ötf
("\n");

193 
	`¥ötf
("counter hi=%4.4xÜo=%4.4x\n",

194 
°©e
->
˘l
.
«med
.
cou¡î_high
, sèã->˘l.«med.
cou¡î_low
);

195 
	`¥ötf
("interÑegnum=%dÑegval=%4.4x\n",

196 
°©e
->
öãr
.
ªgnum
, sèã->öãr.
ªgvÆ
);

197 
	`¥ötf
("inter swiarg=%4.4xÑu_s=%dÜl=%dÑu=%d gie=%d um=%d\n",

198 
	`STATUS_GET_SWIARG
(
°©e
->
öãr
.
√w°©
),

199 
	`STATUS_GET_UMSAVE
(
°©e
->
öãr
.
√w°©
),

200 
	`STATUS_GET_LL
(
°©e
->
öãr
.
√w°©
),

201 
	`STATUS_GET_RUMODE
(
°©e
->
öãr
.
√w°©
),

202 
	`STATUS_GET_GIE
(
°©e
->
öãr
.
√w°©
),

203 
	`STATUS_GET_UM
(
°©e
->
öãr
.
√w°©
));

204 
	`¥ötf
("öã∏√xçc=%4.4x\n", 
°©e
->
öãr
.
√xçc
);

205 
	`¥ötf
("inter instr_stall: %s data_stall: %s\n",

206 
°©e
->
öãr
.
ö°r_°Æl
 ? "true " : "false",

207 
°©e
->
öãr
.
d©a_°Æl
 ? "true " : "false");

208 
	`¥ötf
("interÅype: ");

209 
°©e
->
öãr
.
ty≥
) {

210 
GPRUP
: 
	`¥ötf
("GPRUP\n"); ;

211 
BRANCH
: 
	`¥ötf
("BRANCH\n"); ;

212 
BRLINK
: 
	`¥ötf
("BRLINK\n"); ;

213 
LOAD
: 
	`¥ötf
("LOAD\n"); ;

214 
LOADLNK
: 
	`¥ötf
("LOADLNK\n"); ;

215 
STORE
: 
	`¥ötf
("STORE\n"); ;

216 
SCOND
: 
	`¥ötf
("SCOND\n"); ;

217 
CTLUP
: 
	`¥ötf
("CTLUP\n"); ;

218 
CPREAD
: 
	`¥ötf
("CPREAD\n"); ;

219 
TRAP
: 
	`¥ötf
("TRAP\n"); ;

220 
RFI
: 
	`¥ötf
("RFI\n"); ;

221 
SLEEP
: 
	`¥ötf
("SLEEP\n"); ;

223 
	}
}

225 
	$¥öt_ouçut
(
sim_c‹e_ouçut_t
 *
ouçut
)

227 
	`¥ötf
(" data value=%4.4xáddr=%4.4xÑead=%sÑeq=%s\n",

228 
ouçut
->
d©a
.
vÆue
, ouçut->d©a.
addr
,

229 
ouçut
->
d©a
.
ªad
 ? "true " : "false",

230 
ouçut
->
d©a
.
ªque°
 ? "true " : "false");

231 
	`¥ötf
("instr value=%4.4xáddr=%4.4xÑead=%sÑeq=%s\n",

232 
ouçut
->
ö°r
.
vÆue
, ouçut->ö°r.
addr
,

233 
ouçut
->
ö°r
.
ªad
 ? "true " : "false",

234 
ouçut
->
ö°r
.
ªque°
 ? "true " : "false");

235 
	`¥ötf
("c›o¯£l=%d ", 
ouçut
->
c›roc
.
£À˘
);

236 
ouçut
->
c›roc
.
›
) {

237 
COPROC_OP_NONE
: 
	`¥ötf
("op=none"); ;

238 
COPROC_OP_READ
: 
	`¥ötf
("op=read"); ;

239 
COPROC_OP_WRITE
: 
	`¥ötf
("op=write"); ;

240 
COPROC_OP_EXEC
: 
	`¥ötf
("op=exec"); ;

242 
	`¥ötf
("\n");

244 
	`¥ötf
("exöt_ack[%d..0]: ", 
SIM_CORE_NUM_EXTINT
-1);

245 
i
 = 
SIM_CORE_NUM_EXTINT
-1; i >= 0; i--)

246 
	`¥ötf
("%d ", 
ouçut
->
exöt_ack
[
i
]);

248 
	`¥ötf
("\n");

249 
	`¥ötf
("u£∏mode: %s\n", 
ouçut
->
u£r_mode
 ? "true " : "false");

250 
	}
}

252 
	$¥öt_öput
(
sim_c‹e_öput_t
 *
öput
)

254 
i
;

255 
	`¥ötf
(" data value=%4.4x valid=%s fault=%s\n",

256 
öput
->
d©a
.
vÆue
,

257 
öput
->
d©a
.
vÆid
 ? "true " : "false",

258 
öput
->
d©a
.
Áu…
 ? "true " : "false");

259 
	`¥ötf
(" instr value=%4.4x valid=%s fault=%s\n",

260 
öput
->
ö°r
.
vÆue
,

261 
öput
->
ö°r
.
vÆid
 ? "true " : "false",

262 
öput
->
ö°r
.
Áu…
 ? "true " : "false");

263 
	`¥ötf
("c›ro¯vÆue=%4.4x\n", 
öput
->
c›roc
.
vÆue
);

264 
	`¥ötf
("exöt_sig[%d..0]: ", 
SIM_CORE_NUM_EXTINT
-1);

265 
i
 = 
SIM_CORE_NUM_EXTINT
-1; i >= 0; i--)

266 
	`¥ötf
("%d ", 
öput
->
exöt_sig
[
i
]);

267 
	`¥ötf
("\n");

268 
	`¥ötf
("Œ invÆid©e=%s\n", 
öput
->
Œ_övÆ
 ? "true " : "false");

269 
	}
}

271 
	$¥öt_mem_°©e
(
sim_memif_°©e_t
 *
°©e
)

273 
	`¥ötf
("delay=%d quiescent=%s\n",

274 
°©e
->
dñay
, sèã->
quõs˚¡
 ? "true " : "false");

275 
	}
}

277 *
	$°rchrs
(*
°r
, *
ch¨s
, 
boﬁ
 
ídm©ch
)

279 *
off
;

280 ; *
ch¨s
; chars++)

281 if((
off
 = 
	`°rchr
(
°r
, *
ch¨s
)))

282  
off
;

283 if(
ídm©ch
)

284  
	`°rchr
(
°r
, 0);

285  
NULL
;

286 
	}
}

289 
	$•lô
(*
°r
, *
£ps
, 
boﬁ
 
zîﬁí
,

290 **
¨gs
, 
¨g¶í
,

291 *
num¨gs
, **
löeout
)

293 *
curs‹
, *
íd
;

294 
curs‹
 = 
°r
;

295 *
num¨gs
 = 0;

296 *
löeout
 = 
NULL
;

298 if(!
curs‹
)  0;

300 
åue
) {

301 
íd
 = 
	`°rchrs
(
curs‹
, 
£ps
, 
åue
);

302 if((
íd
 - 
curs‹
Ë|| 
zîﬁí
) {

303 if(!
¨g¶í
) {

304 if(*
curs‹
 || 
zîﬁí
) {

305 *
löeout
 = 
curs‹
;

311 *
¨gs
 = 
curs‹
;

312 (*
num¨gs
)++;

313 
¨gs
++;

314 
¨g¶í
--;

316 if(!*
íd
) ;

317 *
íd
 = 0;

318 
curs‹
 = 
íd
+1;

322 
	}
}

324 
	$cy˛e
()

326 
i
;

327 
°©us
, 
˝num
;

330 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

331 if(
c›roc_öfo
[
i
].
„tch
) {

333 
°©us
 = 
c›roc_öfo
[
i
].
	`„tch
(c›roc_öfo[i].
°©e
);

337 
	`sim_memif_ac˚ss
(&
c‹e_öput
.
ö°r
, &
c‹e_ouçut
.ö°r, &
imem_°©e
);

340 
	`sim_c‹e_exec
(&
c‹e_°©e
, &
c‹e_ouçut
, &
c‹e_öput
);

342 if(0 <(
˝num
 = 
	`sim_c‹e_˝_›_≥ndög
(
COPROC_OP_EXEC
, &
c‹e_ouçut
))) {

343 if(
˝num
 < (Ë
	`ARRLEN
(
c›roc_öfo
Ë&& c›roc_öfo[˝num].
exec
) {

344 
c›roc_öfo
[
˝num
].
	`exec
(c›roc_öfo[˝num].
°©e
);

349 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

350 if(
c›roc_öfo
[
i
].
d©a
) {

352 
°©us
 = 
c›roc_öfo
[
i
].
	`d©a
(c›roc_öfo[i].
°©e
);

356 
	`sim_memif_ac˚ss
(&(
c‹e_öput
.
d©a
), &(
c‹e_ouçut
.d©a), &
dmem_°©e
);

359 if(0 <(
˝num
 = 
	`sim_c‹e_˝_›_≥ndög
(
COPROC_OP_READ
, &
c‹e_ouçut
))) {

360 if(
˝num
 < (Ë
	`ARRLEN
(
c›roc_öfo
)) {

361 
	`sim_˝_ªad
(
c›roc_öfo
[
˝num
].
°©e
);

365 if(0 <(
˝num
 = 
	`sim_c‹e_˝_›_≥ndög
(
COPROC_OP_WRITE
, &
c‹e_ouçut
))) {

366 if(
˝num
 < (Ë
	`ARRLEN
(
c›roc_öfo
)) {

367 
	`sim_˝_wrôe
(
c›roc_öfo
[
˝num
].
°©e
);

371 
°©us
 = 
	`sim_c‹e_upd©e
(&
c‹e_°©e
, &
c‹e_ouçut
, &
c‹e_öput
);

373  
°©us
;

374 
	}
}

376 
	$ª£t_c‹e
()

378 
	`¥ötf
("resetting core stateÅoÖower-on values\n");

379 
	`sim_c‹e_°©e_öô
(&
c‹e_°©e
);

380 
	`sim_c‹e_öput_öô
(&
c‹e_öput
);

381 
	`sim_c‹e_ouçut_öô
(&
c‹e_ouçut
);

382 
	`sim_memif_öô
(&
dmem_°©e
, 
physmem
, 
PHYSMEM_NUMWORDS
, "data");

383 
	`sim_memif_öô
(&
imem_°©e
, 
physmem
, 
PHYSMEM_NUMWORDS
, "inst");

384 
	}
}

386 
	$ª£t_mem
()

388 
	`¥ötf
("clearing memory\n");

389 
	`mem£t
(
physmem
, 0, (physmem));

390 
	}
}

393 
	$ª£t
()

395 
i
;

396 
°©us
;

397 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

398 
	`sim_˝_hdr_ª£t
(
c›roc_öfo
[
i
].
°©e
);

399 if(!
c›roc_öfo
[
i
].
ª£t
) {

402 if((
°©us
 = 
c›roc_öfo
[
i
].
	`ª£t
(c›roc_öfo[i].
°©e
))) {

403 
	`¥ötf
("error: coproc %s (%d)Ñeset failed (%d)\n",

404 
c›roc_öfo
[
i
].
«me
, i, 
°©us
);

408 
	`ª£t_c‹e
();

409 
	`ª£t_mem
();

411 
	}
}

413 
	$do_öãΩ_ª£t
(
¨gc
, *
¨gv
[])

415 if(
¨gc
 == 0) {

416 
	`ª£t_c‹e
();

418 } if(
¨gc
 == 1) {

419 if(!
	`°rcmp
(
¨gv
[0], "core")) {

420 
	`ª£t_c‹e
();

421 } if(!
	`°rcmp
(
¨gv
[0], "mem")) {

422 
	`ª£t_mem
();

423 } if(!
	`°rcmp
(
¨gv
[0], "all")) {

424 
	`ª£t
();

427 
	`¥ötf
("usage:Ñeset {core | mem |áll}\n");

430 
	}
}

432 
	$do_öãΩ_lﬂd
(
¨gc
, *
¨gv
[])

434 *
image
;

435 
size_t
 
image_byãs
;

436 
size_t
 
image_w‹ds
;

437 
uöt16_t
 
off£t
 = 0;

438 
°©us
;

439 if(
¨gc
 < 1 ||árgc > 2) {

440 
	`¥ötf
("error: usage:Üoad <file> [<offset>]\n");

443 if(
¨gc
 == 2) {

444 
off£t
 = 
	`°πﬁ
(
¨gv
[1], 
NULL
, 0);

446 
	`¥ötf
("ªadög %s\n", 
¨gv
[0]);

447 
°©us
 = 
	`lﬂd_fûe
(
¨gv
[0], &
image
, &
image_byãs
);

448 if(
°©us
) {

451 
image_w‹ds
 = 
image_byãs
 / (
physmem
[0]);

452 if(
off£t
 + 
image_w‹ds
 > 
PHYSMEM_NUMWORDS
) {

453 
	`¥ötf
("error: offset + imageÜenÉxceeds maxáddr\n");

456 
	`mem˝y
(
physmem
 + 
off£t
, 
image
, 
image_byãs
);

457 
	`¥ötf
("%lu w‹d†lﬂdedáàoff£à0x%x\n", 
image_w‹ds
, 
off£t
);

459 
	}
}

461 
	$do_öãΩ_gŸo
(
¨gc
, *
¨gv
[])

463 
uöt16_t
 
°¨èddr
;

464 if(
¨gc
 != 1) {

465 
	`¥ötf
("error: usage: goto <addr>\n");

468 
	`¥ötf
("£âögÖ¯tÿ0x%4.4x\n", 
°¨èddr
);

469 
°¨èddr
 = 
	`°πﬁ
(
¨gv
[0], 
NULL
, 0);

470 
c‹e_ouçut
.
ö°r
.
ªque°
 = 
åue
;

471 
c‹e_ouçut
.
ö°r
.
ªad
 = 
åue
;

472 
c‹e_ouçut
.
ö°r
.
addr
 = 
°¨èddr
;

473 
c‹e_°©e
.
pc
 = 
°¨èddr
;

475 
	}
}

477 
	$do_öãΩ_°ï
(
¨gc
, *
¨gv
[])

479 
num°ïs
, 
°©us
;

480 if(
¨gc
 == 1) {

481 
num°ïs
 = 
	`°πﬁ
(
¨gv
[0], 
NULL
, 0);

482 } if(
¨gc
 == 0) {

483 
num°ïs
 = 1;

485 
	`¥ötf
("error: usage step [<numsteps>] (default 1)\n");

489 
	`¥ötf
("ru¬ög %u cy˛es\n", 
num°ïs
);

490 
°©us
 = 0;

491 
num°ïs
-- && !
°©us
) {

492 
°©us
 = 
	`cy˛e
();

494 if(
°©us
 < 0) {

498 
	}
}

500 
	$do_öãΩ_c⁄töue
()

502 
°©us
;

503 
	`sig«l
(
SIGINT
, 
un£t_run_sim
);

504 
	`¥ötf
("continuing\n");

505 
°©us
 = 0;

506 
g_c⁄töue
 && !
°©us
) {

507 
°©us
 = 
	`cy˛e
();

509 if(
°©us
 < 0) {

513 
	}
}

515 
	$do_öãΩ_ªad
(
¨gc
, *
¨gv
[])

517 
i
;

518 
addr
;

519 
uöt16_t
 
vÆ
;

520 if(
¨gc
 == 0) {

521 
	`¥ötf
("error: usage:Ñead <addr> [<addr> ...]\n");

525 
i
 = 0; i < 
¨gc
; i++) {

526 
addr
 = 
	`°πﬁ
(
¨gv
[
i
], 
NULL
, 0);

527 if(
addr
 > 
PHYSMEM_NUMWORDS
) {

528 
	`¥ötf
("0x%4.4x: (övÆ)\n", 
addr
);

530 
vÆ
 = 
physmem
[
addr
];

531 
	`¥ötf
("0x%4.4x: 0x%4.4x\n", 
addr
, 
vÆ
);

535 
	}
}

537 
	$do_öãΩ_show
(
¨gc
, *
¨gv
[])

539 if(
¨gc
 == 0) {

540 
	`¥ötf
("*** STATE ***\n");

541 
	`¥öt_°©e
(&
c‹e_°©e
);

542 
	`¥ötf
("*** OUTPUT ***\n");

543 
	`¥öt_ouçut
(&
c‹e_ouçut
);

544 
	`¥ötf
("*** INPUT ***\n");

545 
	`¥öt_öput
(&
c‹e_öput
);

546 
	`¥ötf
("*** INSTR MEM ***\n");

547 
	`¥öt_mem_°©e
(&
imem_°©e
);

548 
	`¥ötf
("*** DATA MEM ***\n");

549 
	`¥öt_mem_°©e
(&
dmem_°©e
);

550 } if(
	`°rcmp
(
¨gv
[0], "state") == 0) {

551 
	`¥ötf
("*** STATE ***\n");

552 
	`¥öt_°©e
(&
c‹e_°©e
);

553 } if(
	`°rcmp
(
¨gv
[0], "output") == 0) {

554 
	`¥ötf
("*** OUTPUT ***\n");

555 
	`¥öt_ouçut
(&
c‹e_ouçut
);

556 } if(
	`°rcmp
(
¨gv
[0], "input") == 0) {

557 
	`¥ötf
("*** INPUT ***\n");

558 
	`¥öt_öput
(&
c‹e_öput
);

559 } if(
	`°rcmp
(
¨gv
[0], "instr") == 0) {

560 
	`¥ötf
("*** INSTR MEM ***\n");

561 
	`¥öt_mem_°©e
(&
imem_°©e
);

562 } if(
	`°rcmp
(
¨gv
[0], "data") == 0) {

563 
	`¥ötf
("*** DATA MEM ***\n");

564 
	`¥öt_mem_°©e
(&
dmem_°©e
);

566 
i
;

567 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

568 if(!
	`°rcmp
(
¨gv
[0], 
c›roc_öfo
[
i
].
«me
)) {

569 
	`¥ötf
("*** COPROCESSOR: %†***\n", 
c›roc_öfo
[
i
].
«me
);

570 
c›roc_öfo
[
i
].
	`¥öt
(c›roc_öfo[i].
°©e
);

574 if(
i
 =
	`ARRLEN
(
c›roc_öfo
)) {

575 
	`¥ötf
("error: usage: show [state|output|input|instr|data");

576 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

577 
	`¥ötf
("|%s", 
c›roc_öfo
[
i
].
«me
);

579 
	`¥ötf
("]\n");

583 
	}
}

585 
	$do_öãΩ_åa˚
(
¨gc
, *
¨gv
[])

587 
i
;

588 
uöt32_t
 
Àvñ
;

590 
¨gc
) {

592 
îr‹
;

595 
	`¥ötf
("c‹ê%8.8x\n", 
c‹e_°©e
.
åa˚Àvñ
);

596 
	`¥ötf
("imem %8.8x\n", 
imem_°©e
.
åa˚Àvñ
);

597 
	`¥ötf
("dmem %8.8x\n", 
dmem_°©e
.
åa˚Àvñ
);

598 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

599 
	`¥ötf
("%s %8.8x\n",

600 
c›roc_öfo
[
i
].
«me
,

601 
c›roc_öfo
[
i
].
°©e
->
åa˚Àvñ
);

606 
î∫o
 = 0;

607 
Àvñ
 = 
	`°πﬁ
(
¨gv
[1], 
NULL
, 0);

608 if(
î∫o
) {

609 
	`¥ötf
("övÆidÅø˚Àvñ: %s\n", 
¨gv
[1]);

610 
îr‹
;

613 if(!
	`°rcmp
(
¨gv
[0], "core")) {

614 
c‹e_°©e
.
åa˚Àvñ
 = 
Àvñ
;

615 
	`¥ötf
("c‹êåa˚Üevñ sëÅÿ%8.8x\n", 
c‹e_°©e
.
åa˚Àvñ
);

616 } if(!
	`°rcmp
(
¨gv
[0], "imem")) {

617 
imem_°©e
.
åa˚Àvñ
 = 
Àvñ
;

618 
	`¥ötf
("imemÅø˚Üevñ sëÅÿ%8.8x\n", 
imem_°©e
.
åa˚Àvñ
);

619 } if(!
	`°rcmp
(
¨gv
[0], "dmem")) {

620 
dmem_°©e
.
åa˚Àvñ
 = 
Àvñ
;

621 
	`¥ötf
("dmemÅø˚Üevñ sëÅÿ%8.8x\n", 
dmem_°©e
.
åa˚Àvñ
);

623 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

624 if(! 
	`°rcmp
(
c›roc_öfo
[
i
].
«me
, 
¨gv
[0])) {

625 
c›roc_öfo
[
i
].
°©e
->
åa˚Àvñ
 = 
Àvñ
;

626 
	`¥ötf
("%sÅraceÜevel setÅo %8.8x\n",

627 
c›roc_öfo
[
i
].
«me
,

628 
c›roc_öfo
[
i
].
°©e
->
åa˚Àvñ
);

632 if(
i
 =
	`ARRLEN
(
c›roc_öfo
)) {

633 
	`¥ötf
("unknow¿åa˚Å¨gë: %s\n", 
¨gv
[0]);

634 
îr‹
;

642 
îr‹
:

643 
	`¥ötf
("usage:Årace\n");

644 
	`¥ötf
("usage:Årace [<target> <level>]\n");

645 
	`¥ötf
("<target> is one of:\n");

646 
	`¥ötf
("core\ndmem\nimem\n");

647 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

648 
	`¥ötf
("%s\n", 
c›roc_öfo
[
i
].
«me
);

652 
	}
}

654 
	$öãΩªt
(*
cmd°r
)

656 *
¨gv
[16];

657 *
comm™ds
[16];

658 
°©us
 = 0;

659 
¨gc
, 
numcomm™ds
;

660 *
curs‹
;

661 *
cmdcurs‹
 = 
cmd°r
;

662 
cmd
;

664 
°©us
 = 
	`•lô
(
cmdcurs‹
, ";", 
Ál£
,

665 
comm™ds
, (commands) / (commands[0]),

666 &
numcomm™ds
, &
cmdcurs‹
);

668 
cmd
 = 0; cmd < 
numcomm™ds
 && ! 
°©us
; cmd++) {

669 
curs‹
 = 
comm™ds
[
cmd
];

670 
°©us
 = 
	`•lô
(
curs‹
, " \t", 
Ál£
,

671 
¨gv
, (argv) / (argv[0]),

672 &
¨gc
, &
curs‹
);

676 
¨g
;

677 
¨g
 = 0;árg < 
¨gc
;árg++)

678 
	`¥ötf
("¨g %d: %s\n", 
¨g
, 
¨gv
[arg]);

682 if(!
	`°rcmp
(
¨gv
[0], "quit")) {

684 } if(!
	`°rcmp
(
¨gv
[0], "reset")) {

685 
°©us
 = 
	`do_öãΩ_ª£t
(
¨gc
-1, &(
¨gv
[1]));

686 } if(!
	`°rcmp
(
¨gv
[0], "load")) {

687 
°©us
 = 
	`do_öãΩ_lﬂd
(
¨gc
-1, &(
¨gv
[1]));

688 } if(!
	`°rcmp
(
¨gv
[0], "goto")) {

689 
°©us
 = 
	`do_öãΩ_gŸo
(
¨gc
-1, &(
¨gv
[1]));

690 } if(!
	`°rcmp
(
¨gv
[0], "cycle")) {

691 
°©us
 = 
	`do_öãΩ_°ï
(
¨gc
-1, &(
¨gv
[1]));

692 } if(!
	`°rcmp
(
¨gv
[0], "continue")) {

693 
°©us
 = 
	`do_öãΩ_c⁄töue
();

694 } if(!
	`°rcmp
(
¨gv
[0], "read")) {

695 
°©us
 = 
	`do_öãΩ_ªad
(
¨gc
-1, &(
¨gv
[1]));

696 } if(!
	`°rcmp
(
¨gv
[0], "disassemble")) {

697 
	`¥ötf
("unim∂emíãd\n"); 
°©us
 = 0;

698 } if(!
	`°rcmp
(
¨gv
[0], "write")) {

699 
	`¥ötf
("unim∂emíãd\n"); 
°©us
 = 0;

700 } if(!
	`°rcmp
(
¨gv
[0], "assemble")) {

701 
	`¥ötf
("unim∂emíãd\n"); 
°©us
 = 0;

702 } if(!
	`°rcmp
(
¨gv
[0], "show")) {

703 
°©us
 = 
	`do_öãΩ_show
(
¨gc
-1, &(
¨gv
[1]));

704 } if(!
	`°rcmp
(
¨gv
[0], "trace")) {

705 
°©us
 = 
	`do_öãΩ_åa˚
(
¨gc
-1, &(
¨gv
[1]));

707 
	`¥ötf
("available commands:Üoad goto cycle continueÑead"

709 
°©us
 = 0;

712  
°©us
;

713 
	}
}

716 
	$maö
(
¨gc
, *
¨gv
[])

718 
°©us
;

719 
i
;

720 
˛i_¨gs_t
 
¨gs
;

721 
löebuf
[256], 
œ°löe
[256];

725 
°©us
 = 
	`∑r£_˛i
(
¨gc
, 
¨gv
, &
¨gs
);

726 if(
°©us
) {

732 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

734 if(!
c›roc_öfo
[
i
].
öô
 && 
¨gs
.
˝¨g
[i]) {

735 
	`¥ötf
("error: coproc %s (%d) hasÇo init callback\n",

736 
c›roc_öfo
[
i
].
«me
, i);

740 
	`sim_˝_hdr_öô
(
c›roc_öfo
[
i
].
°©e
, i, 
¨gs
.
˝¨g
[i],

741 &
c‹e_öput
, &
c‹e_ouçut
);

742 if(
c›roc_öfo
[
i
].
öô
) {

743 
°©us
 = 
c›roc_öfo
[
i
].
	`öô
(c›roc_öfo[i].
°©e
);

744 if(
°©us
) {

745 
	`¥ötf
("error: coproc %s (%d) init failed (%d)\n",

746 
c›roc_öfo
[
i
].
«me
, i, 
°©us
);

754 
	`ª£t
();

757 
	`mem£t
(
löebuf
, 0, (linebuf));

758 
	`mem£t
(
œ°löe
, 0, (lastline));

760 if(
¨gs
.
öfûe
) {

761 
	`¢¥ötf
(
löebuf
, (linebuf), "load %s %d; goto %d;",

762 
¨gs
.
öfûe
,árgs.
lﬂdoff
,árgs.
°¨èddr
);

763 
°©us
 = 
	`öãΩªt
(
löebuf
);

764 if(
°©us
) {

765 
	`¥ötf
("initializationÉrror\n");

770 if(!
¨gs
.
debug
) {

771 
	`¢¥ötf
(
löebuf
, (linebuf), "continue");

772 
öãΩ
;

775 
°©us
 = 0;

776 !
°©us
) {

777 
	`¥ötf
("> ");

778 
	`fÊush
(
°dout
);

779 
	`fgës
(
löebuf
, ÷öebuf), 
°dö
);

780 
löebuf
[(linebuf) - 1] = 0;

781 if(
	`°rchr
(
löebuf
, '\n')) *strchr(linebuf, '\n') = 0;

782 if(
	`°æí
(
löebuf
) == 0) {

783 
	`mem˝y
(
löebuf
, 
œ°löe
, (linebuf));

784 
	`¥ötf
("%s\n", 
löebuf
);

786 
öãΩ
:

787 
	`mem˝y
(
œ°löe
, 
löebuf
, (lastline));

788 
°©us
 = 
	`öãΩªt
(
löebuf
);

792 if(
¨gs
.
hÆt°©e
) {

793 
	`do_öãΩ_show
(0, 
NULL
);

797 
i
 = 0; i < 
	`ARRLEN
(
c›roc_öfo
); i++) {

798 if(
c›roc_öfo
[
i
].
deöô
) {

799 
c›roc_öfo
[
i
].
	`deöô
(c›roc_öfo[i].
°©e
);

804 
	}
}

	@sim_core.c

1 
	~"sim_c‹e.h
"

2 
	~<as£π.h
>

3 
	~<°rög.h
>

4 
	~"sim_c‹e.h
"

5 
	~"ö°ru˘i⁄s.h
"

6 
	~<°dio.h
>

8 #i‡! 
deföed
(
NOTRACE
)

9 
	#TRACE
(
STATE
, 
LEVEL
, ...Ëdo{if((STATE)->
åa˚Àvñ
 & (LEVEL))
	`¥ötf
–
__VA_ARGS__
 );}0)

	)

10 
	#TRACEBLOCK
(
STATE
, 
LEVEL
, 
BLOCK
Ëdo{if((STATE)->
åa˚Àvñ
 & (LEVELËËBLOCK}0)

	)

12 
	#TRACE
(
STATE
, 
LEVEL
 ...)

	)

13 
	#TRACEBLOCK
(
STATE
, 
LEVEL
, 
BLOCK
)

	)

16 
sim_c‹e_ouçut_t
 *
	$sim_c‹e_ouçut_öô
(

17 
sim_c‹e_ouçut_t
 *
ouçut
)

19 if(
ouçut
)

20 
	`mem£t
(
ouçut
, 0, (*output));

21  
ouçut
;

22 
	}
}

24 
sim_c‹e_öput_t
 *
	$sim_c‹e_öput_öô
(

25 
sim_c‹e_öput_t
 *
öput
)

27 if(
öput
)

28 
	`mem£t
(
öput
, 0, (*input));

29  
öput
;

30 
	}
}

32 
sim_c‹e_°©e_t
 *
	$sim_c‹e_°©e_öô
(

33 
sim_c‹e_°©e_t
 *
°©e
)

35 if(
°©e
)

36 
	`mem£t
(
°©e
, 0, (*state));

37  
°©e
;

38 
	}
}

42 
	mALU_OP_OR
,

43 
	mALU_OP_NAND
,

44 
	mALU_OP_AND
,

45 
	mALU_OP_XOR
,

46 
	mALU_OP_ADD
,

47 
	mALU_OP_SUB
,

48 
	mALU_OP_ADDC
,

49 
	mALU_OP_SUBC
,

50 
	mALU_OP_SHL
,

51 
	mALU_OP_SHR
,

52 
	mALU_OP_SHRA
,

53 
	mALU_OP_LHSWAP
,

54 
	mALU_OP_ROT
,

55 
	mALU_OP_SHL8OR
,

56 } 
	tÆu_›_t
;

58 
uöt16_t
 
	$Æu_exec
(
Æu_›_t
 
›
, 
uöt16_t
 
¨g0
, uöt16_à
¨g1
 )

60 
›
) {

61 
ALU_OP_OR
:  
¨g0
 | 
¨g1
;

62 
ALU_OP_NAND
:  ~–
¨g0
 & 
¨g1
 );

63 
ALU_OP_AND
:  
¨g0
 & 
¨g1
;

64 
ALU_OP_XOR
:  
¨g0
 ^ 
¨g1
;

65 
ALU_OP_ADD
:  
¨g0
 + 
¨g1
;

66 
ALU_OP_SUB
:  
¨g0
 - 
¨g1
;

67 
ALU_OP_ADDC
:

68  ( ((
uöt32_t
Ë
¨g0
 + (uöt32_tË
¨g1
) > 0x0000FFFF ?

70 
ALU_OP_SUBC
:

71  ( ((
uöt32_t
Ë
¨g0
 - (uöt32_tË
¨g1
) > 0x0000FFFF ?

73 
ALU_OP_SHL
:  
¨g0
 << 
¨g1
;

74 
ALU_OP_SHR
:  
¨g0
 >> 
¨g1
;

75 
ALU_OP_SHRA
:  (
öt16_t
Ë
¨g0
 >> 
¨g1
;

76 
ALU_OP_LHSWAP
:

77  ((
¨g0
 & 0x00FF) << 8) | ((arg0 & 0xFF00) >> 8);

78 
ALU_OP_ROT
:

79 
¨g1
 &= 0xF;

80  (
¨g0
 << 
¨g1
) | (arg0 >> (16-arg1));

81 
ALU_OP_SHL8OR
:

82  ((
¨g0
 & 0x00FFË<< 8Ë| (
¨g1
 & 0x00FF);

83 : 
	`as£π
(0); ;

86 
	}
}

88 
uöt16_t
 
	$g¥eg_ªad
(
sim_c‹e_°©e_t
 *
°©e
, 
ªgnum
)

90 if(
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
)) {

91  
°©e
->
˘l
.
«med
.
g¥_u£r
[
ªgnum
];

93  
°©e
->
g¥_su≥r
[
ªgnum
];

95 
	}
}

97 
	$g¥eg_wrôe
(
sim_c‹e_°©e_t
 *
°©e
, 
ªgnum
, 
uöt16_t
 
ªgvÆ
)

99 if(
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
)) {

100 
°©e
->
˘l
.
«med
.
g¥_u£r
[
ªgnum
] = 
ªgvÆ
;

102 
°©e
->
g¥_su≥r
[
ªgnum
] = 
ªgvÆ
;

104 
	}
}

106 
	$°©us_å≠
(
uöt16_t
 *
°©
)

108 
	`STATUS_SET_LL
(*
°©
, 
Ál£
);

109 
	`STATUS_SET_UMSAVE
(*
°©
, 
	`STATUS_GET_RUMODE
(*stat));

110 
	`STATUS_SET_RUMODE
(*
°©
, 
	`STATUS_GET_UM
(*stat));

111 
	`STATUS_SET_UM
(*
°©
, 
Ál£
);

112 
	`STATUS_SET_GIE
(*
°©
, 
Ál£
);

113 
	}
}

115 
	$°©us_rfi
(
uöt16_t
 *
°©
)

117 
	`STATUS_SET_LL
(*
°©
, 
Ál£
);

118 
	`STATUS_SET_UM
(*
°©
, 
	`STATUS_GET_RUMODE
(*stat));

119 
	`STATUS_SET_RUMODE
(*
°©
, 
	`STATUS_GET_UMSAVE
(*stat));

120 
	`STATUS_SET_GIE
(*
°©
, 
åue
);

121 
	}
}

123 
	#TEST_BIT
(
FIELD
, 
BIT
) \

124 ((
FIELD
Ë& (0x1 << (
BIT
)))

	)

126 
	#SET_BIT
(
FIELD
, 
BIT
, 
VAL
) \

127 ((
FIELD
Ë((FIELDË& ~(1 << (
BIT
))Ë| (((
VAL
Ë? 1 : 0Ë<< (BIT)))

	)

129 
	$check_≥ndög_öãºu±
(

130 
sim_c‹e_°©e_t
 *
°©e
,

131 
sim_c‹e_öput_t
 *
öput
)

133 
i
;

134 
i
 = 0; i < 
SIM_CORE_NUM_EXTINT
; i++) {

135 if(
öput
->
exöt_sig
[
i
] &&

136 
	`TEST_BIT
(
°©e
->
˘l
.
«med
.
õ«bÀ
, 
i
) &&

137 
	`STATUS_GET_GIE
(
°©e
->
˘l
.
«med
.
°©us
)) {

138  
i
;

142 
	}
}

145 
	$sim_c‹e_exec
(

146 
sim_c‹e_°©e_t
 *
°©e
,

147 
sim_c‹e_ouçut_t
 *
ouçut
,

148 
sim_c‹e_öput_t
 *
öput
)

150 
i
;

151 
uöt16_t
 
ö°r_vÆue
;

152 
›code
, 
subcode
, 
fõlds
[3];

154 
uöt16_t
 
Æu_¨g0
, 
Æu_¨g1
;

155 
Æu_›_t
 
Æu_›
;

157 
	`TRACE
(
°©e
, 1, "c‹e:Éxe¯p¯%x\n", sèã->
pc
);

159 if(
°©e
->
öãr
.
d©a_°Æl
) {

160 
	`TRACE
(
°©e
, 1, "core:Éxec data stall\n");

169 if(
°©e
->
¶ìpög
) {

170 
	`TRACE
(
°©e
, 1, "core:Éxec sleeping\n");

172 
i
 = 
	`check_≥ndög_öãºu±
(
°©e
, 
öput
);

173 if(
i
 >= 0) {

174 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
exihdl
[
i
];

175 
	`TRACE
(
°©e
, 1, "c‹e:Éxe¯≥ndög i¡îru± %d\n", 
i
);

176 
å≠
;

178 
föish
;

181 if(! 
öput
->
ö°r
.
vÆid
) {

182 if(! 
öput
->
ö°r
.
Áu…
) {

184 
°©e
->
öãr
.
ö°r_°Æl
 = 
åue
;

185 
	`TRACE
(
°©e
, 1, "core:Éxec instr stall\n");

189 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
iÁu…hdl
;

190 
°©e
->
öãr
.
ªgvÆ
 = sèã->
pc
;

191 
	`TRACE
(
°©e
, 1, "c‹e:Éxe¯ö°∏ªad fau…áà%x\n", sèã->
pc
);

192 
å≠
;

195 
°©e
->
öãr
.
ö°r_°Æl
 = 
Ál£
;

197 
ö°r_vÆue
 = 
öput
->
ö°r
.
vÆue
;

200 
i
 = 
	`check_≥ndög_öãºu±
(
°©e
, 
öput
);

201 if(
i
 >= 0) {

202 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
exihdl
[
i
];

203 
	`TRACE
(
°©e
, 1, "c‹e:Éxe¯≥ndög i¡îru± %d\n", 
i
);

204 
å≠
;

212 if(
	`decode_ö°ru˘i⁄
(&
›code
, &
subcode
, &
fõlds
[0], 
ö°r_vÆue
)) {

213 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
ûl›hdl
;

214 
°©e
->
öãr
.
ªgvÆ
 = sèã->
pc
;

215 
	`TRACE
(
°©e
, 1, "c‹e:Éxe¯ö°∏decodêÁu…áà%x\n", sèã->
pc
);

216 
å≠
;

223 
°©e
->
öãr
.
√w°©
 = sèã->
˘l
.
«med
.
°©us
;

224 
°©e
->
öãr
.
√xçc
 = sèã->
pc
 + 1;

226 
›code
) {

228 
subcode
) {

230 
Æu_›
 = 
ALU_OP_OR
;

231 
	`TRACE
(
°©e
, 1, "core:Éxec or\n");

234 
Æu_›
 = 
ALU_OP_NAND
;

235 
	`TRACE
(
°©e
, 1, "core:ÉxecÇand\n");

238 
Æu_›
 = 
ALU_OP_AND
;

239 
	`TRACE
(
°©e
, 1, "core:Éxecánd\n");

242 
Æu_›
 = 
ALU_OP_XOR
;

243 
	`TRACE
(
°©e
, 1, "core:Éxec xor\n");

246 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[1]);

247 
Æu_¨g1
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[2]);

248 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

249 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

250 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

253 
subcode
) {

255 
Æu_›
 = 
ALU_OP_ADD
;

256 
	`TRACE
(
°©e
, 1, "core:Éxecádd\n");

259 
Æu_›
 = 
ALU_OP_SUB
;

260 
	`TRACE
(
°©e
, 1, "core:Éxec sub\n");

263 
Æu_›
 = 
ALU_OP_ADDC
;

264 
	`TRACE
(
°©e
, 1, "core:Éxecáddc\n");

267 
Æu_›
 = 
ALU_OP_SUBC
;

268 
	`TRACE
(
°©e
, 1, "core:Éxec subc\n");

271 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[1]);

272 
Æu_¨g1
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[2]);

273 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

274 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

275 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

278 
subcode
) {

280 
Æu_›
 = 
ALU_OP_SHL
;

281 
	`TRACE
(
°©e
, 1, "core:Éxec shl\n");

284 
Æu_›
 = 
ALU_OP_SHR
;

285 
	`TRACE
(
°©e
, 1, "core:Éxec shr\n");

288 
Æu_›
 = 
ALU_OP_SHRA
;

289 
	`TRACE
(
°©e
, 1, "core:Éxec shra\n");

292 
Æu_›
 = 
ALU_OP_ROT
;

293 
	`TRACE
(
°©e
, 1, "core:ÉxecÑot\n");

296 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[1]);

297 
Æu_¨g1
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[2]);

298 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

299 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

300 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

303 
subcode
) {

305 
Æu_›
 = 
ALU_OP_SHL
;

306 
	`TRACE
(
°©e
, 1, "core:Éxec shli\n");

309 
Æu_›
 = 
ALU_OP_SHR
;

310 
	`TRACE
(
°©e
, 1, "core:Éxec shri\n");

313 
Æu_›
 = 
ALU_OP_SHRA
;

314 
	`TRACE
(
°©e
, 1, "core:Éxec shrai\n");

317 
Æu_›
 = 
ALU_OP_ROT
;

318 
	`TRACE
(
°©e
, 1, "core:ÉxecÑoti\n");

321 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

322 
Æu_¨g1
 = 
fõlds
[1];

323 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

324 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

325 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

328 
	`TRACE
(
°©e
, 1, "core:ÉxecÜi\n");

329 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

330 
°©e
->
öãr
.
ªgvÆ
 = 
fõlds
[1];

331 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

334 
	`TRACE
(
°©e
, 1, "core:Éxec shlli\n");

335 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

336 
Æu_¨g1
 = 
fõlds
[1];

337 
Æu_›
 = 
ALU_OP_SHL8OR
;

338 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

339 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

340 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

343 
	`TRACE
(
°©e
, 1, "core:Éxec inci\n");

344 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

345 
Æu_¨g1
 = 
fõlds
[1];

346 
Æu_›
 = 
ALU_OP_ADD
;

347 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

348 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

349 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

352 
	`TRACE
(
°©e
, 1, "core:Éxec deci\n");

353 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

354 
Æu_¨g1
 = 
fõlds
[1];

355 
Æu_›
 = 
ALU_OP_SUB
;

356 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

357 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

358 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

361 
	`TRACE
(
°©e
, 1, "core:Éxec ori\n");

362 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

363 
Æu_¨g1
 = 
fõlds
[1];

364 
Æu_›
 = 
ALU_OP_OR
;

365 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

366 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

367 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

370 
	`TRACE
(
°©e
, 1, "core:Éxecándi\n");

371 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

372 
Æu_¨g1
 = 
fõlds
[1] | (0xFF << 8);

373 
Æu_›
 = 
ALU_OP_AND
;

374 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

375 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

376 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

379 
	`TRACE
(
°©e
, 1, "core:Éxec xori\n");

380 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

381 
Æu_¨g1
 = 
fõlds
[1];

382 
Æu_›
 = 
ALU_OP_XOR
;

383 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

384 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

385 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

388 
	`TRACE
(
°©e
, 1, "core:Éxec orih\n");

389 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

390 
Æu_¨g1
 = 
fõlds
[1] << 8;

391 
Æu_›
 = 
ALU_OP_OR
;

392 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

393 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

394 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

397 
	`TRACE
(
°©e
, 1, "core:Éxecándih\n");

398 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

399 
Æu_¨g1
 = (
fõlds
[1] << 8) | 0xFF;

400 
Æu_›
 = 
ALU_OP_AND
;

401 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

402 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

403 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

406 
	`TRACE
(
°©e
, 1, "core:Éxec xorih\n");

407 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

408 
Æu_¨g1
 = 
fõlds
[1] << 8;

409 
Æu_›
 = 
ALU_OP_XOR
;

410 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

411 
°©e
->
öãr
.
ªgvÆ
 = 
	`Æu_exec
(
Æu_›
, 
Æu_¨g0
, 
Æu_¨g1
);

412 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

415 
	`TRACE
(
°©e
, 1, "core:Éxec sleep\n");

416 if(
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
)) {

417 
	`TRACE
(
°©e
, 1, "core:Éxec insufficientÖriviledge\n");

418 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
¥iv›hdl
;

419 
å≠
;

421 
°©e
->
öãr
.
ty≥
 = 
SLEEP
;

424 
	`TRACE
(
°©e
, 1, "core:Éxec ba\n");

425 
Æu_¨g0
 = 
°©e
->
pc
;

426 
Æu_¨g1
 = 
fõlds
[0];

427 
°©e
->
öãr
.
ty≥
 = 
BRANCH
;

428 
°©e
->
öãr
.
√xçc
 = 
	`Æu_exec
(
ALU_OP_ADD
, 
Æu_¨g0
, 
Æu_¨g1
);

431 
	`TRACE
(
°©e
, 1, "core:Éxec bal\n");

432 
Æu_¨g0
 = 
°©e
->
pc
;

433 
Æu_¨g1
 = 
fõlds
[0];

434 
°©e
->
öãr
.
ªgnum
 = 7;

435 
°©e
->
öãr
.
ªgvÆ
 = sèã->
pc
 + 1;

436 
°©e
->
öãr
.
√xçc
 = 
	`Æu_exec
(
ALU_OP_ADD
, 
Æu_¨g0
, 
Æu_¨g1
);

437 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

440 
	`TRACE
(
°©e
, 1, "core:Éxec bz\n");

441 if(
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]) == 0) {

442 
	`TRACE
(
°©e
, 1, "core:Éxec branchÅaken\n");

443 
Æu_¨g0
 = 
fõlds
[1];

444 
Æu_¨g1
 = 
°©e
->
pc
;

445 
°©e
->
öãr
.
√xçc
 = 
	`Æu_exec
(
ALU_OP_ADD
, 
Æu_¨g0
, 
Æu_¨g1
);

447 
°©e
->
öãr
.
ty≥
 = 
BRANCH
;

450 
	`TRACE
(
°©e
, 1, "core:Éxec bnz\n");

451 if(
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]) != 0) {

452 
	`TRACE
(
°©e
, 1, "core:Éxec branchÅaken\n");

453 
Æu_¨g0
 = 
fõlds
[1];

454 
Æu_¨g1
 = 
°©e
->
pc
;

455 
°©e
->
öãr
.
√xçc
 = 
	`Æu_exec
(
ALU_OP_ADD
, 
Æu_¨g0
, 
Æu_¨g1
);

457 
°©e
->
öãr
.
ty≥
 = 
BRANCH
;

460 
	`TRACE
(
°©e
, 1, "core:Éxec jr\n");

461 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

462 
Æu_¨g1
 = 
fõlds
[1];

463 
°©e
->
öãr
.
√xçc
 = 
	`Æu_exec
(
ALU_OP_ADD
, 
Æu_¨g0
, 
Æu_¨g1
);

464 
°©e
->
öãr
.
ty≥
 = 
BRANCH
;

467 
	`TRACE
(
°©e
, 1, "core:Éxec jlr\n");

468 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

469 
Æu_¨g1
 = 
fõlds
[1];

470 
°©e
->
öãr
.
ªgvÆ
 = sèã->
pc
 + 1;

471 
°©e
->
öãr
.
ªgnum
 = 7;

472 
°©e
->
öãr
.
√xçc
 = 
	`Æu_exec
(
ALU_OP_ADD
, 
Æu_¨g0
, 
Æu_¨g1
);

473 
°©e
->
öãr
.
ty≥
 = 
BRLINK
;

476 
	`TRACE
(
°©e
, 1, "core:ÉxecÜl\n");

477 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[1]);

478 
Æu_¨g1
 = 
fõlds
[2];

479 
ouçut
->
d©a
.
addr
 = 
	`Æu_exec
(
ALU_OP_ADD
, 
Æu_¨g0
, 
Æu_¨g1
);

480 
ouçut
->
d©a
.
ªad
 = 
åue
;

481 
ouçut
->
d©a
.
ªque°
 = 
åue
;

482 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

483 
	`STATUS_SET_LL
(
°©e
->
öãr
.
√w°©
, 
åue
);

484 
°©e
->
öãr
.
ty≥
 = 
LOADLNK
;

487 
	`TRACE
(
°©e
, 1, "core:ÉxecÜdw\n");

488 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[1]);

489 
Æu_¨g1
 = 
fõlds
[2];

490 
ouçut
->
d©a
.
addr
 = 
	`Æu_exec
(
ALU_OP_ADD
, 
Æu_¨g0
, 
Æu_¨g1
);

491 
ouçut
->
d©a
.
ªad
 = 
åue
;

492 
ouçut
->
d©a
.
ªque°
 = 
åue
;

493 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

494 
°©e
->
öãr
.
ty≥
 = 
LOAD
;

497 
	`TRACE
(
°©e
, 1, "core:Éxec stw\n");

498 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[1]);

499 
Æu_¨g1
 = 
fõlds
[2];

500 
ouçut
->
d©a
.
addr
 = 
	`Æu_exec
(
ALU_OP_ADD
, 
Æu_¨g0
, 
Æu_¨g1
);

501 
ouçut
->
d©a
.
vÆue
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

502 
ouçut
->
d©a
.
ªad
 = 
Ál£
;

503 
ouçut
->
d©a
.
ªque°
 = 
åue
;

504 
°©e
->
öãr
.
ty≥
 = 
STORE
;

507 
	`TRACE
(
°©e
, 1, "core:Éxec sc\n");

508 if(
	`STATUS_GET_LL
(
°©e
->
˘l
.
«med
.
°©us
)) {

509 
	`TRACE
(
°©e
, 1, "core:Éxec sc succeed\n");

510 
Æu_¨g0
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[1]);

511 
Æu_¨g1
 = 
fõlds
[2];

512 
ouçut
->
d©a
.
addr
 = 
	`Æu_exec
(
ALU_OP_ADD
, 
Æu_¨g0
, 
Æu_¨g1
);

513 
ouçut
->
d©a
.
vÆue
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

514 
ouçut
->
d©a
.
ªad
 = 
Ál£
;

515 
ouçut
->
d©a
.
ªque°
 = 
åue
;

516 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

517 
°©e
->
öãr
.
ªgvÆ
 = 1;

518 
°©e
->
öãr
.
ty≥
 = 
SCOND
;

520 
	`TRACE
(
°©e
, 1, "core:Éxec sc fail\n");

521 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

522 
°©e
->
öãr
.
ªgvÆ
 = 0;

523 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

527 
	`TRACE
(
°©e
, 1, "core:Éxec mfcp\n");

528 if(
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
)) {

529 
uöt8_t
 
˝mask
 = 0x1 << 
fõlds
[1];

530 if(! 
˝mask
 & 
°©e
->
˘l
.
«med
.
um˝í
) {

531 
	`TRACE
(
°©e
, 1, "core:Éxec insufficientÖriviledge\n");

532 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
¥iv›hdl
;

533 
å≠
;

536 
ouçut
->
c›roc
.
£À˘
 = 
fõlds
[1];

537 
ouçut
->
c›roc
.
›
 = 
COPROC_OP_READ
;

538 
ouçut
->
c›roc
.
addr
 = 
fõlds
[2];

539 
°©e
->
öãr
.
ty≥
 = 
CPREAD
;

540 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

543 
	`TRACE
(
°©e
, 1, "core:Éxec mtcp\n");

544 if(
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
)) {

545 
uöt8_t
 
˝mask
 = 0x1 << 
fõlds
[1];

546 if(! 
˝mask
 & 
°©e
->
˘l
.
«med
.
um˝í
) {

547 
	`TRACE
(
°©e
, 1, "core:Éxec insufficientÖriviledge\n");

548 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
¥iv›hdl
;

549 
å≠
;

552 
ouçut
->
c›roc
.
£À˘
 = 
fõlds
[1];

553 
ouçut
->
c›roc
.
›
 = 
COPROC_OP_WRITE
;

554 
ouçut
->
c›roc
.
addr
 = 
fõlds
[2];

555 
ouçut
->
c›roc
.
vÆue
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

556 
°©e
->
öãr
.
ty≥
 = 
BRANCH
;

559 
	`TRACE
(
°©e
, 1, "core:Éxec cpop\n");

560 if(
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
)) {

561 
uöt8_t
 
˝mask
 = 0x1 << 
fõlds
[1];

562 if(! 
˝mask
 & 
°©e
->
˘l
.
«med
.
um˝í
) {

563 
	`TRACE
(
°©e
, 1, "core:Éxec insufficientÖriviledge\n");

564 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
¥iv›hdl
;

565 
å≠
;

568 
ouçut
->
c›roc
.
£À˘
 = 
fõlds
[1];

569 
ouçut
->
c›roc
.
›
 = 
COPROC_OP_EXEC
;

570 
ouçut
->
c›roc
.
vÆue
 = 
	`g¥eg_ªad
(
°©e
, 
fõlds
[0]);

571 
°©e
->
öãr
.
ty≥
 = 
BRANCH
;

574 
	`TRACE
(
°©e
, 1, "core:Éxec int\n");

575 
°©e
->
öãr
.
ªgvÆ
 = sèã->
pc
 + 1;

576 
	`STATUS_SET_SWIARG
(
°©e
->
öãr
.
√w°©
, 
fõlds
[0]);

577 
	`°©us_å≠
(&(
°©e
->
öãr
.
√w°©
));

578 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
swihdl
;

579 
°©e
->
öãr
.
ty≥
 = 
TRAP
;

582 
	`TRACE
(
°©e
, 1, "core:ÉxecÑfi\n");

583 if(
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
)) {

584 
	`TRACE
(
°©e
, 1, "core:Éxec insufficientÖriviledge\n");

585 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
¥iv›hdl
;

586 
å≠
;

588 
	`°©us_rfi
(&(
°©e
->
öãr
.
√w°©
));

589 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
ïc
;

590 
°©e
->
öãr
.
ty≥
 = 
RFI
;

593 
	`TRACE
(
°©e
, 1, "core:Éxec mfctl\n");

594 if(
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
)) {

595 
	`TRACE
(
°©e
, 1, "core:Éxec insufficientÖriviledge\n");

596 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
¥iv›hdl
;

597 
å≠
;

599 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[0];

600 
°©e
->
öãr
.
ªgvÆ
 = sèã->
˘l
.
¨øy
[
fõlds
[1]];

601 
°©e
->
öãr
.
ty≥
 = 
GPRUP
;

604 
	`TRACE
(
°©e
, 1, "core:Éxec mtctl\n");

605 if(
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
)) {

606 
	`TRACE
(
°©e
, 1, "core:Éxec insufficientÖriviledge\n");

607 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
¥iv›hdl
;

608 
å≠
;

610 
°©e
->
öãr
.
ªgnum
 = 
fõlds
[1];

611 
°©e
->
öãr
.
ªgvÆ
 = 
	`g¥eg_ªad
(°©e, 
fõlds
[0]);

612 
°©e
->
öãr
.
ty≥
 = 
CTLUP
;

615 
	`TRACE
(
°©e
, 1, "core: ERROR:Éxec fallthrough\n");

618 
föish
;

620 
å≠
:

621 
	`°©us_å≠
(&(
°©e
->
öãr
.
√w°©
));

622 
°©e
->
öãr
.
ªgvÆ
 = sèã->
pc
;

623 
°©e
->
öãr
.
ty≥
 = 
TRAP
;

625 
föish
:

627 
	`TRACEBLOCK
(
°©e
, 1, {

628 *
ty≥
;

629 
	`¥ötf
("core:Éxec done\n");

630 
	`¥ötf
("core: interÑegnum=%dÑegval=%x\n",

631 
°©e
->
öãr
.
ªgnum
, sèã->öãr.
ªgvÆ
);

632 
	`¥ötf
("core: inter status %d us=%cÜl=%cÑum=%c gie=%c um=%c\n",

633 
°©e
->
öãr
.
√w°©
.
swürg
,

634 
°©e
->
öãr
.
√w°©
.
ªt_um_ßve
,

635 
°©e
->
öãr
.
√w°©
.
lﬂd_lök
,

636 
°©e
->
öãr
.
√w°©
.
ªt_umode
,

637 
°©e
->
öãr
.
√w°©
.
glob_öt_í
,

638 
°©e
->
öãr
.
√w°©
.
ö_um
);

639 
	`¥ötf
("c‹e: i¡îÇexçc=%x\n", 
°©e
->
öãr
.
√xçc
);

640 
c‹e
->
öãr
.
ty≥
) {

641 
GPRUP
: 
ty≥
 = "GPRUP"; ;

642 
BRANCH
: 
ty≥
 = "BRANCH"; ;

643 
BRLINK
: 
ty≥
 = "BRLINK"; ;

644 
LOAD
: 
ty≥
 = "LOAD"; ;

645 
LOADLNK
: 
ty≥
 = "LOADLNK"; ;

646 
STORE
: 
ty≥
 = "STORE"; ;

647 
SCOND
: 
ty≥
 = "SCOND"; ;

648 
CTLUP
: 
ty≥
 = "CTLUP"; ;

649 
CPREAD
: 
ty≥
 = "CPREAD"; ;

650 
TRAP
: 
ty≥
 = "TRAP"; ;

651 
RFI
: 
ty≥
 = "RFI"; ;

653 
	`¥ötf
("c‹e: i¡îÅy≥=%s\n", 
ty≥
);

657 
	}
}

659 
	$upd©e_¥›ag©e_sig«ls
(

660 
sim_c‹e_°©e_t
 *
°©e
,

661 
sim_c‹e_ouçut_t
 *
ouçut
,

662 
sim_c‹e_öput_t
 *
öput
)

664 
i
;

666 
ouçut
->
u£r_mode
 = 
	`STATUS_GET_UM
(
°©e
->
˘l
.
«med
.
°©us
);

669 
i
 = 0; i < 
SIM_CORE_NUM_EXTINT
; i++) {

670 
	`TRACEBLOCK
(
°©e
, 1, {

671 if((
	`TEST_BIT
(
°©e
->
˘l
.
«med
.
ùíd
, 
i
) != 0) !=

672 
öput
->
exöt_sig
[
i
]) {

673 if(
öput
->
exöt_sig
[
i
]) {

674 
	`¥ötf
("c‹e: upd©êùíd %d së\n", 
i
);

677 
	`¥ötf
("c‹e: upd©êùíd %dÑe£t\n", 
i
);

681 
	`SET_BIT
(
°©e
->
˘l
.
«med
.
ùíd
, 
i
, 
öput
->
exöt_sig
[i]);

683 
	`SET_BIT
(
°©e
->
˘l
.
«med
.
ùíd
, 14, 
öput
->
ö°r
.
Áu…
);

684 
	`SET_BIT
(
°©e
->
˘l
.
«med
.
ùíd
, 15, 
öput
->
d©a
.
Áu…
);

685 
	}
}

687 
	$sim_c‹e_upd©e
(

688 
sim_c‹e_°©e_t
 *
°©e
,

689 
sim_c‹e_ouçut_t
 *
ouçut
,

690 
sim_c‹e_öput_t
 *
öput
)

692 
°©us
 = 0;

695 
	`upd©e_¥›ag©e_sig«ls
(
°©e
, 
ouçut
, 
öput
);

698 if(
°©e
->
öãr
.
ö°r_°Æl
) {

699 
	`TRACE
(
°©e
, 1, "core: update instr stall\n");

700 
cou¡î
;

704 if(
°©e
->
¶ìpög
 && sèã->
öãr
.
ty≥
 !
TRAP
) {

705 
	`TRACE
(
°©e
, 1, "core: update sleeping\n");

709 
°©e
->
˘l
.
«med
.
°©us
 = sèã->
öãr
.
√w°©
;

711 
°©e
->
öãr
.
ty≥
) {

712 
GPRUP
:

713 
	`TRACE
(
°©e
, 1, "core: update GPRUP\n");

714 
	`g¥eg_wrôe
(
°©e
, sèã->
öãr
.
ªgnum
, sèã->öãr.
ªgvÆ
);

716 
BRANCH
:

718 
	`TRACE
(
°©e
, 1, "core: update BRANCH\n");

720 
BRLINK
:

722 
	`TRACE
(
°©e
, 1, "core: update BRLINK\n");

723 
	`g¥eg_wrôe
(
°©e
, 7, sèã->
öãr
.
ªgvÆ
);

725 
LOAD
:

726 if(! 
öput
->
d©a
.
vÆid
 && ! i≈ut->d©a.
Áu…
) {

727 
	`TRACE
(
°©e
, 1, "core: update LOAD data stall\n");

728 
°©e
->
öãr
.
d©a_°Æl
 = 
åue
;

729 
ouçut
->
ö°r
.
ªque°
 = 
Ál£
;

730 
cou¡î
;

731 } if(
öput
->
d©a
.
Áu…
) {

732 
	`TRACE
(
°©e
, 1, "core: update LOAD data fault\n");

733 
	`°©us_å≠
(&(
°©e
->
öãr
.
√w°©
));

734 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
dÁu…hdl
;

736 
	`TRACE
(
°©e
, 1, "core: update LOAD\n");

737 
	`STATUS_SET_LL
(
°©e
->
˘l
.
«med
.
°©us
, 
Ál£
);

738 
	`g¥eg_wrôe
(
°©e
, sèã->
öãr
.
ªgnum
, 
öput
->
d©a
.
vÆue
);

739 
ouçut
->
d©a
.
ªque°
 = 
Ál£
;

741 
°©e
->
öãr
.
d©a_°Æl
 = 
Ál£
;

743 
LOADLNK
:

744 if(! 
öput
->
d©a
.
vÆid
 && ! i≈ut->d©a.
Áu…
) {

745 
	`TRACE
(
°©e
, 1, "core: update LOADLNK data stall\n");

746 
°©e
->
öãr
.
d©a_°Æl
 = 
åue
;

747 
ouçut
->
ö°r
.
ªque°
 = 
Ál£
;

748 
cou¡î
;

749 } if(
öput
->
d©a
.
Áu…
) {

750 
	`TRACE
(
°©e
, 1, "core: update LOADLNK data fault\n");

751 
	`°©us_å≠
(&(
°©e
->
öãr
.
√w°©
));

752 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
dÁu…hdl
;

754 
	`TRACE
(
°©e
, 1, "core: update LOADLNK\n");

755 
	`STATUS_SET_LL
(
°©e
->
˘l
.
«med
.
°©us
, 
åue
);

756 
	`g¥eg_wrôe
(
°©e
, sèã->
öãr
.
ªgnum
, 
öput
->
d©a
.
vÆue
);

757 
ouçut
->
d©a
.
ªque°
 = 
Ál£
;

759 
°©e
->
öãr
.
d©a_°Æl
 = 
Ál£
;

761 
STORE
:

762 if(! 
öput
->
d©a
.
vÆid
 && ! i≈ut->d©a.
Áu…
) {

763 
	`TRACE
(
°©e
, 1, "core: update STORE data stall\n");

764 
°©e
->
öãr
.
d©a_°Æl
 = 
åue
;

765 
ouçut
->
ö°r
.
ªque°
 = 
Ál£
;

766 
cou¡î
;

767 } if(
öput
->
d©a
.
Áu…
) {

768 
	`TRACE
(
°©e
, 1, "core: update STORE data fault\n");

769 
	`°©us_å≠
(&(
°©e
->
öãr
.
√w°©
));

770 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
dÁu…hdl
;

772 
	`TRACE
(
°©e
, 1, "core: update STORE\n");

773 
	`STATUS_SET_LL
(
°©e
->
˘l
.
«med
.
°©us
, 
Ál£
);

774 
ouçut
->
d©a
.
ªque°
 = 
Ál£
;

776 
°©e
->
öãr
.
d©a_°Æl
 = 
Ál£
;

778 
SCOND
:

779 if(! 
öput
->
d©a
.
vÆid
 && ! i≈ut->d©a.
Áu…
) {

780 
	`TRACE
(
°©e
, 1, "core: update SCOND data stall\n");

781 
°©e
->
öãr
.
d©a_°Æl
 = 
åue
;

782 
ouçut
->
ö°r
.
ªque°
 = 
Ál£
;

783 
cou¡î
;

785 if(
öput
->
d©a
.
Áu…
) {

786 
	`TRACE
(
°©e
, 1, "core: update SCOND data fault\n");

787 
	`°©us_å≠
(&(
°©e
->
öãr
.
√w°©
));

788 
°©e
->
öãr
.
√xçc
 = sèã->
˘l
.
«med
.
dÁu…hdl
;

790 
	`TRACE
(
°©e
, 1, "core: update SCOND\n");

791 
	`STATUS_SET_LL
(
°©e
->
˘l
.
«med
.
°©us
, 
Ál£
);

792 
ouçut
->
d©a
.
ªque°
 = 
Ál£
;

793 
	`g¥eg_wrôe
(
°©e
, sèã->
öãr
.
ªgnum
, 1);

795 
°©e
->
öãr
.
d©a_°Æl
 = 
Ál£
;

797 
CTLUP
:

798 
	`TRACE
(
°©e
, 1, "core: update CTLUPÑeg %d val %x\n",

799 
°©e
->
öãr
.
ªgnum
, sèã->öãr.
ªgvÆ
);

800 
°©e
->
˘l
.
¨øy
[°©e->
öãr
.
ªgnum
] = sèã->öãr.
ªgvÆ
;

802 
CPREAD
:

803 
	`TRACE
(
°©e
, 1, "core: update CPREAD\n");

804 
	`g¥eg_wrôe
(
°©e
, sèã->
öãr
.
ªgnum
, 
öput
->
c›roc
.
vÆue
);

806 
TRAP
:

807 
	`TRACE
(
°©e
, 1, "core: update TRAP\n");

808 
°©e
->
˘l
.
«med
.
ïc_ßved
 = sèã->˘l.«med.
ïc
;

809 
°©e
->
˘l
.
«med
.
ïc
 = sèã->
öãr
.
ªgvÆ
;

810 
°©e
->
¶ìpög
 = 
Ál£
;

812 
RFI
:

813 
	`TRACE
(
°©e
, 1, "core: update RFI\n");

814 
°©e
->
˘l
.
«med
.
ïc
 = sèã->˘l.«med.
ïc_ßved
;

816 
SLEEP
:

817 
	`TRACE
(
°©e
, 1, "core: update SLEEP\n");

818 
°©e
->
¶ìpög
 = 
åue
;

821 
°©e
->
pc
 = sèã->
öãr
.
√xçc
;

822 
ouçut
->
ö°r
.
ªque°
 = 
Ál£
;

824 if(! 
	`STATUS_GET_GIE
(
°©e
->
˘l
.
«med
.
°©us
) ||

825 ! 
°©e
->
˘l
.
«med
.
õ«bÀ
) {

826 
	`¥ötf
("core: unwakeable SLEEP\n");

827 
°©us
 = -1;

830 
cou¡î
;

833 
°©e
->
pc
 = sèã->
öãr
.
√xçc
;

834 
ouçut
->
ö°r
.
addr
 = 
°©e
->
pc
;

835 
ouçut
->
ö°r
.
ªque°
 = 
åue
;

837 
cou¡î
:

839 
ouçut
->
c›roc
.
›
 = 
COPROC_OP_NONE
;

841 
°©e
->
˘l
.
«med
.
cou¡î_low
++;

842 if(! 
°©e
->
˘l
.
«med
.
cou¡î_low
) {

843 
°©e
->
˘l
.
«med
.
cou¡î_high
++;

846  
°©us
;

847 
	}
}

849 
	$sim_c‹e_˝_›_≥ndög
(

850 
c›roc_›_t
 
›
,

851 
sim_c‹e_ouçut_t
 *
ouçut
)

853 if(
ouçut
->
c›roc
.
›
 == op) {

854  
ouçut
->
c›roc
.
£À˘
;

857 
	}
}

	@sim_core.h

1 #i‚de‡
SIM_CORE_H


2 
	#SIM_CORE_H


	)

4 
	~<°döt.h
>

5 
	~<°dboﬁ.h
>

7 
	#SIM_CORE_NUM_GPREGS
 8

	)

8 
	#SIM_CORE_NUM_CTLREGS
 32

	)

9 
	#SIM_CORE_NUM_EXTINT
 8

	)

10 
	#SIM_CORE_NUM_CPREGS
 32

	)

14 
	mCOPROC_OP_NONE
 = 0,

15 
	mCOPROC_OP_READ
 = 1,

16 
	mCOPROC_OP_WRITE
 = 2,

17 
	mCOPROC_OP_EXEC
 = 3

18 } 
	tc›roc_›_t
;

22 
uöt16_t
 
	mvÆue
;

23 
boﬁ
 
	mvÆid
;

24 
boﬁ
 
	mÁu…
;

25 } 
	tsim_c‹e_mem_öput_t
;

29 
uöt16_t
 
	mvÆue
;

30 
uöt16_t
 
	maddr
;

31 
boﬁ
 
	mªad
;

32 
boﬁ
 
	mªque°
;

33 } 
	tsim_c‹e_mem_ouçut_t
;

37 
uöt16_t
 
	mvÆue
;

38 } 
	tsim_c‹e_˝_öput_t
;

42 
uöt8_t
 
	m£À˘
;

43 
c›roc_›_t
 
	m›
;

44 
uöt8_t
 
	maddr
;

45 
uöt16_t
 
	mvÆue
;

46 } 
	tsim_c‹e_˝_ouçut_t
;

50 
sim_c‹e_mem_öput_t
 
	md©a
;

51 
sim_c‹e_mem_öput_t
 
	mö°r
;

53 
sim_c‹e_˝_öput_t
 
	mc›roc
;

55 
boﬁ
 
	mexöt_sig
[
SIM_CORE_NUM_EXTINT
];

57 
boﬁ
 
	mŒ_övÆ
;

58 } 
	tsim_c‹e_öput_t
;

62 
sim_c‹e_mem_ouçut_t
 
	md©a
;

63 
sim_c‹e_mem_ouçut_t
 
	mö°r
;

65 
sim_c‹e_˝_ouçut_t
 
	mc›roc
;

67 
boﬁ
 
	mu£r_mode
;

68 } 
	tsim_c‹e_ouçut_t
;

70 
	#STATUS_GET_SWIARG
(
STAT
Ë((STATË& 0x7FF)

	)

71 
	#STATUS_SET_SWIARG
(
STAT
, 
VAL
) \

72 do{ (
STAT
Ë((STATË& 0xF800Ë| ((
VAL
Ë& 0x7FF); } 0)

	)

74 
	#STATUS_GET_UMSAVE
(
STAT
Ë(((STATË>> 11Ë& 0x1)

	)

75 
	#STATUS_SET_UMSAVE
(
STAT
, 
VAL
) \

76 do{ (
STAT
Ë((STATË& 0xF7FFË| (((
VAL
Ë& 0x1Ë<< 11); } 0)

	)

78 
	#STATUS_GET_LL
(
STAT
Ë(((STATË>> 12Ë& 0x1)

	)

79 
	#STATUS_SET_LL
(
STAT
, 
VAL
) \

80 dÿ{ (
STAT
Ë((STATË& 0xEFFFË| (((
VAL
Ë& 0x1Ë<< 12); } 0)

	)

82 
	#STATUS_GET_RUMODE
(
STAT
Ë(((STATË>> 13Ë& 0x1)

	)

83 
	#STATUS_SET_RUMODE
(
STAT
, 
VAL
) \

84 dÿ{ (
STAT
Ë((STATË& 0xDFFFË| (((
VAL
Ë& 0x1Ë<< 13); } 0)

	)

86 
	#STATUS_GET_GIE
(
STAT
Ë(((STATË>> 14Ë& 0x1)

	)

87 
	#STATUS_SET_GIE
(
STAT
, 
VAL
) \

88 dÿ{ (
STAT
Ë((STATË& 0xBFFFË| (((
VAL
Ë& 0x1Ë<< 14); } 0)

	)

90 
	#STATUS_GET_UM
(
STAT
Ë(((STATË>> 15Ë& 0x1)

	)

91 
	#STATUS_SET_UM
(
STAT
, 
VAL
) \

92 dÿ{ (
STAT
Ë((STATË& 0x7FFFË| (((
VAL
Ë& 0x1Ë<< 15); } 0)

	)

96 
uöt16_t
 
	mpc
;

97 
uöt16_t
 
	mg¥_su≥r
[
SIM_CORE_NUM_GPREGS
];

99 
uöt16_t
 
	m¨øy
[
SIM_CORE_NUM_CTLREGS
];

101 
uöt16_t
 
	mg¥_u£r
[
SIM_CORE_NUM_GPREGS
];

102 
uöt16_t
 
	mïc
;

103 
uöt16_t
 
	mïc_ßved
;

104 
uöt16_t
 
	m°©us
;

105 
uöt16_t
 
	miÁu…hdl
;

106 
uöt16_t
 
	mdÁu…hdl
;

107 
uöt16_t
 
	mswihdl
;

108 
uöt16_t
 
	mûl›hdl
;

109 
uöt16_t
 
	m¥iv›hdl
;

110 
uöt16_t
 
	mexihdl
[
SIM_CORE_NUM_EXTINT
];

111 
uöt16_t
 
	mõ«bÀ
;

112 
uöt16_t
 
	mùíd
;

113 
uöt16_t
 
	mück
;

114 
uöt16_t
 
	mum˝í
;

115 
uöt16_t
 
	mcou¡î_low
;

116 
uöt16_t
 
	mcou¡î_high
;

117 } 
	m«med
;

118 } 
	m˘l
;

119 
boﬁ
 
	m¶ìpög
;

123 
	mªgnum
;

124 
uöt16_t
 
	mªgvÆ
;

125 
uöt16_t
 
	m√w°©
;

126 
uöt16_t
 
	m√xçc
;

127 
boﬁ
 
	mö°r_°Æl
;

128 
boﬁ
 
	md©a_°Æl
;

130 
	mGPRUP
,

131 
	mBRANCH
,

132 
	mBRLINK
,

133 
	mLOAD
,

134 
	mLOADLNK
,

135 
	mSTORE
,

136 
	mSCOND
,

137 
	mCTLUP
,

138 
	mCPREAD
,

139 
	mTRAP
,

140 
	mRFI
,

141 
	mSLEEP


142 } 
	mty≥
;

143 } 
	möãr
;

146 
uöt32_t
 
	måa˚Àvñ
;

147 } 
	tsim_c‹e_°©e_t
;

150 
sim_c‹e_ouçut_t
 *
sim_c‹e_ouçut_öô
(

151 
sim_c‹e_ouçut_t
 *
ouçut
);

153 
sim_c‹e_öput_t
 *
sim_c‹e_öput_öô
(

154 
sim_c‹e_öput_t
 *
öput
);

156 
sim_c‹e_°©e_t
 *
sim_c‹e_°©e_öô
(

157 
sim_c‹e_°©e_t
 *
°©e
);

159 
sim_c‹e_exec
(

160 
sim_c‹e_°©e_t
 *
°©e
,

161 
sim_c‹e_ouçut_t
 *
ouçut
,

162 
sim_c‹e_öput_t
 *
öput
);

164 
sim_c‹e_upd©e
(

165 
sim_c‹e_°©e_t
 *
°©e
,

166 
sim_c‹e_ouçut_t
 *
ouçut
,

167 
sim_c‹e_öput_t
 *
öput
);

170 
sim_c‹e_˝_›_≥ndög
(

171 
c›roc_›_t
 
›
,

172 
sim_c‹e_ouçut_t
 *
ouçut
);

	@sim_core_test.c

1 
	~<°dio.h
>

2 
	~<as£π.h
>

3 
	~<°rög.h
>

4 
	~<°döt.h
>

5 
	~<f˙é.h
>

6 
	~<sys/°©.h
>

7 
	~<î∫o.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<sys/uio.h
>

10 
	~<uni°d.h
>

11 
	~<°dlib.h
>

12 
	~<gë›t.h
>

13 
	~<˘y≥.h
>

15 
	~"sim_c‹e.h
"

17 
	$lﬂd_fûe
(*
∑th
, **
d©a
, 
size_t
 *
d©Æí
)

19 
°©
 
sb
;

20 
°©us
;

21 
size_t
 
fûesize
;

22 
size_t
 
byã§ód
;

23 *
buf
 = 
NULL
, *
curs‹
;

24 
fd
 = -1;

26 
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
);

27 if((
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
)) < 0) {

28 
	`Ârötf
(
°dîr
, "error opening %s: %s (errno=%d)\n",

29 
∑th
, 
	`°ªº‹
(
î∫o
),Érrno);

30 
îr‹
;

33 if(
	`f°©
(
fd
, &
sb
)) {

34 
	`Ârötf
(
°dîr
, "error in stat(\"%s\"): %s (errno=%d)\n",

35 
∑th
, 
	`°ªº‹
(
î∫o
),Érrno);

36 
îr‹
;

38 
fûesize
 = 
sb
.
°_size
;

40 if(!(
buf
 = 
	`mÆloc
(
fûesize
))) {

41 
	`Ârötf
(
°dîr
, "out of memory\n");

42 
îr‹
;

45 
curs‹
 = 
buf
;

46 
byã§ód
 = 0;

47 
fûesize
) {

48 
°©us
 = 
	`ªad
(
fd
, 
curs‹
, 
fûesize
);

49 if(
°©us
 < 0){

50 if(
î∫o
 !
EINTR
) {

51 
	`Ârötf
(
°dîr
, "readÉrror: %s (errno=%d)\n",

52 
	`°ªº‹
(
î∫o
),Érrno);

53 
îr‹
;

56 if(
°©us
 == 0) {

57 
	`Ârötf
(
°dîr
, "Warning: unexpectedÉnd of fileát byte %lu\n",

58 
byã§ód
);

61 
fûesize
 -
°©us
;

62 
curs‹
 +
°©us
;

63 
byã§ód
 +
°©us
;

66 *
d©a
 = 
buf
;

67 *
d©Æí
 = 
byã§ód
;

68 
	`˛o£
(
fd
);

71 
îr‹
:

72 
	`‰ì
(
buf
);

73 if(
fd
 >= 0) {

74 
	`˛o£
(
fd
);

77 
	}
}

81 *
	möô_°©e
;

82 *
	mexec_öput
;

83 *
	mpo°exec_°©e
;

84 *
	mexec_ouçut
;

85 *
	mupd©e_öput
;

86 *
	mpo°upd©e_°©e
;

87 *
	mupd©e_ouçut
;

88 } 
	t˛i_›ts_t
;

91 
	$ußge
()

93 
	`¥ötf
(

118 
	}
}

121 
	$∑r£_˛i
(
¨gc
, *
¨gv
[], 
˛i_›ts_t
 *
›ts
)

123 
ch
;

124 
	`mem£t
(
›ts
, 0, (*opts));

125 *
buf
;

127 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "x:a:y:o:b:z:p:h")) != -1) {

128 
ch
) {

129 'x': 
›ts
->
öô_°©e
 = 
›èrg
; ;

130 'a': 
›ts
->
exec_öput
 = 
›èrg
; ;

131 'y': 
›ts
->
po°exec_°©e
 = 
›èrg
; ;

132 'o': 
›ts
->
exec_ouçut
 = 
›èrg
; ;

133 'b': 
›ts
->
upd©e_öput
 = 
›èrg
; ;

134 'z': 
›ts
->
po°upd©e_°©e
 = 
›èrg
; ;

135 'p': 
›ts
->
upd©e_ouçut
 = 
›èrg
; ;

136 : 
	`Ârötf
(
°dîr
, "unknow¿swôch: %¯Ñu¿wôh -h\n", 
ch
);

141 if(
›ts
->
exec_öput
 =
NULL
) {

142 
	`Ârötf
(
°dîr
, "-a <exec input>Ñequired\n");

145 if(
›ts
->
upd©e_öput
 =
NULL
) {

146 
	`Ârötf
(
°dîr
, "-b <update input>Ñequired\n");

149 if(
›ts
->
po°upd©e_°©e
 =
NULL
) {

150 
	`Ârötf
(
°dîr
, "-z <post update state>Ñequired\n");

153 if(
›ts
->
upd©e_ouçut
 =
NULL
) {

154 
	`Ârötf
(
°dîr
, "-p <update output>Ñequired\n");

159 
	}
}

161 
	$ªad_eq_£micﬁ⁄_∑ú
(

162 *
desc
, 
size_t
 
des˛í
,

163 *
«mebuf
, 
size_t
 
«mebuÊí
,

164 *
vÆbuf
, 
size_t
 
vÆbuÊí
)

172 *
eq
, *
ãrm
, *
°¨t
, *
íd
;

173 if((
eq
 = 
	`°rchr
(
desc
, '=')Ë=
NULL
) {

176 if((
ãrm
 = 
	`°rchr
(
desc
, ';')Ë=
NULL
) {

180 
°¨t
 = 
desc
; !
	`iß um
(*start); start++);

181 
íd
 = 
eq
; !
	`iß um
(*end);Énd--);

182 
íd
++;

183 
	`°∫˝y
(
«mebuf
, 
°¨t
, 
íd
-start);

184 
«mebuf
[
íd
-
°¨t
] = 0;

186 
°¨t
 = 
eq
; !
	`iß um
(*start); start++);

187 
íd
 = 
ãrm
; !
	`iß um
(*end);Énd--);

188 
íd
++;

189 
	`°∫˝y
(
vÆbuf
, 
°¨t
, 
íd
 - start);

190 
vÆbuf
[
íd
-
°¨t
] = 0;

192 
ãrm
++;

193  
ãrm
 - 
desc
;

194 
	}
}

196 
	$∑r£_°©edesc
(*
desc
, 
size_t
 
des˛í
, 
sim_c‹e_°©e_t
 *
°©e
)

198 
«mebuf
[32], 
vÆbuf
[32];

199 
ƒód
;

201 
ƒód
 = 
	`ªad_eq_£micﬁ⁄_∑ú
(
desc
, 
des˛í
,

202 
«mebuf
, (namebuf),

203 
vÆbuf
, (valbuf))) {

204 if(
	`°rcmp
(
«mebuf
, "pc") == 0) {

205 
°©e
->
pc
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

206 } if(
	`°rcmp
(
«mebuf
, "gpr_super0") == 0) {

207 
°©e
->
g¥_su≥r
[0] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

208 } if(
	`°rcmp
(
«mebuf
, "gpr_super1") == 0) {

209 
°©e
->
g¥_su≥r
[1] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

210 } if(
	`°rcmp
(
«mebuf
, "gpr_super2") == 0) {

211 
°©e
->
g¥_su≥r
[2] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

212 } if(
	`°rcmp
(
«mebuf
, "gpr_super3") == 0) {

213 
°©e
->
g¥_su≥r
[3] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

214 } if(
	`°rcmp
(
«mebuf
, "gpr_super4") == 0) {

215 
°©e
->
g¥_su≥r
[4] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

216 } if(
	`°rcmp
(
«mebuf
, "gpr_super5") == 0) {

217 
°©e
->
g¥_su≥r
[5] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

218 } if(
	`°rcmp
(
«mebuf
, "gpr_super6") == 0) {

219 
°©e
->
g¥_su≥r
[6] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

220 } if(
	`°rcmp
(
«mebuf
, "gpr_super7") == 0) {

221 
°©e
->
g¥_su≥r
[7] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

222 } if(
	`°rcmp
(
«mebuf
, "gpr_user0") == 0) {

223 
°©e
->
˘l
.
«med
.
g¥_u£r
[0] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

224 } if(
	`°rcmp
(
«mebuf
, "gpr_user1") == 0) {

225 
°©e
->
˘l
.
«med
.
g¥_u£r
[1] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

226 } if(
	`°rcmp
(
«mebuf
, "gpr_user2") == 0) {

227 
°©e
->
˘l
.
«med
.
g¥_u£r
[2] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

228 } if(
	`°rcmp
(
«mebuf
, "gpr_user3") == 0) {

229 
°©e
->
˘l
.
«med
.
g¥_u£r
[3] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

230 } if(
	`°rcmp
(
«mebuf
, "gpr_user4") == 0) {

231 
°©e
->
˘l
.
«med
.
g¥_u£r
[4] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

232 } if(
	`°rcmp
(
«mebuf
, "gpr_user5") == 0) {

233 
°©e
->
˘l
.
«med
.
g¥_u£r
[5] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

234 } if(
	`°rcmp
(
«mebuf
, "gpr_user6") == 0) {

235 
°©e
->
˘l
.
«med
.
g¥_u£r
[6] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

236 } if(
	`°rcmp
(
«mebuf
, "gpr_user7") == 0) {

237 
°©e
->
˘l
.
«med
.
g¥_u£r
[7] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

238 } if(
	`°rcmp
(
«mebuf
, "epc") == 0) {

239 
°©e
->
˘l
.
«med
.
ïc
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

240 } if(
	`°rcmp
(
«mebuf
, "status_swiarg") == 0) {

241 
°©e
->
˘l
.
«med
.
°©us
.
swürg
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

242 } if(
	`°rcmp
(
«mebuf
, "status_ret_umode") == 0) {

243 
°©e
->
˘l
.
«med
.
°©us
.
ªt_umode
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

244 } if(
	`°rcmp
(
«mebuf
, "status_glob_int_en") == 0) {

245 
°©e
->
˘l
.
«med
.
°©us
.
glob_öt_í
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

246 } if(
	`°rcmp
(
«mebuf
, "status_in_um") == 0) {

247 
°©e
->
˘l
.
«med
.
°©us
.
ö_um
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

248 } if(
	`°rcmp
(
«mebuf
, "ifaulthdl") == 0) {

249 
°©e
->
˘l
.
«med
.
iÁu…hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

250 } if(
	`°rcmp
(
«mebuf
, "dfaulthdl") == 0) {

251 
°©e
->
˘l
.
«med
.
dÁu…hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

252 } if(
	`°rcmp
(
«mebuf
, "swihdl") == 0) {

253 
°©e
->
˘l
.
«med
.
swihdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

254 } if(
	`°rcmp
(
«mebuf
, "illophdl") == 0) {

255 
°©e
->
˘l
.
«med
.
ûl›hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

256 } if(
	`°rcmp
(
«mebuf
, "ealuhdl") == 0) {

257 
°©e
->
˘l
.
«med
.
óluhdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

258 } if(
	`°rcmp
(
«mebuf
, "exi0hdl") == 0) {

259 
°©e
->
˘l
.
«med
.
exi0hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

260 } if(
	`°rcmp
(
«mebuf
, "exi1hdl") == 0) {

261 
°©e
->
˘l
.
«med
.
exi1hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

262 } if(
	`°rcmp
(
«mebuf
, "exi2hdl") == 0) {

263 
°©e
->
˘l
.
«med
.
exi2hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

264 } if(
	`°rcmp
(
«mebuf
, "exi3hdl") == 0) {

265 
°©e
->
˘l
.
«med
.
exi3hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

266 } if(
	`°rcmp
(
«mebuf
, "exi4hdl") == 0) {

267 
°©e
->
˘l
.
«med
.
exi4hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

268 } if(
	`°rcmp
(
«mebuf
, "exi5hdl") == 0) {

269 
°©e
->
˘l
.
«med
.
exi5hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

270 } if(
	`°rcmp
(
«mebuf
, "exi6hdl") == 0) {

271 
°©e
->
˘l
.
«med
.
exi6hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

272 } if(
	`°rcmp
(
«mebuf
, "exi0hdl") == 0) {

273 
°©e
->
˘l
.
«med
.
exi7hdl
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

274 } if(
	`°rcmp
(
«mebuf
, "ienable") == 0) {

275 
°©e
->
˘l
.
«med
.
õ«bÀ

	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

276 } if(
	`°rcmp
(
«mebuf
, "ipend") == 0) {

277 
°©e
->
˘l
.
«med
.
ùíd

	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

278 } if(
	`°rcmp
(
«mebuf
, "iack") == 0) {

279 
°©e
->
˘l
.
«med
.
ück

	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

280 } if(
	`°rcmp
(
«mebuf
, "umcpen") == 0) {

281 
°©e
->
˘l
.
«med
.
um˝í

	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

282 } if(
	`°rcmp
(
«mebuf
, "counter") == 0) {

283 
°©e
->
˘l
.
«med
.
cou¡î
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

284 } if(
	`°rcmp
(
«mebuf
, "ctlunused0") == 0) {

285 
°©e
->
˘l
.
«med
.
unu£d
[0] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

286 } if(
	`°rcmp
(
«mebuf
, "ctlunused1") == 0) {

287 
°©e
->
˘l
.
«med
.
unu£d
[1] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

288 } if(
	`°rcmp
(
«mebuf
, "ctlunused2") == 0) {

289 
°©e
->
˘l
.
«med
.
unu£d
[2] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

290 } if(
	`°rcmp
(
«mebuf
, "ctlunused3") == 0) {

291 
°©e
->
˘l
.
«med
.
unu£d
[3] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

292 } if(
	`°rcmp
(
«mebuf
, "aluresult") == 0) {

293 
°©e
->
Æuªsu…
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

294 } if(
	`°rcmp
(
«mebuf
, "destgpreg") == 0) {

295 
°©e
->
de°g¥eg
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

296 } if(
	`°rcmp
(
«mebuf
, "nextpc") == 0) {

297 
°©e
->
√xçc
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

299 
	`Ârötf
(
°dîr
, "unknow¿°©êkey: %s\n", 
«mebuf
);

302 
desc
 +
ƒód
;

303 
des˛í
 -
ƒód
;

306 
	}
}

308 
	$∑r£_öputdesc
(*
desc
, 
size_t
 
des˛í
, 
sim_c‹e_öput_t
 *
öput
)

310 
«mebuf
[32], 
vÆbuf
[32];

311 
ƒód
;

313 
ƒód
 = 
	`ªad_eq_£micﬁ⁄_∑ú
(
desc
, 
des˛í
,

314 
«mebuf
, (namebuf),

315 
vÆbuf
, (valbuf))) {

316 if(
	`°rcmp
(
«mebuf
, "data_value") == 0) {

317 
öput
->
d©a_vÆue
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

318 } if(
	`°rcmp
(
«mebuf
, "data_valid") == 0) {

319 
öput
->
d©a_vÆid
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

320 } if(
	`°rcmp
(
«mebuf
, "data_fault") == 0) {

321 
öput
->
d©a_Áu…
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

322 } if(
	`°rcmp
(
«mebuf
, "instr_value") == 0) {

323 
öput
->
ö°r_vÆue
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

324 } if(
	`°rcmp
(
«mebuf
, "instr_valid") == 0) {

325 
öput
->
ö°r_vÆid
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

326 } if(
	`°rcmp
(
«mebuf
, "instr_fault") == 0) {

327 
öput
->
ö°r_Áu…
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

328 } if(
	`°rcmp
(
«mebuf
, "coproc_value") == 0) {

329 
öput
->
c›roc_vÆue
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

330 } if(
	`°rcmp
(
«mebuf
, "exint_sig0") == 0) {

331 
öput
->
exöt_sig
[0] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

332 } if(
	`°rcmp
(
«mebuf
, "exint_sig1") == 0) {

333 
öput
->
exöt_sig
[1] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

334 } if(
	`°rcmp
(
«mebuf
, "exint_sig2") == 0) {

335 
öput
->
exöt_sig
[2] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

336 } if(
	`°rcmp
(
«mebuf
, "exint_sig3") == 0) {

337 
öput
->
exöt_sig
[3] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

338 } if(
	`°rcmp
(
«mebuf
, "exint_sig4") == 0) {

339 
öput
->
exöt_sig
[4] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

340 } if(
	`°rcmp
(
«mebuf
, "exint_sig5") == 0) {

341 
öput
->
exöt_sig
[5] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

342 } if(
	`°rcmp
(
«mebuf
, "exint_sig6") == 0) {

343 
öput
->
exöt_sig
[6] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

344 } if(
	`°rcmp
(
«mebuf
, "exint_sig7") == 0) {

345 
öput
->
exöt_sig
[7] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

346 } if(
	`°rcmp
(
«mebuf
, "ll_inval") == 0) {

347 
öput
->
Œ_övÆ
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

349 
	`Ârötf
(
°dîr
, "unknow¿öpuàkey: %s\n", 
«mebuf
);

352 
desc
 +
ƒód
;

353 
des˛í
 -
ƒód
;

356 
	}
}

358 
	$∑r£_ouçutdesc
(*
desc
, 
size_t
 
des˛í
, 
sim_c‹e_ouçut_t
 *
ouçut
)

360 
«mebuf
[32], 
vÆbuf
[32];

361 
ƒód
;

363 
ƒód
 = 
	`ªad_eq_£micﬁ⁄_∑ú
(
desc
, 
des˛í
,

364 
«mebuf
, (namebuf),

365 
vÆbuf
, (valbuf))) {

366 if(
	`°rcmp
(
«mebuf
, "data_value") == 0) {

367 
ouçut
->
d©a_vÆue
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

368 } if(
	`°rcmp
(
«mebuf
, "data_addr") == 0) {

369 
ouçut
->
d©a_addr
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

370 } if(
	`°rcmp
(
«mebuf
, "data_read") == 0) {

371 
ouçut
->
d©a_ªad
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

372 } if(
	`°rcmp
(
«mebuf
, "data_request") == 0) {

373 
ouçut
->
d©a_ªque°
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

374 } if(
	`°rcmp
(
«mebuf
, "data_fault_ack") == 0) {

375 
ouçut
->
d©a_Áu…_ack
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

376 } if(
	`°rcmp
(
«mebuf
, "instr_addr") == 0) {

377 
ouçut
->
ö°r_addr
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

378 } if(
	`°rcmp
(
«mebuf
, "instr_request") == 0) {

379 
ouçut
->
ö°r_ªque°
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

380 } if(
	`°rcmp
(
«mebuf
, "instr_fault_ack") == 0) {

381 
ouçut
->
ö°r_Áu…_ack
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

382 } if(
	`°rcmp
(
«mebuf
, "coproc_select") == 0) {

383 
ouçut
->
c›roc_£À˘
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

384 } if(
	`°rcmp
(
«mebuf
, "coproc_op") == 0) {

385 
ouçut
->
c›roc_›
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

386 } if(
	`°rcmp
(
«mebuf
, "coproc_addr") == 0) {

387 
ouçut
->
c›roc_addr
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

388 } if(
	`°rcmp
(
«mebuf
, "coproc_value") == 0) {

389 
ouçut
->
c›roc_vÆue
 = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

390 } if(
	`°rcmp
(
«mebuf
, "exint_ack0") == 0) {

391 
ouçut
->
exöt_ack
[0] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

392 } if(
	`°rcmp
(
«mebuf
, "exint_ack1") == 0) {

393 
ouçut
->
exöt_ack
[1] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

394 } if(
	`°rcmp
(
«mebuf
, "exint_ack2") == 0) {

395 
ouçut
->
exöt_ack
[2] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

396 } if(
	`°rcmp
(
«mebuf
, "exint_ack3") == 0) {

397 
ouçut
->
exöt_ack
[3] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

398 } if(
	`°rcmp
(
«mebuf
, "exint_ack4") == 0) {

399 
ouçut
->
exöt_ack
[4] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

400 } if(
	`°rcmp
(
«mebuf
, "exint_ack5") == 0) {

401 
ouçut
->
exöt_ack
[5] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

402 } if(
	`°rcmp
(
«mebuf
, "exint_ack6") == 0) {

403 
ouçut
->
exöt_ack
[6] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

404 } if(
	`°rcmp
(
«mebuf
, "exint_ack7") == 0) {

405 
ouçut
->
exöt_ack
[7] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

406 } if(
	`°rcmp
(
«mebuf
, "user_mode") == 0) {

407 
ouçut
->
exöt_ack
[7] = 
	`°πﬁ
(
vÆbuf
, 
NULL
, 0);

409 
	`Ârötf
(
°dîr
, "unknow¿ouçuàkey: %s\n", 
«mebuf
);

412 
desc
 +
ƒód
;

413 
des˛í
 -
ƒód
;

416 
	}
}

418 
	$ªad_öput_desc
(*
∑th
, 
sim_c‹e_öput_t
 *
öput
)

420 *
buf
;

421 
size_t
 
buÊí
;

422 
°©us
;

424 if(
	`lﬂd_fûe
(
∑th
, &
buf
, &
buÊí
)) {

428 
	`mem£t
(
öput
, 0, (*input));

430 if(
	`∑r£_öputdesc
(
buf
, 
buÊí
, 
öput
)) {

435 
	}
}

437 
	$ªad_ouçut_desc
(*
∑th
, 
sim_c‹e_ouçut_t
 *
ouçut
)

439 *
buf
;

440 
size_t
 
buÊí
;

441 
°©us
;

443 if(
	`lﬂd_fûe
(
∑th
, &
buf
, &
buÊí
)) {

447 
	`mem£t
(
ouçut
, 0, (*output));

449 if(
	`∑r£_ouçutdesc
(
buf
, 
buÊí
, 
ouçut
)) {

454 
	}
}

456 
	$ªad_°©e_desc
(*
∑th
, 
sim_c‹e_°©e_t
 *
°©e
)

458 *
buf
;

459 
size_t
 
buÊí
;

460 
°©us
;

462 if(
	`lﬂd_fûe
(
∑th
, &
buf
, &
buÊí
)) {

466 
	`mem£t
(
°©e
, 0, (*state));

468 if(
	`∑r£_°©edesc
(
buf
, 
buÊí
, 
°©e
)) {

473 
	}
}

475 
	$maö
(
¨gc
, *
¨gv
[])

477 
sim_c‹e_°©e_t
 
°©e
, 
öãr_°©e
, 
föÆ_°©e
;

478 
sim_c‹e_öput_t
 
öput
;

479 
sim_c‹e_ouçut_t
 
ouçut
;

480 
uöt16_t
 *
¥og
;

481 
size_t
 
¥ogÀn
;

482 
˛i_›ts_t
 
›ts
;

483 
°©us
;

485 *
buf
;

486 
size_t
 
buÊí
;

487 
sim_c‹e_°©e_t
 
öô_°©e
;

488 
sim_c‹e_öput_t
 
exec_öput
;

489 
sim_c‹e_°©e_t
 
po°exec_°©e
;

490 
sim_c‹e_ouçut_t
 
exec_ouçut
;

491 
sim_c‹e_öput_t
 
upd©e_öput
;

492 
sim_c‹e_°©e_t
 
po°upd©e_°©e
;

493 
sim_c‹e_ouçut_t
 
upd©e_ouçut
;

495 
sim_c‹e_°©e_t
 
c‹e_°©e
;

496 
sim_c‹e_öput_t
 
c‹e_öput
;

497 
sim_c‹e_ouçut_t
 
c‹e_ouçut
;

500 if(
	`∑r£_˛i
(
¨gc
, 
¨gv
, &
›ts
)) {

501 
	`ußge
();

506 if(
	`ªad_°©e_desc
(
›ts
.
öô_°©e
, &init_state)) {

509 if(
	`ªad_öput_desc
(
›ts
.
exec_öput
, &exec_input)) {

512 if(
	`ªad_°©e_desc
(
›ts
.
po°exec_°©e
, &postexec_state)) {

515 if(
	`ªad_ouçut_desc
(
›ts
.
exec_ouçut
, &exec_output)) {

518 if(
	`ªad_öput_desc
(
›ts
.
upd©e_öput
, &update_input)) {

521 if(
	`ªad_°©e_desc
(
›ts
.
po°upd©e_°©e
, &postupdate_state)) {

524 if(
	`ªad_ouçut_desc
(
›ts
.
upd©e_ouçut
, &update_output)) {

529 
	`mem˝y
(&
c‹e_°©e
, &
öô_°©e
, (core_state));

530 
	`mem˝y
(&
c‹e_öput
, &
exec_öput
, (core_input));

531 
	`mem£t
(&
c‹e_ouçut
, 0, (core_output));

534 
°©us
 = 
	`sim_c‹e_exec
(&
c‹e_°©e
, &
c‹e_ouçut
, &
c‹e_öput
);

535 if(
°©us
) {

536 
	`Ârötf
(
°dîr
, "error: sim_core_exec()\n");

537  
°©us
;

541 
°©us
 = 
	`memcmp
(&
po°exec_°©e
, &
c‹e_°©e
, (postexec_state));

542 if(
°©us
) {

543 
	`Ârötf
(
°dîr
, "error: core_state doesÇot matchÖostexec_state\n");

544  
°©us
;

546 
°©us
 = 
	`memcmp
(&
exec_ouçut
, &
c‹e_ouçut
, (exec_output));

547 if(
°©us
) {

548 
	`Ârötf
(
°dîr
, "error: core_output doesÇot matchÉxec_output\n");

549  
°©us
;

553 
	`mem˝y
(&
c‹e_öput
, &
upd©e_öput
, (update_input));

556 
°©us
 = 
	`sim_c‹e_upd©e
(&
c‹e_°©e
, &
c‹e_ouçut
, &
c‹e_öput
);

559 
°©us
 = 
	`memcmp
(&
po°upd©e_°©e
, &
c‹e_°©e
, (postupdate_state));

560 if(
°©us
) {

561 
	`Ârötf
(
°dîr
, "error: core_state doesÇot matchÖostupdate_state\n");

562  
°©us
;

564 
°©us
 = 
	`memcmp
(&
upd©e_ouçut
, &
c‹e_ouçut
, (update_output));

565 if(
°©us
) {

566 
	`Ârötf
(
°dîr
, "error: core_output doesÇot match update_output\n");

567  
°©us
;

571 
	}
}

	@sim_cp_if.c

1 
	~<°dlib.h
>

2 
	~<°rög.h
>

3 
	~<as£π.h
>

4 
	~<°dio.h
>

6 
	~"sim_˝_if.h
"

9 
	$sim_˝_hdr_öô
(

10 
sim_˝_°©e_hdr_t
 *
hdr
,

11 
˝num
,

12 *
¨g°r
,

13 
sim_c‹e_öput_t
 *
c‹e_öput
,

14 
sim_c‹e_ouçut_t
 *
c‹e_ouçut
)

16 
i
, 
¨gnum
, 
¨gc
 = 0;

17 **
¨gv
 = 
NULL
;

19 
hdr
->
˝num
 = cpnum;

20 
hdr
->
åa˚Àvñ
 = 0;

21 
hdr
->
c‹e_öput
 = core_input;

22 
hdr
->
c‹e_ouçut
 = core_output;

25 if(
¨g°r
 && 
	`°æí
(argstr)) {

27 
i
 = 0, 
¨gc
 = 1; 
¨g°r
[i]; i++) {

28 if(
¨g°r
[
i
] == ',') {

29 
¨gc
++;

33 
¨gv
 = 
	`mÆloc
((*Ë* (
¨gc
 + 1));

34 
	`as£π
(
¨gv
);

37 
¨gv
[0] = 
¨g°r
;

38 
i
 = 1, 
¨gnum
 = 1; 
¨g°r
[i]; i++) {

39 if(
¨g°r
[
i
] == ',') {

40 
¨g°r
[
i
++] = 0;

41 
¨gv
[
¨gnum
++] = 
¨g°r
 + 
i
;

44 
¨gv
[
¨gnum
] = 
NULL
;

46 
¨gv
 = 
	`mÆloc
((*));

47 
	`as£π
(
¨gv
);

48 
¨gv
[0] = 
NULL
;

49 
¨gc
 = 0;

52 
hdr
->
¨gv
 =árgv;

53 
hdr
->
¨gc
 =árgc;

54 
	}
}

56 
	$sim_˝_hdr_deöô
(

57 
sim_˝_°©e_hdr_t
 *
hdr
)

59 
	`‰ì
(
hdr
->
¨gv
);

60 
	}
}

62 
	$sim_˝_hdr_ª£t
(

63 
sim_˝_°©e_hdr_t
 *
hdr
)

65 
i
;

66 
i
 = 0; i < 
SIM_CORE_NUM_CPREGS
; i++) {

67 
hdr
->
ªgs
[
i
] = 0;

69 
	}
}

71 
	$sim_˝_ªad
(

72 
sim_˝_°©e_hdr_t
 *
hdr
)

74 
uöt16_t
 
ªgnum
, 
vÆ
;

75 
ªgnum
 = 
hdr
->
c‹e_ouçut
->
c›roc
.
addr
;

76 
vÆ
 = 
hdr
->
ªgs
[
ªgnum
];

77 
	`TRACE
(
hdr
, 1, "coproc %d:ÑeadÑeg %d -> val %4.4x\n",

78 
hdr
->
˝num
, 
ªgnum
, 
vÆ
);

79 
hdr
->
c‹e_öput
->
c›roc
.
vÆue
 = 
vÆ
;

80 
	}
}

82 
	$sim_˝_wrôe
(

83 
sim_˝_°©e_hdr_t
 *
hdr
)

85 
uöt16_t
 
ªgnum
, 
vÆ
;

86 
ªgnum
 = 
hdr
->
c‹e_ouçut
->
c›roc
.
addr
;

87 
vÆ
 = 
hdr
->
c‹e_ouçut
->
c›roc
.
vÆue
;

88 
	`TRACE
(
hdr
, 1, "coproc %d: writeÑeg %d <- val %4.4x\n",

89 
hdr
->
˝num
, 
ªgnum
, 
vÆ
);

90 
hdr
->
ªgs
[
ªgnum
] = 
vÆ
;

91 
	}
}

	@sim_cp_if.h

1 #i‚de‡
SIM_CP_IF


2 
	#SIM_CP_IF


	)

4 
	~<°dboﬁ.h
>

5 
	~<°döt.h
>

6 
	~"sim_c‹e.h
"

8 #i‡! 
deföed
(
NOTRACE
)

9 
	#TRACE
(
HDR
, 
LEVEL
, ...) \

10 dÿ{ if((
HDR
)->
åa˚Àvñ
 & (
LEVEL
)Ë
	`¥ötf
(
__VA_ARGS__
); } 0)

	)

12 
	#TRACE
(
S
, 
L
, ...)

	)

16 
	m˝num
;

17 
uöt32_t
 
	måa˚Àvñ
;

18 
	m¨gc
;

19 **
	m¨gv
;

20 *
	m¥iv
;

21 
sim_c‹e_öput_t
 *
	mc‹e_öput
;

22 
sim_c‹e_ouçut_t
 *
	mc‹e_ouçut
;

23 
uöt16_t
 
	mªgs
[
SIM_CORE_NUM_CPREGS
];

24 } 
	tsim_˝_°©e_hdr_t
;

27 (*
	t°©e_‚_t
)(
	tsim_˝_°©e_hdr_t
 *
	thdr
);

30 *
«me
;

31 *
ußge
;

32 
sim_˝_°©e_hdr_t
 *
°©e
;

33 
°©e_‚_t
 
öô
;

34 
°©e_‚_t
 
deöô
;

35 
°©e_‚_t
 
ª£t
;

36 
°©e_‚_t
 
d©a
;

37 
°©e_‚_t
 
exec
;

38 
°©e_‚_t
 
„tch
;

39 
°©e_‚_t
 
¥öt
;

40 } 
	tsim_˝_öfo_t
;

43 
	`sim_˝_hdr_öô
(

44 
sim_˝_°©e_hdr_t
 *
hdr
,

45 
˝num
,

46 *
¨g°r
,

47 
sim_c‹e_öput_t
 *
c‹e_öput
,

48 
sim_c‹e_ouçut_t
 *
c‹e_ouçut
);

50 
	`sim_˝_hdr_deöô
(

51 
sim_˝_°©e_hdr_t
 *
hdr
);

53 
	`sim_˝_hdr_ª£t
(

54 
sim_˝_°©e_hdr_t
 *
hdr
);

56 
	`sim_˝_ªad
(

57 
sim_˝_°©e_hdr_t
 *
hdr
);

59 
	`sim_˝_wrôe
(

60 
sim_˝_°©e_hdr_t
 *
hdr
);

	@sim_cp_nvram.c

1 
	~<°dio.h
>

2 
	~<î∫o.h
>

3 
	~<°rög.h
>

4 
	~<f˙é.h
>

5 
	~<sys/mm™.h
>

6 
	~<sys/°©.h
>

7 
	~<uni°d.h
>

8 
	~<gë›t.h
>

10 
	~"sim_˝_if.h
"

11 
	~"sim_˝_nvøm.h
"

13 
	#NVRAM_CTL
(
STATE
Ë((STATE)->
hdr
.
ªgs
[
CP_NVRAM_REG_CTL
])

	)

14 
	#NVRAM_STATUS
(
STATE
Ë((STATE)->
hdr
.
ªgs
[
CP_NVRAM_REG_STATUS
])

	)

15 
	#NVRAM_ADDR_LO
(
STATE
Ë((STATE)->
hdr
.
ªgs
[
CP_NVRAM_REG_ADDR_LO
])

	)

16 
	#NVRAM_ADDR_HI
(
STATE
Ë((STATE)->
hdr
.
ªgs
[
CP_NVRAM_REG_ADDR_HI
])

	)

17 
	#NVRAM_VAL
(
STATE
Ë((STATE)->
hdr
.
ªgs
[
CP_NVRAM_REG_VAL
])

	)

19 
	$nvøm_°©e_öô
(
sim_˝_°©e_hdr_t
 *
hdr
)

21 
ch
;

22 
boﬁ
 
has_d©a
 = 
Ál£
;

23 *
d©a_∑th
 = 
NULL
;

24 
°©
 
sb
;

25 
sim_˝_nvøm_°©e_t
 *
°©e
 = (sim_˝_nvøm_°©e_à*Ë
hdr
;

27 
°©e
->
d©Æí
 = 0;

28 
°©e
->
d©a
 = 
NULL
;

29 
°©e
->
d©afd
 = -1;

31 if(! 
hdr
->
¨gc
) {

35 
›töd
 = 0;

36 (
ch
 = 
	`gë›t
(
hdr
->
¨gc
, hdr->
¨gv
, "i:")) != -1) {

37 
ch
) {

39 
has_d©a
 = 
åue
;

40 
d©a_∑th
 = 
›èrg
; ;

42 
	`¥ötf
("nvøm: unknow¿swôch %c\nußge: -ò<imagefûe>", 
ch
);

46 if(! 
has_d©a
) {

49 if(
d©a_∑th
 =
NULL
) {

50 
	`¥ötf
("nvram: -i <imagefile>Ñequired");

54 
°©e
->
d©afd
 = 
	`›í
(
d©a_∑th
, 
O_RDWR
);

55 if(
°©e
->
d©afd
 < 0) {

56 
	`Ârötf
(
°dîr
, "nvram:Érror open %s: %s (errno=%d)\n",

57 
d©a_∑th
, 
	`°ªº‹
(
î∫o
),Érrno);

60 if(
	`f°©
(
°©e
->
d©afd
, &
sb
) < 0) {

61 
	`Ârötf
(
°dîr
, "nvram:Érror stat %s: %s (errno=%d)\n",

62 
d©a_∑th
, 
	`°ªº‹
(
î∫o
),Érrno);

65 
°©e
->
d©Æí
 = 
sb
.
°_size
;

66 if(
°©e
->
d©Æí
 & 1) {

67 
	`Ârötf
(
°dîr
, "nvram: image fileÜen must beÉven\n");

70 
°©e
->
d©a
 = 
	`mm≠
(
NULL
, sèã->
d©Æí
,

71 
PROT_READ
 | 
PROT_WRITE
, 
MAP_PRIVATE
,

72 
°©e
->
d©afd
, 0);

73 if(
°©e
->
d©a
 =
MAP_FAILED
) {

74 
	`Ârötf
(
°dîr
, "nvram:Érror mmap %s: %s (errno=%d)\n",

75 
d©a_∑th
, 
	`°ªº‹
(
î∫o
),Érrno);

79 
	`¥ötf
("nvram:Üoaded %s (%d words)\n",

80 
d©a_∑th
, 
°©e
->
d©Æí
 >> 1);

83 
	}
}

85 
	$nvøm_°©e_deöô
(
sim_˝_°©e_hdr_t
 *
hdr
)

87 
°©us
;

88 
sim_˝_nvøm_°©e_t
 *
°©e
 = (sim_˝_nvøm_°©e_à*Ë
hdr
;

89 if(! 
°©e
->
d©a
) {

92 
°©us
 = 
	`munm≠
(
°©e
->
d©a
, sèã->
d©Æí
);

93 if(
°©us
) {

94 
	`Ârötf
(
°dîr
, "nvram:Érror munmap: %s (errno=%d)\n",

95 
	`°ªº‹
(
î∫o
),Érrno);

98 
	`˛o£
(
°©e
->
d©afd
);

100 
	}
}

102 
	$nvøm_°©e_ª£t
(
sim_˝_°©e_hdr_t
 *
hdr
)

104 
sim_˝_nvøm_°©e_t
 *
°©e
 = (sim_˝_nvøm_°©e_à*Ë
hdr
;

105 
°©e
->
dñay
 = 0;

106 
°©e
->
ö°_≥nd
 = 
CP_NVRAM_INSTR_NOOP
;

107 
°©e
->
addr_≥nd
 = 0;

108 
°©e
->
vÆ_≥nd
 = 0;

110 
	}
}

112 
	$nvøm_°©e_d©a
(
sim_˝_°©e_hdr_t
 *
hdr
)

114 
sim_˝_nvøm_°©e_t
 *
°©e
 = (sim_˝_nvøm_°©e_à*Ë
hdr
;

116 if(! 
°©e
->
dñay
) {

119 
	`TRACE
(
hdr
, 1, "nvram: delay %d -> %d\n",

120 
°©e
->
dñay
, state->delay-1);

121 if(-- 
°©e
->
dñay
) {

128 
°©e
->
ö°_≥nd
) {

129 
CP_NVRAM_INSTR_READ
:

130 
	`TRACE
(
hdr
, 1, "nvram:ÉxecÑeadáddr %x\n",

131 
°©e
->
addr_≥nd
);

132 if(
°©e
->
addr_≥nd
 < sèã->
d©Æí
 >> 1) {

133 
	`NVRAM_VAL
(
°©e
Ë((
uöt16_t
*)°©e->
d©a
)[°©e->
addr_≥nd
];

134 
	`NVRAM_STATUS
(
°©e
Ë
CP_NVRAM_REG_STATUS_READ_OK
;

136 
	`NVRAM_STATUS
(
°©e
Ë
CP_NVRAM_REG_STATUS_READ_ERR
;

138 
°©e
->
ö°_≥nd
 = 
CP_NVRAM_INSTR_NOOP
;

140 if(
	`NVRAM_CTL
(
°©e
Ë& 
CP_NVRAM_REG_CTL_READ_INT
) {

141 
	`TRACE
(
hdr
, 1, "nvram:Ñead complete;Ñaising interrupt\n");

142 
hdr
->
c‹e_öput
->
exöt_sig
[hdr->
˝num
] = 
åue
;

146 
CP_NVRAM_INSTR_WRITE
:

147 
	`TRACE
(
hdr
, 1, "nvram:Éxec writeáddr %x = %x\n",

148 
°©e
->
addr_≥nd
, sèã->
vÆ_≥nd
);

149 if(
°©e
->
addr_≥nd
 < sèã->
d©Æí
 >> 1) {

150 ((
uöt16_t
*)
°©e
->
d©a
)[°©e->
addr_≥nd
] = sèã->
vÆ_≥nd
;

151 
	`NVRAM_STATUS
(
°©e
Ë
CP_NVRAM_REG_STATUS_WRITE_OK
;

153 
	`NVRAM_STATUS
(
°©e
Ë
CP_NVRAM_REG_STATUS_WRITE_ERR
;

155 
°©e
->
ö°_≥nd
 = 
CP_NVRAM_INSTR_NOOP
;

157 if(
	`NVRAM_CTL
(
°©e
Ë& 
CP_NVRAM_REG_CTL_WRITE_INT
) {

158 
	`TRACE
(
hdr
, 1, "nvram: write complete;Ñaising interrupt\n");

159 
hdr
->
c‹e_öput
->
exöt_sig
[hdr->
˝num
] = 
åue
;

164 
	`TRACE
(
hdr
, 1, "nvram: unexpectedÖending instr: %d\n",

165 
°©e
->
ö°_≥nd
);

166 
°©e
->
dñay
 = 0;

167 
°©e
->
ö°_≥nd
 = 
CP_NVRAM_INSTR_NOOP
;

172 
	}
}

174 
	$nvøm_°©e_exec
(
sim_˝_°©e_hdr_t
 *
hdr
)

176 
sim_˝_nvøm_°©e_t
 *
°©e
 = (sim_˝_nvøm_°©e_à*Ë
hdr
;

177 
uöt32_t
 
addr
;

180 if(
°©e
->
dñay
) {

184 
addr
 = 
	`NVRAM_ADDR_LO
(
°©e
Ë+ (
	`NVRAM_ADDR_HI
(state) << 16);

186 
hdr
->
c‹e_ouçut
->
c›roc
.
vÆue
) {

187 
CP_NVRAM_INSTR_READ
:

188 if(
	`NVRAM_STATUS
(
°©e
Ë!
CP_NVRAM_REG_STATUS_IDLE
) {

189 
	`TRACE
(
hdr
, 1, "nvram: queueÑead butÇot idle\n");

192 
	`TRACE
(
hdr
, 1, "nvram: queueÑead\n");

193 if(
addr
 < 
°©e
->
d©Æí
) {

194 
°©e
->
ö°_≥nd
 = 
CP_NVRAM_INSTR_READ
;

195 
°©e
->
addr_≥nd
 = 
addr
;

196 
°©e
->
dñay
 = 
CP_NVRAM_DELAY_CYCLES
;

198 
	`TRACE
(
hdr
, 1, "nvram: queueÑeadÉrr\n");

199 
hdr
->
ªgs
[
CP_NVRAM_REG_STATUS
] = 
CP_NVRAM_REG_STATUS_READ_ERR
;

203 
CP_NVRAM_INSTR_WRITE
:

204 if(
	`NVRAM_STATUS
(
°©e
Ë!
CP_NVRAM_REG_STATUS_IDLE
) {

205 
	`TRACE
(
hdr
, 1, "nvram: queue write butÇot idle\n");

208 
	`TRACE
(
hdr
, 1, "nvram: queue write\n");

209 if(
addr
 < 
°©e
->
d©Æí
) {

210 
°©e
->
ö°_≥nd
 = 
CP_NVRAM_INSTR_WRITE
;

211 
°©e
->
addr_≥nd
 = 
addr
;

212 
°©e
->
vÆ_≥nd
 = 
	`NVRAM_VAL
(state);

213 
°©e
->
dñay
 = 
CP_NVRAM_DELAY_CYCLES
;

215 
	`TRACE
(
hdr
, 1, "nvram: queue writeÉrr\n");

216 
hdr
->
ªgs
[
CP_NVRAM_REG_STATUS
] = 
CP_NVRAM_REG_STATUS_WRITE_ERR
;

220 
CP_NVRAM_INSTR_ACK
:

221 
	`TRACE
(
hdr
, 1, "nvram:áck\n");

222 
	`NVRAM_STATUS
(
°©e
Ë
CP_NVRAM_REG_STATUS_IDLE
;

223 
hdr
->
c‹e_öput
->
exöt_sig
[hdr->
˝num
] = 
Ál£
;

226 
CP_NVRAM_INSTR_GETLEN_LO
:

227 
	`TRACE
(
hdr
, 1, "nvram: getlen_lo\n");

228 
hdr
->
ªgs
[
CP_NVRAM_REG_VAL
] = 
°©e
->
d©Æí
 & 0xFFFF;

231 
CP_NVRAM_INSTR_GETLEN_HI
:

232 
	`TRACE
(
hdr
, 1, "nvram: getlen_hi\n");

233 
hdr
->
ªgs
[
CP_NVRAM_REG_VAL
] = 
°©e
->
d©Æí
 >> 16;

241 
	}
}

243 
	$nvøm_°©e_¥öt
(
sim_˝_°©e_hdr_t
 *
hdr
)

245 
sim_˝_nvøm_°©e_t
 *
°©e
 = (sim_˝_nvøm_°©e_à*Ë
hdr
;

246 
	`¥ötf
("ctl=%4.4x status=%4.4xáddr_lo=%4.4xáddr_hi=%4.4x val=%4.4x\n",

247 
	`NVRAM_CTL
(
°©e
), 
	`NVRAM_STATUS
(°©e), 
	`NVRAM_ADDR_LO
(state),

248 
	`NVRAM_ADDR_HI
(
°©e
), 
	`NVRAM_VAL
(state));

250 
	`¥ötf
("delay=%x instÖend=%dáddrÖend=%4.4x valÖend=%4.4x\n",

251 
°©e
->
dñay
, sèã->
ö°_≥nd
,

252 
°©e
->
addr_≥nd
, sèã->
vÆ_≥nd
);

254 
	}
}

	@sim_cp_nvram.h

1 #i‚de‡
SIM_CP_NVRAM_H


2 
	#SIM_CP_NVRAM_H


	)

4 
	~<°döt.h
>

5 
	~"sim_˝_if.h
"

6 
	~"sim_c‹e.h
"

8 
	#CP_NVRAM_REG_CTL
 0

	)

9 
	#CP_NVRAM_REG_CTL_READ_INT
 0x1

	)

10 
	#CP_NVRAM_REG_CTL_WRITE_INT
 0x2

	)

12 
	#CP_NVRAM_REG_STATUS
 1

	)

13 
	#CP_NVRAM_REG_STATUS_IDLE
 0

	)

14 
	#CP_NVRAM_REG_STATUS_READ_PENDING
 1

	)

15 
	#CP_NVRAM_REG_STATUS_READ_OK
 2

	)

16 
	#CP_NVRAM_REG_STATUS_READ_ERR
 3

	)

17 
	#CP_NVRAM_REG_STATUS_WRITE_PENDING
 4

	)

18 
	#CP_NVRAM_REG_STATUS_WRITE_OK
 5

	)

19 
	#CP_NVRAM_REG_STATUS_WRITE_ERR
 6

	)

21 
	#CP_NVRAM_REG_ADDR_LO
 2

	)

22 
	#CP_NVRAM_REG_ADDR_HI
 3

	)

23 
	#CP_NVRAM_REG_VAL
 4

	)

25 
	#CP_NVRAM_INSTR_NOOP
 0

	)

26 
	#CP_NVRAM_INSTR_READ
 1

	)

27 
	#CP_NVRAM_INSTR_WRITE
 2

	)

28 
	#CP_NVRAM_INSTR_ACK
 3

	)

29 
	#CP_NVRAM_INSTR_GETLEN_LO
 4

	)

30 
	#CP_NVRAM_INSTR_GETLEN_HI
 5

	)

33 
	#CP_NVRAM_DELAY_CYCLES
 3

	)

37 
sim_˝_°©e_hdr_t
 
	mhdr
;

39 *
	md©a
;

40 
	md©Æí
;

41 
	md©afd
;

43 
	mdñay
;

44 
uöt16_t
 
	mö°_≥nd
;

45 
uöt16_t
 
	maddr_≥nd
;

46 
uöt16_t
 
	mvÆ_≥nd
;

47 } 
	tsim_˝_nvøm_°©e_t
;

49 
nvøm_°©e_öô
(
sim_˝_°©e_hdr_t
 *
hdr
);

50 
nvøm_°©e_deöô
(
sim_˝_°©e_hdr_t
 *
hdr
);

51 
nvøm_°©e_ª£t
(
sim_˝_°©e_hdr_t
 *
hdr
);

52 
nvøm_°©e_d©a
(
sim_˝_°©e_hdr_t
 *
hdr
);

53 
nvøm_°©e_exec
(
sim_˝_°©e_hdr_t
 *
hdr
);

54 
nvøm_°©e_¥öt
(
sim_˝_°©e_hdr_t
 *
hdr
);

	@sim_cp_timer.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"sim_˝_timî.h
"

4 
	~"utûs.h
"

6 
	#TIMER_GET_ENABLED
(
STATE
) \

7 
	`fõld_gëbôs16
((
STATE
)->
hdr
.
ªgs
[
CP_TIMER_REG_CTL
], \

8 
CP_TIMER_REG_CTL_EN_START
, \

9 
CP_TIMER_REG_CTL_EN_LEN
)

	)

11 
	#TIMER_SET_ENABLED
(
STATE
, 
EN_VAL
) \

13 (
STATE
)->
hdr
.
ªgs
[
CP_TIMER_REG_CTL
] = \

14 
	`fõld_£tbôs16
((
STATE
)->
hdr
.
ªgs
[
CP_TIMER_REG_CTL
], \

15 
CP_TIMER_REG_CTL_EN_START
, \

16 
CP_TIMER_REG_CTL_EN_LEN
, \

17 
EN_VAL
); \

18 } 0)

	)

20 
	#TIMER_CYCLES_LO
(
STATE
) \

21 ((
STATE
)->
hdr
.
ªgs
[
CP_TIMER_REG_CYCLE_LO
])

	)

23 
	#TIMER_CYCLES_HI
(
STATE
) \

24 ((
STATE
)->
hdr
.
ªgs
[
CP_TIMER_REG_CYCLE_HI
])

	)

26 
	$timî_°©e_d©a
(
sim_˝_°©e_hdr_t
 *
hdr
)

28 
sim_˝_timî_°©e_t
 *
°©e
 = (sim_˝_timî_°©e_à*Ë
hdr
;

30 if(
	`TIMER_GET_ENABLED
(
°©e
)) {

32 
	`TIMER_CYCLES_LO
(
°©e
) --;

33 
	`TRACE
(
hdr
, 1, "timer: cycles_lo -> %4.4x\n",

34 
	`TIMER_CYCLES_LO
(
°©e
));

36 if(! 
	`TIMER_CYCLES_LO
(
°©e
)) {

37 if(! 
	`TIMER_CYCLES_HI
(
°©e
)) {

39 
	`TRACE
(
hdr
, 1, "timer:Ñaising interrupt\n");

40 
	`TIMER_SET_ENABLED
(
°©e
, 
Ál£
);

41 
hdr
->
c‹e_öput
->
exöt_sig
[hdr->
˝num
] = 
åue
;

43 
	`TIMER_CYCLES_HI
(
°©e
) --;

44 
	`TRACE
(
hdr
, 1, "timer: cycles_hi -> %4.4x\n",

45 
	`TIMER_CYCLES_LO
(
°©e
));

50 
	}
}

52 
	$timî_°©e_exec
(
sim_˝_°©e_hdr_t
 *
hdr
)

54 
hdr
->
c‹e_ouçut
->
c›roc
.
vÆue
) {

55 
CP_TIMER_INSTR_IACK
:

56 
	`TRACE
(
hdr
, 1, "timer:Éxec iack\n");

57 
hdr
->
c‹e_öput
->
exöt_sig
[hdr->
˝num
] = 
Ál£
;

60 
	`TRACE
(
hdr
, 1, "timer:Éxec UNKNOWN\n");

65 
	}
}

67 
	$timî_°©e_¥öt
(
sim_˝_°©e_hdr_t
 *
hdr
)

69 
sim_˝_timî_°©e_t
 *
°©e
 = (sim_˝_timî_°©e_à*Ë
hdr
;

71 
	`¥ötf
("íabÀd: %d\n", 
	`TIMER_GET_ENABLED
(
°©e
));

72 
	`¥ötf
("cy˛es_lo: %x\n", 
	`TIMER_CYCLES_LO
(
°©e
));

73 
	`¥ötf
("cy˛es_hi: %x\n", 
	`TIMER_CYCLES_HI
(
°©e
));

76 
	}
}

	@sim_cp_timer.h

1 #i‚de‡
SIM_CP_TIMER_H


2 
	#SIM_CP_TIMER_H


	)

4 
	~<°döt.h
>

5 
	~"sim_˝_if.h
"

6 
	~"sim_c‹e.h
"

9 
	#CP_TIMER_INSTR_NOOP
 0

	)

10 
	#CP_TIMER_INSTR_IACK
 1

	)

12 
	#CP_TIMER_REG_CTL
 0

	)

13 
	#CP_TIMER_REG_CTL_EN_START
 0

	)

14 
	#CP_TIMER_REG_CTL_EN_LEN
 1

	)

16 
	#CP_TIMER_REG_CYCLE_LO
 1

	)

17 
	#CP_TIMER_REG_CYCLE_HI
 2

	)

20 
sim_˝_°©e_hdr_t
 
	mhdr
;

21 } 
	tsim_˝_timî_°©e_t
;

23 
timî_°©e_d©a
(
sim_˝_°©e_hdr_t
 *
hdr
);

24 
timî_°©e_exec
(
sim_˝_°©e_hdr_t
 *
hdr
);

25 
timî_°©e_¥öt
(
sim_˝_°©e_hdr_t
 *
hdr
);

30 
uöt16_t
 
	m¨øy
[
SIM_CORE_NUM_CPREGS
];

32 
uöt16_t
 
	m˘l
;

33 
uöt16_t
 
	mcy˛es_lo
;

34 
uöt16_t
 
	mcy˛es_hi
;

35 } 
	m«med
;

36 } 
	mªgs
;

38 
	m˝num
;

39 
boﬁ
 
	måa˚
;

40 } 
	tsim_˝_timî_°©e_t
;

42 
sim_˝_timî_öô
(

43 
sim_˝_timî_°©e_t
 *
°©e
,

44 
˝num
);

46 
sim_˝_timî_deöô
(

47 
sim_˝_timî_°©e_t
 *
°©e
);

49 
sim_˝_timî_ª£t
(

50 
sim_˝_timî_°©e_t
 *
°©e
);

52 
sim_˝_timî_ac˚ss
(

53 
sim_c‹e_öput_t
 *
c‹e_öput
,

54 
sim_c‹e_ouçut_t
 *
c‹e_ouçut
,

55 
sim_˝_timî_°©e_t
 *
timî_°©e
);

	@sim_cp_uart.c

1 
	~<°dio.h
>

2 
	~<utû.h
>

3 
	~<î∫o.h
>

4 
	~<°rög.h
>

5 
	~<uni°d.h
>

6 
	~<f˙é.h
>

7 
	~<°dlib.h
>

8 
	~<as£π.h
>

9 
	~<sys/ty≥s.h
>

10 
	~<sys/°©.h
>

12 
	~"sim_˝_u¨t.h
"

14 
	#POLL_TIMEOUT_MS
 100

	)

17 
msg_t
 
	mhdr
;

18 
	mc
;

19 } 
	tch¨msg_t
;

21 
ch¨msg_t
 *
	$ch¨msg_√w
(
c
)

23 
ch¨msg_t
 *
m
 = 
	`mÆloc
((charmsg_t));

24 if(
m
) {

25 
	`msg_öô
(
m
);

26 
m
->
c
 = c;

28  
m
;

29 
	}
}

31 *
	$rx_thr_fun
(*
p
)

33 
pﬁlfd
 
pﬁl_io
;

34 
°©us
;

35 
c
;

36 
size_t
 
u£d
;

37 
ch¨msg_t
 *
m
;

38 
sim_˝_u¨t_°©e_t
 *
°©e
 = (sim_˝_u¨t_°©e_à*Ë
p
;

42 
pﬁl_io
.
fd
 = 
°©e
->
rxfd
;

43 
pﬁl_io
.
evíts
 = 
POLLIN
;

44 
°©e
->
run_thªads
) {

45 
pﬁl_io
.
ªvíts
 = 0;

46 
°©us
 = 
	`pﬁl
(&
pﬁl_io
, 1, 
POLL_TIMEOUT_MS
);

47 if(
°©us
 < 0) {

48 
	`Ârötf
(
°dîr
, "uart:ÖollÉrror: %s (errno=%d)\n",

49 
	`°ªº‹
(
î∫o
),Érrno);

50 if(
î∫o
 !
EINTR
 &&Éºnÿ!
EAGAIN
) {

55 if(
pﬁl_io
.
ªvíts
 & (
POLLERR
 | 
POLLNVAL
) ) {

56 
	`Ârötf
(
°dîr
, "uart:ÖollÑeturnedÉrr=%dÇval=%d\n",

57 (
pﬁl_io
.
ªvíts
 & 
POLLERR
) != 0,

58 (
pﬁl_io
.
ªvíts
 & 
POLLNVAL
) != 0);

61 if(
°©us
 == 0) {

65 
°©us
 = 
	`ªad
(
°©e
->
rxfd
, &
c
, 1);

66 if(
°©us
 < 0) {

67 
	`¥ötf
("uart:ÑeadÉrror %s (errno=%d)\n",

68 
	`°ªº‹
(
î∫o
),Érrno);

69 if(
î∫o
 !
EINTR
) {

73 if(
°©us
 == 0) {

76 
	`TRACE
(&
°©e
->
hdr
, 2, "u¨t:Ñe˚ived ch¨ %c\n", 
c
);

78 
u£d
 = 
	`mbox_Àn
(&(
°©e
->
ö_box
));

79 
m
 = 
NULL
;

80 if(
°©e
->
fifo_í
 && 
u£d
 < sèã->
fifo_Àn
) {

81 
	`TRACE
(&
°©e
->
hdr
, 2, "uart: fifoÑx spaceávail\n");

82 
	`as£π
(
m
 = 
	`ch¨msg_√w
(
c
));

83 } if(!
u£d
) {

84 
	`TRACE
(&
°©e
->
hdr
, 2, "uart:Ñx spaceávail\n");

85 
	`as£π
(
m
 = 
	`ch¨msg_√w
(
c
));

87 if(
m
) {

88 
	`TRACE
(&
°©e
->
hdr
, 2, "uart:Öost msg\n");

89 
	`mbox_msg_po°
(&(
°©e
->
ö_box
), &(
m
->
hdr
));

95  
NULL
;

96 
	}
}

98 *
	$tx_thr_fun
(*
p
)

100 
ch¨msg_t
 *
m
;

101 
sim_˝_u¨t_°©e_t
 *
°©e
 = (sim_˝_u¨t_°©e_à*Ë
p
;

105 
°©e
->
run_thªads
) {

106 
m
 = (
ch¨msg_t
 *Ë
	`mbox_msg_gë_waô
(&(
°©e
->
out_box
),

107 
POLL_TIMEOUT_MS
/1000,

108 (
POLL_TIMEOUT_MS
%1000) * 1000000);

109 if(
m
) {

110 
	`wrôe
(
°©e
->
txfd
, &(
m
->
c
), 1);

111 
	`TRACE
(&
°©e
->
hdr
, 2, "u¨t: síàch¨ %c\n", 
m
->
c
);

112 
	`‰ì
(
m
);

118  
NULL
;

119 
	}
}

121 
	$u¨t_°©e_öô
(
sim_˝_°©e_hdr_t
 *
hdr
)

123 
°©us
, 
ch
;

124 
sim_˝_u¨t_°©e_t
 *
°©e
 = (sim_˝_u¨t_°©e_à*Ë
hdr
;

127 
›töd
 = 0;

128 (
ch
 = 
	`gë›t
(
hdr
->
¨gc
, hdr->
¨gv
, "r:t:")) != -1) {

129 
ch
) {

131 
°©e
->
rx∑th
 = 
›èrg
;

134 
°©e
->
tx∑th
 = 
›èrg
;

137 
	`Ârötf
(
°dîr
, "u¨t: unknow¿swôch -%c", 
ch
);

141 if(
°©e
->
rx∑th
) {

142 
	`Ârötf
(
°dîr
, "u¨t: o≥nög Rx FIFOáà%s\n", 
°©e
->
rx∑th
);

143 
°©e
->
rxfd
 = 
	`›í
(°©e->
rx∑th
, 
O_RDONLY
);

144 if(
°©e
->
rxfd
 < 0) {

145 
	`Ârötf
(
°dîr
, "uart:Érror opening %s: %s (errno=%d)\n",

146 
°©e
->
rx∑th
, 
	`°ªº‹
(
î∫o
),Érrno);

150 
°©e
->
rxfd
 = -1;

152 if(
°©e
->
tx∑th
) {

153 
	`Ârötf
(
°dîr
, "u¨t: o≥nög Tx FIFOáà%s\n", 
°©e
->
rx∑th
);

154 
°©e
->
txfd
 = 
	`›í
(°©e->
tx∑th
, 
O_WRONLY
);

155 if(
°©e
->
txfd
 < 0) {

156 
	`Ârötf
(
°dîr
, "uart:Érror opening %s: %s (errno=%d)\n",

157 
°©e
->
tx∑th
, 
	`°ªº‹
(
î∫o
),Érrno);

161 
°©e
->
txfd
 = -1;

164 
	`mbox_öô
(&(
°©e
->
ö_box
));

165 
	`mbox_öô
(&(
°©e
->
out_box
));

166 
°©e
->
fifo_Àn
 = 
FIFO_LEN
;

167 
°©e
->
run_thªads
 = 1;

169 if(
°©e
->
rxfd
 >= 0) {

170 
	`±hªad_¸óã
(&(
°©e
->
rx_thr
), 
NULL
, 
rx_thr_fun
, state);

172 if(
°©e
->
txfd
 >= 0) {

173 
	`±hªad_¸óã
(&(
°©e
->
tx_thr
), 
NULL
, 
tx_thr_fun
, state);

177 
	}
}

179 
	$u¨t_°©e_deöô
(
sim_˝_°©e_hdr_t
 *
hdr
)

181 
sim_˝_u¨t_°©e_t
 *
°©e
 = (sim_˝_u¨t_°©e_à*Ë
hdr
;

182 
°©e
->
run_thªads
 = 
Ál£
;

183 if(
°©e
->
rxfd
 >= 0) {

184 
	`±hªad_joö
(
°©e
->
rx_thr
, 
NULL
);

186 if(
°©e
->
txfd
 >= 0) {

187 
	`±hªad_joö
(
°©e
->
tx_thr
, 
NULL
);

189 
	`˛o£
(
°©e
->
rxfd
);

190 
	`˛o£
(
°©e
->
txfd
);

192 
	}
}

194 
	$u¨t_°©e_ª£t
(
sim_˝_°©e_hdr_t
 *
hdr
)

196 
size_t
 
i
, 
n
;

197 
ch¨msg_t
 *
m
;

198 
sim_˝_u¨t_°©e_t
 *
°©e
 = (sim_˝_u¨t_°©e_à*Ë
hdr
;

200 
i
 = 0, 
n
 = 
	`mbox_Àn
(&
°©e
->
ö_box
); i <Ç; i++) {

201 
m
 = (
ch¨msg_t
 *Ë
	`mbox_msg_gë
(&
°©e
->
ö_box
);

202 
	`‰ì
(
m
);

205 
i
 = 0, 
n
 = 
	`mbox_Àn
(&
°©e
->
out_box
); i <Ç; i++) {

206 
m
 = (
ch¨msg_t
 *Ë
	`mbox_msg_gë
(&
°©e
->
out_box
);

207 
	`‰ì
(
m
);

211 
	}
}

213 
	$u¨t_°©e_d©a
(
sim_˝_°©e_hdr_t
 *
hdr
)

215 
size_t
 
n
;

216 
sim_˝_u¨t_°©e_t
 *
°©e
 = (sim_˝_u¨t_°©e_à*Ë
hdr
;

219 
n
 = 
	`mbox_Àn
(&
°©e
->
ö_box
);

220 if(
n
) {

221 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:Ñx dataávailable\n");

222 
°©e
->
hdr
.
ªgs
[
CP_UART_REG_STATUS
] |
CP_UART_REG_STATUS_RX_AVAIL
;

223 if(!
°©e
->
rx_øi£d
 &&

224 
°©e
->
hdr
.
ªgs
[
CP_UART_REG_CTL
] & 
CP_UART_REG_CTL_RX_AVAIL_INT
){

225 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:ÑaiseÑx data interrupt\n");

226 
°©e
->
hdr
.
c‹e_öput
->
exöt_sig
[°©e->hdr.
˝num
] = 
åue
;

229 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:ÇoÑx data\n");

230 
°©e
->
hdr
.
ªgs
[
CP_UART_REG_STATUS
] &~
CP_UART_REG_STATUS_RX_AVAIL
;

234 
n
 = 
	`mbox_Àn
(&
°©e
->
out_box
);

235 if(
n
 < 
°©e
->
fifo_Àn
) {

236 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:Åx spaceávailable\n");

237 
°©e
->
hdr
.
ªgs
[
CP_UART_REG_STATUS
] |
CP_UART_REG_STATUS_TX_SPACE
;

238 if(!
°©e
->
tx_øi£d
 &&

239 
°©e
->
hdr
.
ªgs
[
CP_UART_REG_CTL
] & 
CP_UART_REG_CTL_TX_SPACE_INT
){

240 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:ÑaiseÅx space interrupt\n");

241 
°©e
->
hdr
.
c‹e_öput
->
exöt_sig
[°©e->hdr.
˝num
] = 
åue
;

244 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:ÇoÅx space\n");

245 
°©e
->
hdr
.
ªgs
[
CP_UART_REG_STATUS
] &~
CP_UART_REG_STATUS_TX_SPACE
;

249 
	}
}

251 
	$u¨t_°©e_exec
(
sim_˝_°©e_hdr_t
 *
hdr
)

253 
size_t
 
i
, 
n
;

254 
ch¨msg_t
 *
m
;

255 
sim_˝_u¨t_°©e_t
 *
°©e
 = (sim_˝_u¨t_°©e_à*Ë
hdr
;

257 
hdr
->
c‹e_ouçut
->
c›roc
.
vÆue
) {

258 
CP_UART_INSTR_NOOP
:

259 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:ÉxecÇoop\n");

262 
CP_UART_INSTR_SEND
:

263 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:Éxec send\n");

264 if(
	`mbox_Àn
(&
°©e
->
out_box
Ë< sèã->
fifo_Àn
) {

265 
	`TRACE
(&
°©e
->
hdr
, 1, "uart: send spaceávail\n");

266 
	`as£π
(
m
 = 
	`ch¨msg_√w
(
hdr
->
ªgs
[
CP_UART_REG_VAL
]));

267 
	`mbox_msg_po°
(&(
°©e
->
out_box
), &(
m
->
hdr
));

271 
CP_UART_INSTR_RECV
:

272 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:ÉxecÑecv\n");

273 if(
	`mbox_Àn
(&
°©e
->
out_box
)) {

274 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:Ñecv dataávail\n");

275 
m
 = (
ch¨msg_t
 *Ë
	`mbox_msg_gë
(&
°©e
->
out_box
);

276 
hdr
->
ªgs
[
CP_UART_REG_VAL
] = 
m
->
c
;

277 
	`‰ì
(
m
);

281 
CP_UART_INSTR_TXUSED
:

282 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:ÉxecÅxused\n");

283 
hdr
->
ªgs
[
CP_UART_REG_VAL
] = 
	`mbox_Àn
(&
°©e
->
out_box
);

286 
CP_UART_INSTR_RXUSED
:

287 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:ÉxecÑxused\n");

288 
hdr
->
ªgs
[
CP_UART_REG_VAL
] = 
	`mbox_Àn
(&
°©e
->
ö_box
);

291 
CP_UART_INSTR_RESET_TX
:

292 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:ÉxecÑesetÅx\n");

293 
°©e
->
tx_øi£d
 = 
Ál£
;

296 
CP_UART_INSTR_RESET_RX
:

297 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:ÉxecÑesetÑx\n");

298 
°©e
->
rx_øi£d
 = 
Ál£
;

301 
CP_UART_INSTR_CLEAR
:

302 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:Éxec clear\n");

303 
i
 = 0, 
n
 = 
	`mbox_Àn
(&
°©e
->
ö_box
); i <Ç; i++) {

304 
m
 = (
ch¨msg_t
 *Ë
	`mbox_msg_gë
(&
°©e
->
out_box
);

305 
	`‰ì
(
m
);

309 
CP_UART_FIFOS_ON
:

310 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:Éxec fifos on\n");

311 
°©e
->
fifo_í
 = 
åue
;

314 
CP_UART_FIFOS_OFF
:

315 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:Éxec fifos off\n");

316 
°©e
->
fifo_í
 = 
Ál£
;

319 
CP_UART_INT_ACK
:

320 
	`TRACE
(&
°©e
->
hdr
, 1, "uart:Éxec intáck\n");

321 
°©e
->
hdr
.
c‹e_öput
->
exöt_sig
[°©e->hdr.
˝num
] = 
Ál£
;

325 
	}
}

327 
	$u¨t_°©e_¥öt
(
sim_˝_°©e_hdr_t
 *
hdr
)

329 
sim_˝_u¨t_°©e_t
 *
°©e
 = (sim_˝_u¨t_°©e_à*Ë
hdr
;

330 
	`¥ötf
("fifo_en=%d incnt=%uÑx_raised=%d outcnt=%uÅx_raised=%d\n",

331 
°©e
->
fifo_í
,

332 (Ë
	`mbox_Àn
(&
°©e
->
ö_box
), sèã->
rx_øi£d
,

333 (Ë
	`mbox_Àn
(&
°©e
->
out_box
), sèã->
tx_øi£d
);

335 
	}
}

	@sim_cp_uart.h

1 #i‚de‡
SIM_CP_UART_H


2 
	#SIM_CP_UART_H


	)

4 
	~<pﬁl.h
>

5 
	~<±hªad.h
>

6 
	~<°dboﬁ.h
>

8 
	~"sim_˝_if.h
"

9 
	~"mbox.h
"

11 
	#FIFO_LEN
 16

	)

13 
	#CP_UART_REG_CTL
 0

	)

14 
	#CP_UART_REG_CTL_TX_SPACE_INT
 1

	)

15 
	#CP_UART_REG_CTL_RX_AVAIL_INT
 2

	)

17 
	#CP_UART_REG_STATUS
 1

	)

18 
	#CP_UART_REG_STATUS_TX_SPACE
 1

	)

19 
	#CP_UART_REG_STATUS_RX_AVAIL
 2

	)

21 
	#CP_UART_REG_VAL
 2

	)

23 
	#CP_UART_INSTR_NOOP
 0

	)

24 
	#CP_UART_INSTR_SEND
 1

	)

25 
	#CP_UART_INSTR_RECV
 2

	)

26 
	#CP_UART_INSTR_TXUSED
 3

	)

27 
	#CP_UART_INSTR_RXUSED
 4

	)

28 
	#CP_UART_INSTR_RESET_TX
 5

	)

29 
	#CP_UART_INSTR_RESET_RX
 6

	)

30 
	#CP_UART_INSTR_CLEAR
 7

	)

31 
	#CP_UART_FIFOS_ON
 8

	)

32 
	#CP_UART_FIFOS_OFF
 9

	)

33 
	#CP_UART_INT_ACK
 10

	)

36 
sim_˝_°©e_hdr_t
 
	mhdr
;

38 
	mtxfd
, 
	mrxfd
;

39 *
	mrx∑th
, *
	mtx∑th
;

41 
boﬁ
 
	mfifo_í
;

42 
size_t
 
	mfifo_Àn
;

43 
mbox_t
 
	mö_box
;

44 
mbox_t
 
	mout_box
;

45 
boﬁ
 
	mtx_øi£d
, 
	mrx_øi£d
;

47 
±hªad_t
 
	mrx_thr
, 
	mtx_thr
;

48 
boﬁ
 
	mrun_thªads
;

50 
±hªad_muãx_t
 
	m°©us_mux
;

51 } 
	tsim_˝_u¨t_°©e_t
;

54 
u¨t_°©e_öô
(
sim_˝_°©e_hdr_t
 *
hdr
);

55 
u¨t_°©e_deöô
(
sim_˝_°©e_hdr_t
 *
hdr
);

56 
u¨t_°©e_ª£t
(
sim_˝_°©e_hdr_t
 *
hdr
);

57 
u¨t_°©e_d©a
(
sim_˝_°©e_hdr_t
 *
hdr
);

58 
u¨t_°©e_exec
(
sim_˝_°©e_hdr_t
 *
hdr
);

59 
u¨t_°©e_¥öt
(
sim_˝_°©e_hdr_t
 *
hdr
);

	@sim_memif.c

1 
	~"°dio.h
"

2 
	~"sim_memif.h
"

4 #i‡! 
deföed
(
NOTRACE
)

5 
	#TRACE
(
STATE
, 
LEVEL
, ...) \

7 if((
STATE
)->
åa˚Àvñ
 & (
LEVEL
)) \

8 
	`¥ötf
–
__VA_ARGS__
 ); \

9 } 0)

	)

10 
	#TRACEBLOCK
(
°©e
, 
BLOCK
) \

12 if((
STATE
)->
åa˚Àvñ
 & (
LEVEL
)) \

13 
BLOCK
 \

14 } 0)

	)

16 
	#TRACE
(
STATE
, ...)

	)

17 
	#TRACEBLOCK
(
°©e
, 
BLOCK
)

	)

20 
	$sim_memif_öô
(

21 
sim_memif_°©e_t
 *
°©e
,

22 
uöt16_t
 *
physmem
,

23 
size_t
 
memÀn
,

24 *
«me
)

26 
°©e
->
physmem
 =Öhysmem;

27 
°©e
->
memÀn
 = memlen;

28 
°©e
->
dñay
 = 0;

29 
°©e
->
quõs˚¡
 = 
åue
;

30 
°©e
->
«me
 =Çame;

31 
	}
}

33 
	$sim_memif_ac˚ss
(

34 
sim_c‹e_mem_öput_t
 *
c‹e_öput
,

35 
sim_c‹e_mem_ouçut_t
 *
c‹e_ouçut
,

36 
sim_memif_°©e_t
 *
mem_°©e
)

38 
c‹e_öput
->
Áu…
 = 
Ál£
;

39 
c‹e_öput
->
vÆid
 = 
Ál£
;

41 if(
c‹e_ouçut
->
ªque°
) {

42 if(
mem_°©e
->
quõs˚¡
) {

43 
	`TRACE
(
mem_°©e
, 1, "mem %s: quõs˚¡\n", mem_°©e->
«me
);

44 
mem_°©e
->
dñay
 = 
MEMIF_DELAY
;

45 
mem_°©e
->
quõs˚¡
 = 
Ál£
;

47 if(
mem_°©e
->
dñay
) {

48 
	`TRACE
(
mem_°©e
, 1, "mem %s: dñay\n", mem_°©e->
«me
);

49 
mem_°©e
->
dñay
--;

53 
	`TRACE
(
mem_°©e
, 1, "mem %s: idÀ\n", mem_°©e->
«me
);

57 if(
c‹e_ouçut
->
addr
 > 
mem_°©e
->
memÀn
) {

58 
	`TRACE
(
mem_°©e
, 1, "mem %s:ádd∏Áu…\n", mem_°©e->
«me
);

59 
c‹e_öput
->
vÆid
 = 
Ál£
;

60 
c‹e_öput
->
Áu…
 = 
åue
;

61 } if(
c‹e_ouçut
->
ªad
) {

62 
c‹e_öput
->
vÆue
 = 
mem_°©e
->
physmem
[
c‹e_ouçut
->
addr
];

63 
	`TRACE
(
mem_°©e
, 1, "mem %s:Ñeadáddr %4.4x val %4.4x\n",

64 
mem_°©e
->
«me
, 
c‹e_ouçut
->
addr
, 
c‹e_öput
->
vÆue
);

65 
c‹e_öput
->
vÆid
 = 
åue
;

66 
c‹e_öput
->
Áu…
 = 
Ál£
;

68 
	`TRACE
(
mem_°©e
, 1, "mem %s: writeáddr %4.4x val %4.4x\n",

69 
mem_°©e
->
«me
, 
c‹e_ouçut
->
addr
, c‹e_ouçut->
vÆue
);

70 
mem_°©e
->
physmem
[
c‹e_ouçut
->
addr
] = c‹e_ouçut->
vÆue
;

71 
c‹e_öput
->
vÆid
 = 
åue
;

72 
c‹e_öput
->
Áu…
 = 
Ál£
;

74 
mem_°©e
->
quõs˚¡
 = 
åue
;

75 
	}
}

77 
	$sim_memif_tick
(
sim_memif_°©e_t
 *
mem_°©e
)

79 if(! 
mem_°©e
->
quõs˚¡
)

80 
mem_°©e
->
dñay
--;

81 
	}
}

	@sim_memif.h

1 #i‚de‡
SIM_MEMIF_H


2 
	#SIM_MEMIF_H


	)

4 
	~<°dlib.h
>

5 
	~"sim_c‹e.h
"

8 
	#MEMIF_DELAY
 1

	)

11 
uöt16_t
 *
	mphysmem
;

12 
size_t
 
	mmemÀn
;

13 
uöt8_t
 
	mdñay
;

14 
boﬁ
 
	mquõs˚¡
;

16 *
	m«me
;

17 
uöt32_t
 
	måa˚Àvñ
;

18 } 
	tsim_memif_°©e_t
;

20 
sim_memif_öô
(

21 
sim_memif_°©e_t
 *
°©e
,

22 
uöt16_t
 *
physmem
,

23 
size_t
 
memÀn
,

24 *
«me
);

26 
sim_memif_ac˚ss
(

27 
sim_c‹e_mem_öput_t
 *
c‹e_öput
,

28 
sim_c‹e_mem_ouçut_t
 *
c‹e_ouçut
,

29 
sim_memif_°©e_t
 *
mem_°©e
);

31 
sim_memif_tick
(
sim_memif_°©e_t
 *
mem_°©e
);

	@sim_physmem.c

1 
	~<°döt.h
>

2 
	~"sim_utûs.h
"

3 
	~"sim_physmem.h
"

4 
	~"sim_c‹e.h
"

6 
uöt16_t
 
	gsim_physmem
[
SIM_PHYSMEM_LEN
] = { 0 };

8 
uöt8_t
 
	gg_zîo
 = 0;

10 
	$sim_physmem_io_£tup_d©a
(
sim_physmem_io_t
 *
pmio
, 
sim_c‹e_io_t
 *
c‹eio
)

12 
i
;

14 
i
 = 0; i < 
SIM_CORE_DADDR_LINES
 && i < 
SIM_PHYSMEM_ADDR_BITS
; i++) {

15 
pmio
->
daddr
[
i
] = 
c‹eio
->daddr[i];

18  ; 
i
 < 
SIM_CORE_DADDR_LINES
; i++) {

19 
pmio
->
daddr
[
i
] = &
g_zîo
;

22 
i
 = 0; i < 
SIM_CORE_DVAL_LINES
 && i < 
SIM_PHYSMEM_DATA_BITS
; i++) {

23 
pmio
->
dvÆ
[
i
] = 
c‹eio
->dval[i];

26  ; 
i
 < 
SIM_CORE_DVAL_LINES
; i++) {

27 
pmio
->
dvÆ
[
i
] = &
g_zîo
;

30 
pmio
->
dªq
 = 
c‹eio
->dreq;

31 
pmio
->
dªad
 = 
c‹eio
->dread;

32 
pmio
->
dvÆid
 = 
c‹eio
->dvalid;

34 
i
 = 0; i < 
SIM_CORE_IADDR_LINES
 && i < 
SIM_PHYSMEM_ADDR_BITS
; i++) {

35 
pmio
->
üddr
[
i
] = 
c‹eio
->iaddr[i];

38  ; 
i
 < 
SIM_CORE_IADDR_LINES
; i++) {

39 
pmio
->
üddr
[
i
] = &
g_zîo
;

42 
i
 = 0; i < 
SIM_CORE_IVAL_LINES
 && i < 
SIM_PHYSMEM_DATA_BITS
; i++) {

43 
pmio
->
ivÆ
[
i
] = 
c‹eio
->ival[i];

46  ; 
i
 < 
SIM_CORE_IVAL_LINES
; i++) {

47 
pmio
->
ivÆ
[
i
] = &
g_zîo
;

50 
pmio
->
úeq
 = 
c‹eio
->ireq;

51 
pmio
->
ivÆid
 = 
c‹eio
->ivalid;

52 
	}
}

54 
	$sim_physmem_tick
(
sim_physmem_io_t
 *
io
)

56 
uöt32_t
 
addr
;

57 
uöt32_t
 
d©a
;

59 if(*
io
->
úeq
) {

60 
	`demux_löes
(
io
->
üddr
, 
SIM_PHYSMEM_ADDR_BITS
, &
addr
);

62 
d©a
 = 
sim_physmem
[
addr
];

63 
	`mux_löes
(
d©a
, 
io
->
ivÆ
, 
SIM_PHYSMEM_DATA_BITS
);

65 *(
io
->
ivÆid
) = 1;

68 if(*
io
->
dªq
) {

69 
	`demux_löes
(
io
->
daddr
, 
SIM_PHYSMEM_ADDR_BITS
, &
addr
);

71 if(*
io
->
dªad
) {

72 
d©a
 = 
sim_physmem
[
addr
];

73 
	`mux_löes
(
d©a
, 
io
->
dvÆ
, 
SIM_PHYSMEM_DATA_BITS
);

75 
	`demux_löes
(
io
->
dvÆ
, 
SIM_PHYSMEM_DATA_BITS
, &
d©a
);

76 
sim_physmem
[
addr
] = 
d©a
;

79 *(
io
->
dvÆid
) = 1;

81 
	}
}

	@sim_physmem.h

1 #i‚de‡
SIM_PHYSMEM_H


2 
	#SIM_PHYSMEM_H


	)

4 
	~<°döt.h
>

6 
	~"sim_c‹e.h
"

8 
	#SIM_PHYSMEM_ADDR_BITS
 16

	)

9 
	#SIM_PHYSMEM_DATA_BITS
 16

	)

11 
uöt16_t
 
sim_physmem
[];

12 
	#SIM_PHYSMEM_LEN
 (0x1 << (
SIM_PHYSMEM_ADDR_BITS
-1))

	)

15 
uöt8_t
 *
	mdaddr
[
SIM_PHYSMEM_ADDR_BITS
];

16 
uöt8_t
 *
	mdvÆ
[
SIM_PHYSMEM_DATA_BITS
];

17 
uöt8_t
 *
	mdªq
;

18 
uöt8_t
 *
	mdªad
;

19 
uöt8_t
 *
	mdvÆid
;

20 
uöt8_t
 *
	müddr
[
SIM_PHYSMEM_ADDR_BITS
];

21 
uöt8_t
 *
	mivÆ
[
SIM_PHYSMEM_DATA_BITS
];

22 
uöt8_t
 *
	múeq
;

23 
uöt8_t
 *
	mivÆid
;

24 } 
	tsim_physmem_io_t
;

26 
sim_physmem_io_£tup_d©a
(
sim_physmem_io_t
 *
pmio
, 
sim_c‹e_io_t
 *
c‹eio
);

27 
sim_physmem_io_£tup_ö°
(
sim_physmem_io_t
 *
pmio
, 
sim_c‹e_io_t
 *
c‹eio
);

28 
sim_physmem_tick
(
sim_physmem_io_t
 *
io
);

	@sim_utils.c

1 
	~"sim_utûs.h
"

3 
	$mux_löes
(
uöt8_t
 **
löes
, 
∆öes
, 
uöt32_t
 *
outvÆ
)

5 
i
;

7 *
outvÆ
 = 0;

8 
i
 = 0; i < 
∆öes
; i++) {

9 *
outvÆ
 |(*(
löes
[
i
]) & 0x1) << i;

11 
	}
}

13 
	$demux_löes
(
uöt32_t
 
övÆ
, 
uöt8_t
 **
löes
, 
∆öes
)

15 
i
;

17 
i
 = 0; i < 
∆öes
; i++) {

18 *(
löes
[
i
]Ë(
övÆ
 >> i) & 0x1;

20 
	}
}

	@sim_utils.h

1 #i‚de‡
SIM_UTILS_H


2 
	#SIM_UTILS_H


	)

4 
	~<°döt.h
>

7 
mux_löes
(
uöt8_t
 **
löes
, 
∆öes
, 
uöt32_t
 *
outvÆ
);

10 
demux_löes
(
uöt32_t
 
övÆ
, 
uöt8_t
 **
löes
, 
∆öes
);

	@utils.c

1 
	~<f˙é.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<î∫o.h
>

5 
	~<sys/°©.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

9 
	~"utûs.h
"

11 
	$lﬂd_fûe
(*
∑th
, **
d©a
, 
size_t
 *
d©Æí
)

13 
°©
 
sb
;

14 
°©us
;

15 
size_t
 
fûesize
;

16 
size_t
 
byã§ód
;

17 *
buf
 = 
NULL
, *
curs‹
;

18 
fd
 = -1;

20 
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
);

21 if((
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
)) < 0) {

22 
	`Ârötf
(
°dîr
, "error opening %s: %s (errno=%d)\n",

23 
∑th
, 
	`°ªº‹
(
î∫o
),Érrno);

24 
îr‹
;

27 if(
	`f°©
(
fd
, &
sb
)) {

28 
	`Ârötf
(
°dîr
, "error in stat(\"%s\"): %s (errno=%d)\n",

29 
∑th
, 
	`°ªº‹
(
î∫o
),Érrno);

30 
îr‹
;

32 
fûesize
 = 
sb
.
°_size
;

34 if(!(
buf
 = 
	`mÆloc
(
fûesize
))) {

35 
	`Ârötf
(
°dîr
, "out of memory\n");

36 
îr‹
;

39 
curs‹
 = 
buf
;

40 
byã§ód
 = 0;

41 
fûesize
) {

42 
°©us
 = 
	`ªad
(
fd
, 
curs‹
, 
fûesize
);

43 if(
°©us
 < 0){

44 if(
î∫o
 !
EINTR
) {

45 
	`Ârötf
(
°dîr
, "readÉrror: %s (errno=%d)\n",

46 
	`°ªº‹
(
î∫o
),Érrno);

47 
îr‹
;

50 if(
°©us
 == 0) {

51 
	`Ârötf
(
°dîr
, "Warning: unexpectedÉnd of fileát byte %lu\n",

52 
byã§ód
);

55 
fûesize
 -
°©us
;

56 
curs‹
 +
°©us
;

57 
byã§ód
 +
°©us
;

60 *
d©a
 = 
buf
;

61 *
d©Æí
 = 
byã§ód
;

62 
	`˛o£
(
fd
);

65 
îr‹
:

66 
	`‰ì
(
buf
);

67 if(
fd
 >= 0) {

68 
	`˛o£
(
fd
);

71 
	}
}

	@utils.h

1 #i‚de‡
UTILS_H


2 
	#UTILS_H


	)

4 
	~"°döt.h
"

6 
ölöe


7 
uöt16_t
 
	$bômask16
(
°¨t
, 
num
)

9  ((1 << 
num
Ë- 1Ë<< 
°¨t
;

10 
	}
}

12 
ölöe


13 
uöt16_t
 
	$fõld_gëbôs16
(
uöt16_t
 
fõld
, 
°¨t
, 
num
)

15 
uöt16_t
 
mask
;

16 
mask
 = 
	`bômask16
(
°¨t
, 
num
);

17 
fõld
 >>
°¨t
;

18 
fõld
 &
mask
;

19  
fõld
;

20 
	}
}

22 
ölöe


23 
uöt16_t
 
	$fõld_£tbôs16
(
uöt16_t
 
fõld
, 
°¨t
, 
num
, uöt16_à
vÆ
)

25 
uöt16_t
 
mask
;

26 
mask
 = 
	`bômask16
(
°¨t
, 
num
);

27 
fõld
 &~
mask
;

28 
vÆ
 <<
°¨t
;

29 
vÆ
 &
mask
;

30 
fõld
 |
vÆ
;

31  
fõld
;

32 
	}
}

34 
lﬂd_fûe
(*
∑th
, **
d©a
, 
size_t
 *
d©Æí
);

	@/usr/include/assert.h

42 
	~<sys/cdefs.h
>

43 #ifde‡
__˝lu•lus


44 
	~<°dlib.h
>

52 #unde‡
as£π


53 #unde‡
__as£π


55 #ifde‡
NDEBUG


56 
	#as£π
(
e
Ë(()0)

	)

59 #i‚de‡
__GNUC__


61 
	g__BEGIN_DECLS


62 #i‚de‡
__˝lu•lus


63 
	$ab‹t
(Ë
__dód2
;

65 
	`¥ötf
(c⁄° * 
__ª°ri˘
, ...);

66 
__END_DECLS


68 
	#as£π
(
e
) \

69 ((Ë((
e
Ë? 0 : 
	`__as£π
 (#e, 
__FILE__
, 
__LINE__
)))

	)

70 
	#__as£π
(
e
, 
fûe
, 
löe
) \

71 (()
	`¥ötf
 ("%s:%u: faûedás£πi⁄ `%s'\n", 
fûe
, 
löe
, 
e
), 
	`ab‹t
())

	)

75 
__BEGIN_DECLS


76 
	$__as£π_πn
(c⁄° *, c⁄° *, , c⁄° *Ë
__dód2
;

77 
	$__ïrötf
(c⁄° *, c⁄° *, , c⁄° *Ë
__dód2
;

78 
__END_DECLS


80 
	#__as£π
(
e
, 
fûe
, 
löe
) \

81 
	`__ïrötf
 ("%s:%u: faûedás£πi⁄ `%s'\n", 
fûe
, 
löe
, 
e
)

	)

83 #i‡
__DARWIN_UNIX03


84 
	#as£π
(
e
) \

85 (
	`__buûtö_ex≥˘
(!(
e
), 0Ë? 
	`__as£π_πn
(
__func__
, 
__FILE__
, 
__LINE__
, #eË: ()0)

	)

87 
	#as£π
(
e
) \

88 (
	`__buûtö_ex≥˘
(!(
e
), 0Ë? 
	`__as£π
 (#e, 
__FILE__
, 
__LINE__
Ë: ()0)

	)

	@/usr/include/ctype.h

66 #i‚def 
_CTYPE_H_


67 
	#_CTYPE_H_


	)

69 
	~<ru√ty≥.h
>

71 
	#_CTYPE_A
 0x00000100L

	)

72 
	#_CTYPE_C
 0x00000200L

	)

73 
	#_CTYPE_D
 0x00000400L

	)

74 
	#_CTYPE_G
 0x00000800L

	)

75 
	#_CTYPE_L
 0x00001000L

	)

76 
	#_CTYPE_P
 0x00002000L

	)

77 
	#_CTYPE_S
 0x00004000L

	)

78 
	#_CTYPE_U
 0x00008000L

	)

79 
	#_CTYPE_X
 0x00010000L

	)

80 
	#_CTYPE_B
 0x00020000L

	)

81 
	#_CTYPE_R
 0x00040000L

	)

82 
	#_CTYPE_I
 0x00080000L

	)

83 
	#_CTYPE_T
 0x00100000L

	)

84 
	#_CTYPE_Q
 0x00200000L

	)

85 
	#_CTYPE_SW0
 0x20000000L

	)

86 
	#_CTYPE_SW1
 0x40000000L

	)

87 
	#_CTYPE_SW2
 0x80000000L

	)

88 
	#_CTYPE_SW3
 0xc0000000L

	)

89 
	#_CTYPE_SWM
 0xe0000000L

	)

90 
	#_CTYPE_SWS
 30

	)

92 #ifde‡
_NONSTD_SOURCE


96 
	#_A
 
_CTYPE_A


	)

97 
	#_C
 
_CTYPE_C


	)

98 
	#_D
 
_CTYPE_D


	)

99 
	#_G
 
_CTYPE_G


	)

100 
	#_L
 
_CTYPE_L


	)

101 
	#_P
 
_CTYPE_P


	)

102 
	#_S
 
_CTYPE_S


	)

103 
	#_U
 
_CTYPE_U


	)

104 
	#_X
 
_CTYPE_X


	)

105 
	#_B
 
_CTYPE_B


	)

106 
	#_R
 
_CTYPE_R


	)

107 
	#_I
 
_CTYPE_I


	)

108 
	#_T
 
_CTYPE_T


	)

109 
	#_Q
 
_CTYPE_Q


	)

110 
	#_SW0
 
_CTYPE_SW0


	)

111 
	#_SW1
 
_CTYPE_SW1


	)

112 
	#_SW2
 
_CTYPE_SW2


	)

113 
	#_SW3
 
_CTYPE_SW3


	)

120 #ifde‡
_EXTERNALIZE_CTYPE_INLINES_


121 
	#_USE_CTYPE_INLINE_


	)

122 
	#__DARWIN_CTYPE_°©ic_ölöe


	)

124 
	#__DARWIN_CTYPE_°©ic_ölöe
 
__ölöe


	)

131 #ifde‡
_EXTERNALIZE_CTYPE_INLINES_TOP_


132 
	#_USE_CTYPE_INLINE_


	)

133 
	#__DARWIN_CTYPE_TOP_°©ic_ölöe


	)

135 
	#__DARWIN_CTYPE_TOP_°©ic_ölöe
 
__ölöe


	)

141 #i‡!
deföed
(
_DONT_USE_CTYPE_INLINE_
) && \

142 (
deföed
(
_USE_CTYPE_INLINE_
Ë|| deföed(
__GNUC__
Ë|| 
	$deföed
(
__˝lu•lus
))

145 
__BEGIN_DECLS


146 
	`___ru√ty≥
(
__d¨wö_˘_ru√_t
);

147 
__d¨wö_˘_ru√_t
 
	`___tﬁowî
(__darwin_ct_rune_t);

148 
__d¨wö_˘_ru√_t
 
	`___touµî
(__darwin_ct_rune_t);

149 
__END_DECLS


151 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

152 
	$ißscii
(
_c
)

154  ((
_c
 & ~0x7F) == 0);

155 
	}
}

157 #ifde‡
USE_ASCII


158 
__DARWIN_CTYPE_°©ic_ölöe
 

159 
	$__maskru√
(
__d¨wö_˘_ru√_t
 
_c
, 
_f
)

161  
_DeÁu…Ru√LoˇÀ
.
__ru√ty≥
[
_c
 & 0xff] & 
_f
;

162 
	}
}

164 
__BEGIN_DECLS


165 
__maskru√
(
__d¨wö_˘_ru√_t
, );

166 
	g__END_DECLS


169 
__DARWIN_CTYPE_°©ic_ölöe
 

170 
	$__i°y≥
(
__d¨wö_˘_ru√_t
 
_c
, 
_f
)

172 #ifde‡
USE_ASCII


173  !!(
	`__maskru√
(
_c
, 
_f
));

175  (
	`ißscii
(
_c
Ë? !!(
_DeÁu…Ru√LoˇÀ
.
__ru√ty≥
[_c] & 
_f
)

176 : !!
	`__maskru√
(
_c
, 
_f
));

178 
	}
}

180 
__DARWIN_CTYPE_°©ic_ölöe
 
__d¨wö_˘_ru√_t


181 
	$__is˘y≥
(
__d¨wö_˘_ru√_t
 
_c
, 
_f
)

183 #ifde‡
USE_ASCII


184  !!(
	`__maskru√
(
_c
, 
_f
));

186  (
_c
 < 0 || _¯>
_CACHED_RUNES
) ? 0 :

187 !!(
_DeÁu…Ru√LoˇÀ
.
__ru√ty≥
[
_c
] & 
_f
);

189 
	}
}

191 #ifde‡
USE_ASCII


192 
__DARWIN_CTYPE_°©ic_ölöe
 
__d¨wö_˘_ru√_t


193 
	$__touµî
(
__d¨wö_˘_ru√_t
 
_c
)

195  
_DeÁu…Ru√LoˇÀ
.
__m≠uµî
[
_c
 & 0xff];

196 
	}
}

198 
__DARWIN_CTYPE_°©ic_ölöe
 
__d¨wö_˘_ru√_t


199 
	$__tﬁowî
(
__d¨wö_˘_ru√_t
 
_c
)

201  
_DeÁu…Ru√LoˇÀ
.
__m≠lowî
[
_c
 & 0xff];

202 
	}
}

204 
__BEGIN_DECLS


205 
__d¨wö_˘_ru√_t
 
__touµî
(__darwin_ct_rune_t);

206 
__d¨wö_˘_ru√_t
 
__tﬁowî
(__darwin_ct_rune_t);

207 
	g__END_DECLS


210 
__DARWIN_CTYPE_°©ic_ölöe
 

211 
	$__wcwidth
(
__d¨wö_˘_ru√_t
 
_c
)

213 
_x
;

215 i‡(
_c
 == 0)

217 
_x
 = ()
	`__maskru√
(
_c
, 
_CTYPE_SWM
|
_CTYPE_R
);

218 i‡((
_x
 & 
_CTYPE_SWM
) != 0)

219  ((
_x
 & 
_CTYPE_SWM
Ë>> 
_CTYPE_SWS
);

220  ((
_x
 & 
_CTYPE_R
) != 0 ? 1 : -1);

221 
	}
}

223 #i‚de‡
_EXTERNALIZE_CTYPE_INLINES_


225 
	#_tﬁowî
(
c
Ë
	`__tﬁowî
(c)

	)

226 
	#_touµî
(
c
Ë
	`__touµî
(c)

	)

228 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

229 
	$iß um
(
_c
)

231  (
	`__i°y≥
(
_c
, 
_CTYPE_A
|
_CTYPE_D
));

232 
	}
}

234 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

235 
	$ißÕha
(
_c
)

237  (
	`__i°y≥
(
_c
, 
_CTYPE_A
));

238 
	}
}

240 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

241 
	$isbœnk
(
_c
)

243  (
	`__i°y≥
(
_c
, 
_CTYPE_B
));

244 
	}
}

246 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

247 
	$is˙ål
(
_c
)

249  (
	`__i°y≥
(
_c
, 
_CTYPE_C
));

250 
	}
}

253 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

254 
	$isdigô
(
_c
)

256  (
	`__is˘y≥
(
_c
, 
_CTYPE_D
));

257 
	}
}

259 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

260 
	$isgøph
(
_c
)

262  (
	`__i°y≥
(
_c
, 
_CTYPE_G
));

263 
	}
}

265 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

266 
	$i¶owî
(
_c
)

268  (
	`__i°y≥
(
_c
, 
_CTYPE_L
));

269 
	}
}

271 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

272 
	$i•röt
(
_c
)

274  (
	`__i°y≥
(
_c
, 
_CTYPE_R
));

275 
	}
}

277 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

278 
	$i•un˘
(
_c
)

280  (
	`__i°y≥
(
_c
, 
_CTYPE_P
));

281 
	}
}

283 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

284 
	$is•a˚
(
_c
)

286  (
	`__i°y≥
(
_c
, 
_CTYPE_S
));

287 
	}
}

289 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

290 
	$isuµî
(
_c
)

292  (
	`__i°y≥
(
_c
, 
_CTYPE_U
));

293 
	}
}

296 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

297 
	$isxdigô
(
_c
)

299  (
	`__is˘y≥
(
_c
, 
_CTYPE_X
));

300 
	}
}

302 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

303 
	$tﬂscii
(
_c
)

305  (
_c
 & 0x7F);

306 
	}
}

308 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

309 
	$tﬁowî
(
_c
)

311  (
	`__tﬁowî
(
_c
));

312 
	}
}

314 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

315 
	$touµî
(
_c
)

317  (
	`__touµî
(
_c
));

318 
	}
}

320 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

321 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

322 
	$digôtoöt
(
_c
)

324  (
	`__maskru√
(
_c
, 0x0F));

325 
	}
}

327 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

328 
	$ishexnumbî
(
_c
)

330  (
	`__i°y≥
(
_c
, 
_CTYPE_X
));

331 
	}
}

333 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

334 
	$isideogøm
(
_c
)

336  (
	`__i°y≥
(
_c
, 
_CTYPE_I
));

337 
	}
}

339 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

340 
	$i¢umbî
(
_c
)

342  (
	`__i°y≥
(
_c
, 
_CTYPE_D
));

343 
	}
}

345 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

346 
	$i•h⁄ogøm
(
_c
)

348  (
	`__i°y≥
(
_c
, 
_CTYPE_Q
));

349 
	}
}

351 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

352 
	$i§u√
(
_c
)

354  (
	`__i°y≥
(
_c
, 0xFFFFFFF0L));

355 
	}
}

357 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

358 
	$is•ecül
(
_c
)

360  (
	`__i°y≥
(
_c
, 
_CTYPE_T
));

361 
	}
}

367 
__BEGIN_DECLS


368 
iß um
();

369 
ißÕha
();

370 
isbœnk
();

371 
is˙ål
();

372 
isdigô
();

373 
isgøph
();

374 
i¶owî
();

375 
i•röt
();

376 
i•un˘
();

377 
is•a˚
();

378 
isuµî
();

379 
isxdigô
();

380 
tﬁowî
();

381 
touµî
();

382 
ißscii
();

383 
tﬂscii
();

385 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

386 
_tﬁowî
();

387 
_touµî
();

388 
digôtoöt
();

389 
ishexnumbî
();

390 
isideogøm
();

391 
i¢umbî
();

392 
i•h⁄ogøm
();

393 
i§u√
();

394 
is•ecül
();

396 
	g__END_DECLS


400 #ifde‡
_USE_EXTENDED_LOCALES_


401 
	~<xloˇÀ/_˘y≥.h
>

	@/usr/include/errno.h

23 
	~<sys/î∫o.h
>

	@/usr/include/fcntl.h

23 
	~<sys/f˙é.h
>

	@/usr/include/getopt.h

40 #i‚de‡
_GETOPT_H_


41 
	#_GETOPT_H_


	)

43 
	~<sys/cdefs.h
>

44 
	~<uni°d.h
>

50 
	#no_¨gumít
 0

	)

51 
	#ªquúed_¨gumít
 1

	)

52 
	#›ti⁄Æ_¨gumít
 2

	)

54 
	s›ti⁄
 {

56 c⁄° *
	m«me
;

61 
	mhas_¨g
;

63 *
	mÊag
;

65 
	mvÆ
;

68 
__BEGIN_DECLS


69 
gë›t_l⁄g
(, * const *, const *,

70 c⁄° 
›ti⁄
 *, *);

71 
gë›t_l⁄g_⁄ly
(, * const *, const *,

72 c⁄° 
›ti⁄
 *, *);

73 #i‚de‡
_GETOPT


74 
	#_GETOPT


	)

75 
	$gë›t
(, * c⁄° [], c⁄° *Ë
	`__DARWIN_ALIAS
(
gë›t
);

77 *
›èrg
;

78 
›töd
, 
›ãº
, 
›t›t
;

80 #i‚de‡
_OPTRESET


81 
	#_OPTRESET


	)

82 
›åe£t
;

84 
__END_DECLS


	@/usr/include/limits.h

60 #i‚de‡
_LIMITS_H_


61 
	#_LIMITS_H_


	)

63 
	~<sys/cdefs.h
>

64 
	~<machöe/limôs.h
>

65 
	~<sys/sy¶imôs.h
>

67 #i‡!
deföed
(
_ANSI_SOURCE
)

68 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

69 
	#_POSIX_AIO_MAX
 1

	)

70 
	#_POSIX_DELAYTIMER_MAX
 32

	)

71 
	#_POSIX_HOST_NAME_MAX
 255

	)

72 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

73 
	#_POSIX_MQ_OPEN_MAX
 8

	)

74 
	#_POSIX_MQ_PRIO_MAX
 32

	)

76 
	#_POSIX_ARG_MAX
 4096

	)

77 
	#_POSIX_CHILD_MAX
 25

	)

78 
	#_POSIX_LINK_MAX
 8

	)

79 
	#_POSIX_MAX_CANON
 255

	)

80 
	#_POSIX_MAX_INPUT
 255

	)

81 
	#_POSIX_NAME_MAX
 14

	)

82 
	#_POSIX_NGROUPS_MAX
 8

	)

83 
	#_POSIX_OPEN_MAX
 20

	)

84 
	#_POSIX_PATH_MAX
 256

	)

85 
	#_POSIX_PIPE_BUF
 512

	)

86 
	#_POSIX_SSIZE_MAX
 32767

	)

87 
	#_POSIX_STREAM_MAX
 8

	)

88 
	#_POSIX_TZNAME_MAX
 6

	)

90 
	#_POSIX_RE_DUP_MAX
 255

	)

91 
	#_POSIX_RTSIG_MAX
 8

	)

92 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

93 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

94 
	#_POSIX_SIGQUEUE_MAX
 32

	)

95 
	#_POSIX_SS_REPL_MAX
 4

	)

96 
	#_POSIX_SYMLINK_MAX
 255

	)

97 
	#_POSIX_SYMLOOP_MAX
 8

	)

98 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

99 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

100 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

101 
	#_POSIX_TIMER_MAX
 32

	)

102 
	#_POSIX_TRACE_EVENT_NAME_MAX
 30

	)

103 
	#_POSIX_TRACE_NAME_MAX
 8

	)

104 
	#_POSIX_TRACE_SYS_MAX
 8

	)

105 
	#_POSIX_TRACE_USER_EVENT_MAX
 32

	)

106 
	#_POSIX_TTY_NAME_MAX
 9

	)

108 
	#_POSIX2_BC_BASE_MAX
 99

	)

109 
	#_POSIX2_BC_DIM_MAX
 2048

	)

110 
	#_POSIX2_BC_SCALE_MAX
 99

	)

111 
	#_POSIX2_BC_STRING_MAX
 1000

	)

112 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

113 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

114 
	#_POSIX2_EQUIV_CLASS_MAX
 2

	)

115 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

116 
	#_POSIX2_LINE_MAX
 2048

	)

117 
	#_POSIX2_RE_DUP_MAX
 255

	)

119 
	#PTHREAD_STACK_MIN
 8192

	)

120 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 4

	)

121 
	#PTHREAD_KEYS_MAX
 512

	)

123 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

124 
	#PASS_MAX
 128

	)

127 
	#NL_ARGMAX
 9

	)

128 
	#NL_LANGMAX
 14

	)

129 
	#NL_MSGMAX
 32767

	)

130 
	#NL_NMAX
 1

	)

131 
	#NL_SETMAX
 255

	)

132 
	#NL_TEXTMAX
 2048

	)

134 
	#_XOPEN_IOV_MAX
 16

	)

135 
	#IOV_MAX
 1024

	)

136 
	#_XOPEN_NAME_MAX
 255

	)

137 
	#_XOPEN_PATH_MAX
 1024

	)

	@/usr/include/poll.h

23 
	~<sys/pﬁl.h
>

	@/usr/include/pthread.h

52 #i‚de‡
_PTHREAD_H


53 
	#_PTHREAD_H


	)

55 
	~<_ty≥s.h
>

56 #i‚de‡
__POSIX_LIB__


57 
	~<±hªad_im∂.h
>

59 
	~<sched.h
>

60 
	~<time.h
>

62 #i‚de‡
_PTHREAD_ATTR_T


63 
	#_PTHREAD_ATTR_T


	)

64 
__d¨wö_±hªad_©å_t
 
	t±hªad_©å_t
;

67 #i‚de‡
_PTHREAD_COND_T


68 
	#_PTHREAD_COND_T


	)

69 
__d¨wö_±hªad_c⁄d_t
 
	t±hªad_c⁄d_t
;

72 #i‚de‡
_PTHREAD_CONDATTR_T


73 
	#_PTHREAD_CONDATTR_T


	)

74 
__d¨wö_±hªad_c⁄d©å_t
 
	t±hªad_c⁄d©å_t
;

77 #i‚de‡
_PTHREAD_KEY_T


78 
	#_PTHREAD_KEY_T


	)

79 
__d¨wö_±hªad_key_t
 
	t±hªad_key_t
;

82 #i‚de‡
_PTHREAD_MUTEX_T


83 
	#_PTHREAD_MUTEX_T


	)

84 
__d¨wö_±hªad_muãx_t
 
	t±hªad_muãx_t
;

87 #i‚de‡
_PTHREAD_MUTEXATTR_T


88 
	#_PTHREAD_MUTEXATTR_T


	)

89 
__d¨wö_±hªad_muãx©å_t
 
	t±hªad_muãx©å_t
;

92 #i‚de‡
_PTHREAD_ONCE_T


93 
	#_PTHREAD_ONCE_T


	)

94 
__d¨wö_±hªad_⁄˚_t
 
	t±hªad_⁄˚_t
;

97 #i‚de‡
_PTHREAD_RWLOCK_T


98 
	#_PTHREAD_RWLOCK_T


	)

99 
__d¨wö_±hªad_rwlock_t
 
	t±hªad_rwlock_t
;

102 #i‚de‡
_PTHREAD_RWLOCKATTR_T


103 
	#_PTHREAD_RWLOCKATTR_T


	)

104 
__d¨wö_±hªad_rwlock©å_t
 
	t±hªad_rwlock©å_t
;

107 #i‚de‡
_PTHREAD_T


108 
	#_PTHREAD_T


	)

109 
__d¨wö_±hªad_t
 
	t±hªad_t
;

112 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

114 #i‚de‡
_MACH_PORT_T


115 
	#_MACH_PORT_T


	)

116 
__d¨wö_mach_p‹t_t
 
	tmach_p‹t_t
;

119 #i‚de‡
_SIGSET_T


120 
	#_SIGSET_T


	)

121 
__d¨wö_sig£t_t
 
	tsig£t_t
;

146 
	~<sys/cdefs.h
>

148 
	g__BEGIN_DECLS


159 
	#±hªad_˛ónup_push
(
func
, 
vÆ
) \

161 
__d¨wö_±hªad_h™dÀr_ªc
 
__h™dÀr
; \

162 
±hªad_t
 
__£lf
 = 
	`±hªad_£lf
(); \

163 
__h™dÀr
.
__routöe
 = 
func
; \

164 
__h™dÀr
.
__¨g
 = 
vÆ
; \

165 
__h™dÀr
.
__√xt
 = 
__£lf
->
__˛ónup_°ack
; \

166 
__£lf
->
__˛ónup_°ack
 = &
__h™dÀr
;

	)

168 
	#±hªad_˛ónup_p›
(
execuã
) \

170 
__£lf
->
__˛ónup_°ack
 = 
__h™dÀr
.
__√xt
; \

171 i‡(
execuã
Ë(
__h™dÀr
.
__routöe
)(__h™dÀr.
__¨g
); \

172 }

	)

178 
	#PTHREAD_CREATE_JOINABLE
 1

	)

179 
	#PTHREAD_CREATE_DETACHED
 2

	)

181 
	#PTHREAD_INHERIT_SCHED
 1

	)

182 
	#PTHREAD_EXPLICIT_SCHED
 2

	)

184 
	#PTHREAD_CANCEL_ENABLE
 0x01

	)

185 
	#PTHREAD_CANCEL_DISABLE
 0x00

	)

186 
	#PTHREAD_CANCEL_DEFERRED
 0x02

	)

187 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 0x00

	)

190 
	#PTHREAD_CANCELED
 ((*Ë1)

	)

193 
	#PTHREAD_SCOPE_SYSTEM
 1

	)

194 
	#PTHREAD_SCOPE_PROCESS
 2

	)

197 
	#PTHREAD_PROCESS_SHARED
 1

	)

198 
	#PTHREAD_PROCESS_PRIVATE
 2

	)

203 
	#PTHREAD_PRIO_NONE
 0

	)

204 
	#PTHREAD_PRIO_INHERIT
 1

	)

205 
	#PTHREAD_PRIO_PROTECT
 2

	)

210 
	#PTHREAD_MUTEX_NORMAL
 0

	)

211 
	#PTHREAD_MUTEX_ERRORCHECK
 1

	)

212 
	#PTHREAD_MUTEX_RECURSIVE
 2

	)

213 
	#PTHREAD_MUTEX_DEFAULT
 
PTHREAD_MUTEX_NORMAL


	)

218 
	#PTHREAD_RWLOCK_INITIALIZER
 {
_PTHREAD_RWLOCK_SIG_öô
, {0}}

	)

223 
	#PTHREAD_MUTEX_INITIALIZER
 {
_PTHREAD_MUTEX_SIG_öô
, {0}}

	)

233 
	#PTHREAD_COND_INITIALIZER
 {
_PTHREAD_COND_SIG_öô
, {0}}

	)

239 
	#PTHREAD_ONCE_INIT
 {
_PTHREAD_ONCE_SIG_öô
, {0}}

	)

244 
±hªad_©f‹k
((*)(), (*)(),

246 
	`±hªad_©å_de°roy
(
±hªad_©å_t
 *);

247 
	`±hªad_©å_gëdëach°©e
(c⁄° 
±hªad_©å_t
 *,

249 
	`±hªad_©å_gëgu¨dsize
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
,

250 
size_t
 * 
__ª°ri˘
);

251 
	`±hªad_©å_gëöhîôsched
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
,

252 * 
__ª°ri˘
);

253 
	`±hªad_©å_gësched∑øm
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
,

254 
sched_∑øm
 * 
__ª°ri˘
);

255 
	`±hªad_©å_gëschedpﬁicy
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
,

256 * 
__ª°ri˘
);

257 
	`±hªad_©å_gësc›e
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
, * __restrict);

258 
	`±hªad_©å_gë°ack
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
,

259 ** 
__ª°ri˘
, 
size_t
 * __restrict);

260 
	`±hªad_©å_gë°ackaddr
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
,

261 ** 
__ª°ri˘
);

262 
	`±hªad_©å_gë°acksize
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
,

263 
size_t
 * 
__ª°ri˘
);

264 
	`±hªad_©å_öô
(
±hªad_©å_t
 *);

265 
	`±hªad_©å_£tdëach°©e
(
±hªad_©å_t
 *,

267 
	`±hªad_©å_£tgu¨dsize
(
±hªad_©å_t
 *, 
size_t
 );

268 
	`±hªad_©å_£töhîôsched
(
±hªad_©å_t
 *,

270 
	`±hªad_©å_£tsched∑øm
(
±hªad_©å_t
 * 
__ª°ri˘
,

271 c⁄° 
sched_∑øm
 * 
__ª°ri˘
);

272 
	`±hªad_©å_£tschedpﬁicy
(
±hªad_©å_t
 *,

274 
	`±hªad_©å_£tsc›e
(
±hªad_©å_t
 *, );

275 
	`±hªad_©å_£t°ack
(
±hªad_©å_t
 *,

276 *, 
size_t
 );

277 
	`±hªad_©å_£t°ackaddr
(
±hªad_©å_t
 *,

279 
	`±hªad_©å_£t°acksize
(
±hªad_©å_t
 *, 
size_t
 );

280 
	$±hªad_ˇn˚l
(
±hªad_t
 ) 
	`__DARWIN_ALIAS
(
±hªad_ˇn˚l
);

282 
	`±hªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 *);

283 
	`±hªad_c⁄d_de°roy
(
±hªad_c⁄d_t
 *);

284 
	$±hªad_c⁄d_öô
(
±hªad_c⁄d_t
 * 
__ª°ri˘
,

285 c⁄° 
±hªad_c⁄d©å_t
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS
(
±hªad_c⁄d_öô
);

286 
	`±hªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 *);

287 
	$±hªad_c⁄d_timedwaô
(
±hªad_c⁄d_t
 * 
__ª°ri˘
,

288 
±hªad_muãx_t
 * 
__ª°ri˘
,

289 c⁄° 
time•ec
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS_C
(
±hªad_c⁄d_timedwaô
);

290 
	$±hªad_c⁄d_waô
(
±hªad_c⁄d_t
 * 
__ª°ri˘
,

291 
±hªad_muãx_t
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS_C
(
±hªad_c⁄d_waô
);

292 
	`±hªad_c⁄d©å_de°roy
(
±hªad_c⁄d©å_t
 *);

293 
	`±hªad_c⁄d©å_öô
(
±hªad_c⁄d©å_t
 *);

294 
	`±hªad_c⁄d©å_gëpsh¨ed
(c⁄° 
±hªad_c⁄d©å_t
 * 
__ª°ri˘
,

295 * 
__ª°ri˘
);

296 
	`±hªad_c⁄d©å_£çsh¨ed
(
±hªad_c⁄d©å_t
 *,

298 
	`±hªad_¸óã
(
±hªad_t
 * 
__ª°ri˘
,

299 c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
,

301 * 
__ª°ri˘
);

302 
	`±hªad_dëach
(
±hªad_t
 );

303 
	`±hªad_equÆ
(
±hªad_t
 ,

304 
±hªad_t
 );

305 
	$±hªad_exô
(*Ë
__dód2
;

306 
	`±hªad_gëc⁄cuºícy
();

307 
	`±hªad_gësched∑øm
(
±hªad_t
 , * 
__ª°ri˘
, 
sched_∑øm
 * __restrict);

308 *
	`±hªad_gë•ecific
(
±hªad_key_t
 );

309 
	$±hªad_joö
(
±hªad_t
 , **Ë
	`__DARWIN_ALIAS_C
(
±hªad_joö
);

310 
	`±hªad_key_¸óã
(
±hªad_key_t
 *, (*)(*));

311 
	`±hªad_key_dñëe
(
±hªad_key_t
 );

312 
	`±hªad_muãx_de°roy
(
±hªad_muãx_t
 *);

313 
	`±hªad_muãx_gë¥io˚ûög
(c⁄° 
±hªad_muãx_t
 * 
__ª°ri˘
, * __restrict);

314 
	`±hªad_muãx_öô
(
±hªad_muãx_t
 * 
__ª°ri˘
, c⁄° 
±hªad_muãx©å_t
 * __restrict);

315 
	`±hªad_muãx_lock
(
±hªad_muãx_t
 *);

316 
	`±hªad_muãx_£çrio˚ûög
(
±hªad_muãx_t
 * 
__ª°ri˘
, , * __restrict);

317 
	`±hªad_muãx_åylock
(
±hªad_muãx_t
 *);

318 
	`±hªad_muãx_u∆ock
(
±hªad_muãx_t
 *);

319 
	$±hªad_muãx©å_de°roy
(
±hªad_muãx©å_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_muãx©å_de°roy
);

320 
	`±hªad_muãx©å_gë¥io˚ûög
(c⁄° 
±hªad_muãx©å_t
 * 
__ª°ri˘
, * __restrict);

321 
	`±hªad_muãx©å_gë¥Ÿocﬁ
(c⁄° 
±hªad_muãx©å_t
 * 
__ª°ri˘
, * __restrict);

322 
	`±hªad_muãx©å_gëpsh¨ed
(c⁄° 
±hªad_muãx©å_t
 * 
__ª°ri˘
, * __restrict);

323 
	`±hªad_muãx©å_gëty≥
(c⁄° 
±hªad_muãx©å_t
 * 
__ª°ri˘
, * __restrict);

324 
	`±hªad_muãx©å_öô
(
±hªad_muãx©å_t
 *);

325 
	`±hªad_muãx©å_£çrio˚ûög
(
±hªad_muãx©å_t
 *, );

326 
	`±hªad_muãx©å_£çrŸocﬁ
(
±hªad_muãx©å_t
 *, );

327 
	`±hªad_muãx©å_£çsh¨ed
(
±hªad_muãx©å_t
 *, );

328 
	`±hªad_muãx©å_£ây≥
(
±hªad_muãx©å_t
 *, );

329 
	`±hªad_⁄˚
(
±hªad_⁄˚_t
 *, (*)());

330 
	$±hªad_rwlock_de°roy
(
±hªad_rwlock_t
 * ) 
	`__DARWIN_ALIAS
(
±hªad_rwlock_de°roy
);

331 
	$±hªad_rwlock_öô
(
±hªad_rwlock_t
 * 
__ª°ri˘
, c⁄° 
±hªad_rwlock©å_t
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_öô
);

332 
	$±hªad_rwlock_rdlock
(
±hªad_rwlock_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_rdlock
);

333 
	$±hªad_rwlock_åyrdlock
(
±hªad_rwlock_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_åyrdlock
);

334 
	$±hªad_rwlock_åywæock
(
±hªad_rwlock_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_åywæock
);

335 
	$±hªad_rwlock_wæock
(
±hªad_rwlock_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_wæock
);

336 
	$±hªad_rwlock_u∆ock
(
±hªad_rwlock_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_u∆ock
);

337 
	`±hªad_rwlock©å_de°roy
(
±hªad_rwlock©å_t
 *);

338 
	`±hªad_rwlock©å_gëpsh¨ed
(c⁄° 
±hªad_rwlock©å_t
 * 
__ª°ri˘
,

339 * 
__ª°ri˘
);

340 
	`±hªad_rwlock©å_öô
(
±hªad_rwlock©å_t
 *);

341 
	`±hªad_rwlock©å_£çsh¨ed
(
±hªad_rwlock©å_t
 *,

343 
±hªad_t
 
	`±hªad_£lf
();

345 
	$±hªad_£tˇn˚l°©e
(, *Ë
	`__DARWIN_ALIAS
(
±hªad_£tˇn˚l°©e
);

346 
	$±hªad_£tˇn˚…y≥
(, *Ë
	`__DARWIN_ALIAS
(
±hªad_£tˇn˚…y≥
);

347 
	`±hªad_£tc⁄cuºícy
();

348 
	`±hªad_£tsched∑øm
(
±hªad_t
 ,

350 c⁄° 
sched_∑øm
 *);

351 
	`±hªad_£t•ecific
(
±hªad_key_t
 ,

353 
	$±hªad_ã°ˇn˚l
(Ë
	`__DARWIN_ALIAS
(
±hªad_ã°ˇn˚l
);

355 #i‡(!
	`deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

357 
	`±hªad_is_thªaded_≈
();

359 #i‡
	`deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

360 
	`±hªad_thªadid_≈
(
±hªad_t
,
__uöt64_t
*);

364 
	`±hªad_gë«me_≈
(
±hªad_t
,*,
size_t
);

365 
	`±hªad_£äame_≈
(const *);

367 
	`±hªad_maö_≈
();

370 
mach_p‹t_t
 
	`±hªad_mach_thªad_≈
(
±hªad_t
);

371 
size_t
 
	`±hªad_gë_°acksize_≈
(
±hªad_t
);

372 * 
	`±hªad_gë_°ackaddr_≈
(
±hªad_t
);

375 
	`±hªad_c⁄d_sig«l_thªad_≈
(
±hªad_c⁄d_t
 *, 
±hªad_t
);

378 
	`±hªad_c⁄d_timedwaô_ªœtive_≈
(
±hªad_c⁄d_t
 *,

379 
±hªad_muãx_t
 *,

380 c⁄° 
time•ec
 *);

383 
	`±hªad_¸óã_su•íded_≈
(
±hªad_t
 *,

384 c⁄° 
±hªad_©å_t
 *,

387 
	`±hªad_kûl
(
±hªad_t
, );

389 
±hªad_t
 
	`±hªad_‰om_mach_thªad_≈
(
mach_p‹t_t
);

391 
	$±hªad_sigmask
(, c⁄° 
sig£t_t
 *, sig£t_à*Ë
	`__DARWIN_ALIAS
(
±hªad_sigmask
);

392 
	`±hªad_yõld_≈
();

394 
__END_DECLS


	@/usr/include/signal.h

58 #i‚de‡
_USER_SIGNAL_H


59 
	#_USER_SIGNAL_H


	)

61 
	~<sys/cdefs.h
>

62 
	~<_ty≥s.h
>

63 
	~<sys/sig«l.h
>

65 #i‚de‡
_PTHREAD_T


66 
__d¨wö_±hªad_t
 
	t±hªad_t
;

67 
	#_PTHREAD_T


	)

70 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

71 
__c⁄°
 *__c⁄° 
sys_sig«me
[
NSIG
];

72 
__c⁄°
 *__c⁄° 
sys_sigli°
[
NSIG
];

75 
__BEGIN_DECLS


76 
øi£
();

77 
	g__END_DECLS


79 #i‚def 
_ANSI_SOURCE


80 
__BEGIN_DECLS


81 (*
bsd_sig«l
(, (*)()))();

82 
	$kûl
(
pid_t
, Ë
	`__DARWIN_ALIAS
(
kûl
);

83 
	$kûÕg
(
pid_t
, Ë
	`__DARWIN_ALIAS
(
kûÕg
);

84 
	`±hªad_kûl
(
±hªad_t
, );

85 
	$±hªad_sigmask
(, c⁄° 
sig£t_t
 *, sig£t_à*Ë
	`__DARWIN_ALIAS
(
±hªad_sigmask
);

86 
	`siga˘i⁄
(, c⁄° 
siga˘i⁄
 * 
__ª°ri˘
,

87 
siga˘i⁄
 * 
__ª°ri˘
);

88 
	`sigadd£t
(
sig£t_t
 *, );

89 
	$sigÆt°ack
(c⁄° 
°ack_t
 * 
__ª°ri˘
, sèck_à* __ª°ri˘Ë
	`__DARWIN_ALIAS
(
sigÆt°ack
);

90 
	`sigdñ£t
(
sig£t_t
 *, );

91 
	`sigem±y£t
(
sig£t_t
 *);

92 
	`sigfûl£t
(
sig£t_t
 *);

93 
	`sighﬁd
();

94 
	`sigign‹e
();

95 
	`sigöãºu±
(, );

96 
	`sigismembî
(c⁄° 
sig£t_t
 *, );

97 
	$sig∑u£
(Ë
	`__DARWIN_ALIAS_C
(
sig∑u£
);

98 
	`sig≥ndög
(
sig£t_t
 *);

99 
	`sig¥ocmask
(, c⁄° 
sig£t_t
 * 
__ª°ri˘
, sigset_t * __restrict);

100 
	`sigªl£
();

101 (*
	`sig£t
(, (*)()))();

102 
	$sigsu•íd
(c⁄° 
sig£t_t
 *Ë
	`__DARWIN_ALIAS_C
(
sigsu•íd
);

103 
	$sigwaô
(c⁄° 
sig£t_t
 * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_ALIAS_C
(
sigwaô
);

104 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

105 
	`psig«l
(, const *);

106 
	`sigblock
();

107 
	`sig£tmask
();

108 
	`sigvec
(, 
sigvec
 *, sigvec *);

110 
__END_DECLS


113 #i‡
	`deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

115 
__ölöe
 

116 
	$__sigbôs
(
__signo
)

118  
__signo
 > 
__DARWIN_NSIG
 ? 0 : (1 << (__signo - 1));

119 
	}
}

121 
	#__sigbôs
(
signo
Ë(1 << ((signoË- 1))

	)

124 
	#sigadd£t
(
£t
, 
signo
Ë(*(£tË|
	`__sigbôs
(signo), 0)

	)

125 
	#sigdñ£t
(
£t
, 
signo
Ë(*(£tË&~
	`__sigbôs
(signo), 0)

	)

126 
	#sigismembî
(
£t
, 
signo
Ë((*(£tË& 
	`__sigbôs
(signo)Ë!0)

	)

127 
	#sigem±y£t
(
£t
Ë(*(£tË0, 0)

	)

128 
	#sigfûl£t
(
£t
Ë(*(£tË~(
sig£t_t
)0, 0)

	)

	@/usr/include/stdarg.h

3 #i‡
deföed
(
__GNUC__
)

4 #ö˛ude_√xà<
°d¨g
.
h
>

5 #ñi‡
deföed
(
__MWERKS__
)

6 
	~"mw_°d¨g.h
"

	@/usr/include/stdbool.h

29 #i‚de‡
_STDBOOL_H_


30 
	#_STDBOOL_H_


	)

32 
	#__boﬁ_åue_Ál£_¨e_deföed
 1

	)

34 #i‚de‡
__˝lu•lus


36 
	#boﬁ
 
_Boﬁ


	)

37 #i‡
__STDC_VERSION__
 < 199901L && 
__GNUC__
 < 3

38 
	t_Boﬁ
;

41 
	#Ál£
 (
boﬁ
)0

	)

42 
	#åue
 (
boﬁ
)1

	)

	@/usr/include/stddef.h

61 #i‡!
deföed
(
__STDDEF_H__
)

63 #i‡!
deföed
(
__√ed_wch¨_t
Ë&& !deföed(
__√ed_size_t
) \

64 && !
deföed
(
__√ed_±rdiff_t
Ë&& !deföed(
__√ed_NULL
) \

65 && !
	$deföed
(
__√ed_wöt_t
)

66 
	#__STDDEF_H__


	)

69 
	~<_ty≥s.h
>

71 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_±rdiff_t
)

72 #i‚de‡
_PTRDIFF_T


73 
	#_PTRDIFF_T


	)

74 
__d¨wö_±rdiff_t
 
	t±rdiff_t
;

78 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_size_t
)

79 #i‚def 
_SIZE_T


80 
	#_SIZE_T


	)

83 
__d¨wö_size_t
 
	tsize_t
;

87 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_wch¨_t
)

88 #i‚def 
__˝lu•lus


89 #i‚def 
_WCHAR_T


90 
	#_WCHAR_T


	)

91 
__d¨wö_wch¨_t
 
	twch¨_t
;

96 #i‡(
	`deföed
(
__STDDEF_H__
Ë&& !deföed(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))) \

97 || 
	$deföed
(
__√ed_wöt_t
)

98 #i‚def 
_WINT_T


99 
	#_WINT_T


	)

100 
__d¨wö_wöt_t
 
	twöt_t
;

104 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_NULL
)

105 #i‚de‡
NULL


106 
	#NULL
 
__DARWIN_NULL


	)

110 #ifde‡
__STDDEF_H__


111 #i‡
	`deföed
(
__GNUC__
Ë&& (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 5 || __GNUC__ > 3)

112 #i‚de‡
__off£tof


113 
	#__off£tof
(
ty≥
, 
fõld
Ë
	`__buûtö_off£tof
—y≥, fõld)

	)

115 
	#off£tof
(
ty≥
, 
fõld
Ë
	`__buûtö_off£tof
—y≥, fõld)

	)

117 #i‚de‡
__off£tof


118 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

120 
	#off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

126 #unde‡
__√ed_±rdiff_t


127 #unde‡
__√ed_size_t


128 #unde‡
__√ed_wch¨_t


129 #unde‡
__√ed_wöt_t


130 #unde‡
__√ed_NULL


	@/usr/include/stdint.h

6 #i‚de‡
_STDINT_H_


7 
	#_STDINT_H_


	)

9 #i‡
__LP64__


10 
	#__WORDSIZE
 64

	)

12 
	#__WORDSIZE
 32

	)

18 #i‚de‡
_INT8_T


19 
	#_INT8_T


	)

20 sig√d 
	töt8_t
;

23 #i‚de‡
_INT16_T


24 
	#_INT16_T


	)

25 
	töt16_t
;

28 #i‚de‡
_INT32_T


29 
	#_INT32_T


	)

30 
	töt32_t
;

33 #i‚de‡
_INT64_T


34 
	#_INT64_T


	)

35 
	töt64_t
;

38 #i‚de‡
_UINT8_T


39 
	#_UINT8_T


	)

40 
	tuöt8_t
;

43 #i‚de‡
_UINT16_T


44 
	#_UINT16_T


	)

45 
	tuöt16_t
;

48 #i‚de‡
_UINT32_T


49 
	#_UINT32_T


	)

50 
	tuöt32_t
;

53 #i‚de‡
_UINT64_T


54 
	#_UINT64_T


	)

55 
	tuöt64_t
;

59 
öt8_t
 
	töt_Àa°8_t
;

60 
öt16_t
 
	töt_Àa°16_t
;

61 
öt32_t
 
	töt_Àa°32_t
;

62 
öt64_t
 
	töt_Àa°64_t
;

63 
uöt8_t
 
	tuöt_Àa°8_t
;

64 
uöt16_t
 
	tuöt_Àa°16_t
;

65 
uöt32_t
 
	tuöt_Àa°32_t
;

66 
uöt64_t
 
	tuöt_Àa°64_t
;

70 
öt8_t
 
	töt_Á°8_t
;

71 
öt16_t
 
	töt_Á°16_t
;

72 
öt32_t
 
	töt_Á°32_t
;

73 
öt64_t
 
	töt_Á°64_t
;

74 
uöt8_t
 
	tuöt_Á°8_t
;

75 
uöt16_t
 
	tuöt_Á°16_t
;

76 
uöt32_t
 
	tuöt_Á°32_t
;

77 
uöt64_t
 
	tuöt_Á°64_t
;

82 #i‚de‡
_INTPTR_T


83 
	#_INTPTR_T


	)

84 
	töçå_t
;

87 #i‚de‡
_UINTPTR_T


88 
	#_UINTPTR_T


	)

89 
	tuöçå_t
;

94 #i‚de‡
_INTMAX_T


95 
	#_INTMAX_T


	)

96 #ifde‡
__INTMAX_TYPE__


97 
__INTMAX_TYPE__
 
	tötmax_t
;

99 
	tötmax_t
;

103 #i‚de‡
_UINTMAX_T


104 
	#_UINTMAX_T


	)

105 #ifde‡
__UINTMAX_TYPE__


106 
__UINTMAX_TYPE__
 
	tuötmax_t
;

108 
	tuötmax_t
;

119 
	#INT8_MAX
 127

	)

120 
	#INT16_MAX
 32767

	)

121 
	#INT32_MAX
 2147483647

	)

122 
	#INT64_MAX
 9223372036854775807LL

	)

124 
	#INT8_MIN
 -128

	)

125 
	#INT16_MIN
 -32768

	)

132 
	#INT32_MIN
 (-
INT32_MAX
-1)

	)

133 
	#INT64_MIN
 (-
INT64_MAX
-1)

	)

135 
	#UINT8_MAX
 255

	)

136 
	#UINT16_MAX
 65535

	)

137 
	#UINT32_MAX
 4294967295U

	)

138 
	#UINT64_MAX
 18446744073709551615ULL

	)

141 
	#INT_LEAST8_MIN
 
INT8_MIN


	)

142 
	#INT_LEAST16_MIN
 
INT16_MIN


	)

143 
	#INT_LEAST32_MIN
 
INT32_MIN


	)

144 
	#INT_LEAST64_MIN
 
INT64_MIN


	)

146 
	#INT_LEAST8_MAX
 
INT8_MAX


	)

147 
	#INT_LEAST16_MAX
 
INT16_MAX


	)

148 
	#INT_LEAST32_MAX
 
INT32_MAX


	)

149 
	#INT_LEAST64_MAX
 
INT64_MAX


	)

151 
	#UINT_LEAST8_MAX
 
UINT8_MAX


	)

152 
	#UINT_LEAST16_MAX
 
UINT16_MAX


	)

153 
	#UINT_LEAST32_MAX
 
UINT32_MAX


	)

154 
	#UINT_LEAST64_MAX
 
UINT64_MAX


	)

157 
	#INT_FAST8_MIN
 
INT8_MIN


	)

158 
	#INT_FAST16_MIN
 
INT16_MIN


	)

159 
	#INT_FAST32_MIN
 
INT32_MIN


	)

160 
	#INT_FAST64_MIN
 
INT64_MIN


	)

162 
	#INT_FAST8_MAX
 
INT8_MAX


	)

163 
	#INT_FAST16_MAX
 
INT16_MAX


	)

164 
	#INT_FAST32_MAX
 
INT32_MAX


	)

165 
	#INT_FAST64_MAX
 
INT64_MAX


	)

167 
	#UINT_FAST8_MAX
 
UINT8_MAX


	)

168 
	#UINT_FAST16_MAX
 
UINT16_MAX


	)

169 
	#UINT_FAST32_MAX
 
UINT32_MAX


	)

170 
	#UINT_FAST64_MAX
 
UINT64_MAX


	)

174 #i‡
__WORDSIZE
 == 64

175 
	#INTPTR_MIN
 
INT64_MIN


	)

176 
	#INTPTR_MAX
 
INT64_MAX


	)

178 
	#INTPTR_MIN
 
INT32_MIN


	)

179 
	#INTPTR_MAX
 
INT32_MAX


	)

182 #i‡
__WORDSIZE
 == 64

183 
	#UINTPTR_MAX
 
UINT64_MAX


	)

185 
	#UINTPTR_MAX
 
UINT32_MAX


	)

189 
	#INTMAX_MIN
 
INT64_MIN


	)

190 
	#INTMAX_MAX
 
INT64_MAX


	)

192 
	#UINTMAX_MAX
 
UINT64_MAX


	)

195 #i‡
__WORDSIZE
 == 64

196 
	#PTRDIFF_MIN
 
INT64_MIN


	)

197 
	#PTRDIFF_MAX
 
INT64_MAX


	)

199 
	#PTRDIFF_MIN
 
INT32_MIN


	)

200 
	#PTRDIFF_MAX
 
INT32_MAX


	)

207 #i‡
__WORDSIZE
 == 64

208 
	#SIZE_MAX
 
UINT64_MAX


	)

210 
	#SIZE_MAX
 
UINT32_MAX


	)

213 #i‚de‡
WCHAR_MAX


214 #ifde‡
__WCHAR_MAX__


215 
	#WCHAR_MAX
 
__WCHAR_MAX__


	)

217 
	#WCHAR_MAX
 0x7fffffff

	)

225 #i‚de‡
WCHAR_MIN


226 #i‡
WCHAR_MAX
 == 0xffff

227 
	#WCHAR_MIN
 0

	)

229 
	#WCHAR_MIN
 (-
WCHAR_MAX
-1)

	)

233 
	#WINT_MIN
 
INT32_MIN


	)

234 
	#WINT_MAX
 
INT32_MAX


	)

236 
	#SIG_ATOMIC_MIN
 
INT32_MIN


	)

237 
	#SIG_ATOMIC_MAX
 
INT32_MAX


	)

240 
	#INT8_C
(
v
Ë(v)

	)

241 
	#INT16_C
(
v
Ë(v)

	)

242 
	#INT32_C
(
v
Ë(v)

	)

243 
	#INT64_C
(
v
Ë(v ## 
LL
)

	)

245 
	#UINT8_C
(
v
Ë(v ## 
U
)

	)

246 
	#UINT16_C
(
v
Ë(v ## 
U
)

	)

247 
	#UINT32_C
(
v
Ë(v ## 
U
)

	)

248 
	#UINT64_C
(
v
Ë(v ## 
ULL
)

	)

250 
	#INTMAX_C
(
v
Ë(v ## 
LL
)

	)

251 
	#UINTMAX_C
(
v
Ë(v ## 
ULL
)

	)

	@/usr/include/stdio.h

61 #i‚def 
_STDIO_H_


62 
	#_STDIO_H_


	)

64 
	~<_ty≥s.h
>

66 #i‚de‡
_VA_LIST


67 
	#_VA_LIST


	)

70 
__d¨wö_va_li°
 
	tva_li°
;

73 #i‚def 
_OFF_T


74 
	#_OFF_T


	)

75 
__d¨wö_off_t
 
	toff_t
;

78 #i‚def 
_SIZE_T


79 
	#_SIZE_T


	)

80 
__d¨wö_size_t
 
	tsize_t
;

83 #i‚de‡
NULL


84 
	#NULL
 
__DARWIN_NULL


	)

87 
__d¨wö_off_t
 
	tÂos_t
;

89 
	#_FSTDIO


	)

98 
	s__sbuf
 {

99 *
	m_ba£
;

100 
	m_size
;

104 
	g__sFILEX
;

132 
	s__sFILE
 {

133 *
	m_p
;

134 
	m_r
;

135 
	m_w
;

136 
	m_Êags
;

137 
	m_fûe
;

138 
__sbuf
 
	m_bf
;

139 
	m_lbfsize
;

142 *
	m_cookõ
;

143 (*
	m_˛o£
)(*);

144 (*
	m_ªad
) (*, *, );

145 
Âos_t
 (*
_£ek
Ë(*, 
	mÂos_t
, );

146 (*
	m_wrôe
)(*, const *, );

149 
__sbuf
 
	m_ub
;

150 
__sFILEX
 *
	m_exåa
;

151 
	m_ur
;

154 
	m_ubuf
[3];

155 
	m_nbuf
[1];

158 
__sbuf
 
	m_lb
;

161 
	m_blksize
;

162 
Âos_t
 
	m_off£t
;

163 } 
	tFILE
;

165 
	g__BEGIN_DECLS


166 #i‡
__DARWIN_UNIX03


167 
FILE
 *
__°döp
;

168 
FILE
 *
__°douç
;

169 
FILE
 *
__°dîΩ
;

171 
FILE
 
__sF
[];

173 
	g__END_DECLS


175 
	#__SLBF
 0x0001

	)

176 
	#__SNBF
 0x0002

	)

177 
	#__SRD
 0x0004

	)

178 
	#__SWR
 0x0008

	)

180 
	#__SRW
 0x0010

	)

181 
	#__SEOF
 0x0020

	)

182 
	#__SERR
 0x0040

	)

183 
	#__SMBF
 0x0080

	)

184 
	#__SAPP
 0x0100

	)

185 
	#__SSTR
 0x0200

	)

186 
	#__SOPT
 0x0400

	)

187 
	#__SNPT
 0x0800

	)

188 
	#__SOFF
 0x1000

	)

189 
	#__SMOD
 0x2000

	)

190 
	#__SALC
 0x4000

	)

191 
	#__SIGN
 0x8000

	)

202 
	#_IOFBF
 0

	)

203 
	#_IOLBF
 1

	)

204 
	#_IONBF
 2

	)

206 
	#BUFSIZ
 1024

	)

207 
	#EOF
 (-1)

	)

215 
	#FOPEN_MAX
 20

	)

216 
	#FILENAME_MAX
 1024

	)

219 #i‚de‡
_ANSI_SOURCE


220 
	#P_tmpdú
 "/v¨/tmp/"

	)

222 
	#L_tm≤am
 1024

	)

223 
	#TMP_MAX
 308915776

	)

225 #i‚de‡
SEEK_SET


226 
	#SEEK_SET
 0

	)

228 #i‚de‡
SEEK_CUR


229 
	#SEEK_CUR
 1

	)

231 #i‚de‡
SEEK_END


232 
	#SEEK_END
 2

	)

235 #i‡
__DARWIN_UNIX03


236 
	#°dö
 
__°döp


	)

237 
	#°dout
 
__°douç


	)

238 
	#°dîr
 
__°dîΩ


	)

240 
	#°dö
 (&
__sF
[0])

	)

241 
	#°dout
 (&
__sF
[1])

	)

242 
	#°dîr
 (&
__sF
[2])

	)

248 
__BEGIN_DECLS


249 
˛óªº
(
FILE
 *);

250 
f˛o£
(
FILE
 *);

251 
„of
(
FILE
 *);

252 
„º‹
(
FILE
 *);

253 
fÊush
(
FILE
 *);

254 
fgëc
(
FILE
 *);

255 
fgëpos
(
FILE
 * 
__ª°ri˘
, 
Âos_t
 *);

256 *
fgës
(* 
__ª°ri˘
, , 
FILE
 *);

257 #i‡
deföed
(
__DARWIN_10_6_AND_LATER
Ë&& (deföed(
_DARWIN_UNLIMITED_STREAMS
Ë|| deföed(
_DARWIN_C_SOURCE
))

258 
FILE
 *
	$f›í
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘Ë
	`__DARWIN_EXTSN
(
f›í
);

260 
FILE
 *
	$f›í
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘Ë
	`__DARWIN_10_6_AND_LATER_ALIAS
(
	`__DARWIN_ALIAS
(
f›í
));

262 
	$Ârötf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__DARWIN_LDBL_COMPAT
(
Ârötf
);

263 
	`Âutc
(, 
FILE
 *);

264 
	$Âuts
(c⁄° * 
__ª°ri˘
, 
FILE
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
Âuts
);

265 
size_t
 
	`‰ód
(* 
__ª°ri˘
, size_t, size_t, 
FILE
 * __restrict);

266 
FILE
 *
	$‰e›í
(c⁄° * 
__ª°ri˘
, const * __restrict,

267 
FILE
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS
(
‰e›í
);

268 
	$fsˇnf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__DARWIN_LDBL_COMPAT
(
fsˇnf
);

269 
	`f£ek
(
FILE
 *, , );

270 
	`f£ços
(
FILE
 *, c⁄° 
Âos_t
 *);

271 
	`·ñl
(
FILE
 *);

272 
size_t
 
	$fwrôe
(c⁄° * 
__ª°ri˘
, 
size_t
, size_t, 
FILE
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
fwrôe
);

273 
	`gëc
(
FILE
 *);

274 
	`gëch¨
();

275 *
	`gës
(*);

276 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

277 
__c⁄°
 
sys_√º
;

278 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

280 
	`≥º‹
(const *);

281 
	$¥ötf
(c⁄° * 
__ª°ri˘
, ...Ë
	`__DARWIN_LDBL_COMPAT
(
¥ötf
);

282 
	`putc
(, 
FILE
 *);

283 
	`putch¨
();

284 
	`puts
(const *);

285 
	`ªmove
(const *);

286 
	`ª«me
 (const *, const *);

287 
	`ªwöd
(
FILE
 *);

288 
	$sˇnf
(c⁄° * 
__ª°ri˘
, ...Ë
	`__DARWIN_LDBL_COMPAT
(
sˇnf
);

289 
	`£tbuf
(
FILE
 * 
__ª°ri˘
, * __restrict);

290 
	`£tvbuf
(
FILE
 * 
__ª°ri˘
, * __ª°ri˘, , 
size_t
);

291 
	$•rötf
(* 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__DARWIN_LDBL_COMPAT
(
•rötf
);

292 
	$ssˇnf
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__DARWIN_LDBL_COMPAT
(
ssˇnf
);

293 
FILE
 *
	`tmpfûe
();

294 *
	`tm≤am
(*);

295 
	`ungëc
(, 
FILE
 *);

296 
	$vÂrötf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
vÂrötf
);

297 
	$v¥ötf
(c⁄° * 
__ª°ri˘
, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
v¥ötf
);

298 
	$v•rötf
(* 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
v•rötf
);

299 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

300 
	$a•rötf
(**, c⁄° *, ...Ë
	`__DARWIN_LDBL_COMPAT
(
a•rötf
);

301 
	$va•rötf
(**, c⁄° *, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
va•rötf
);

303 
__END_DECLS


308 #i‚de‡
_ANSI_SOURCE


309 
	#L_˘îmid
 1024

	)

311 
__BEGIN_DECLS


312 *
	`˘îmid
(*);

313 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

314 *
	`˘îmid_r
(*);

316 #i‡
	`deföed
(
__DARWIN_10_6_AND_LATER
Ë&& (deföed(
_DARWIN_UNLIMITED_STREAMS
Ë|| deföed(
_DARWIN_C_SOURCE
))

317 
FILE
 *
	$fd›í
(, c⁄° *Ë
	`__DARWIN_EXTSN
(
fd›í
);

319 
FILE
 *
	$fd›í
(, c⁄° *Ë
	`__DARWIN_10_6_AND_LATER_ALIAS
(
	`__DARWIN_ALIAS
(
fd›í
));

321 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

322 *
	`fgë 
(
FILE
 *, 
size_t
 *);

324 
	`fûío
(
FILE
 *);

325 
	`Êockfûe
(
FILE
 *);

326 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

327 
__c⁄°
 

328 *
	`fmtcheck
(const *, const *);

329 
	`Âurge
(
FILE
 *);

331 
	`f£eko
(
FILE
 *, 
off_t
, );

332 
off_t
 
	`·ñlo
(
FILE
 *);

333 
	`·rylockfûe
(
FILE
 *);

334 
	`fu∆ockfûe
(
FILE
 *);

335 
	`gëc_u∆ocked
(
FILE
 *);

336 
	`gëch¨_u∆ocked
();

337 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

338 
	`gëw
(
FILE
 *);

340 
	`p˛o£
(
FILE
 *);

341 #i‡
	`deföed
(
__DARWIN_10_6_AND_LATER
Ë&& (deföed(
_DARWIN_UNLIMITED_STREAMS
Ë|| deföed(
_DARWIN_C_SOURCE
))

342 
FILE
 *
	$p›í
(c⁄° *, c⁄° *Ë
	`__DARWIN_EXTSN
(
p›í
);

344 
FILE
 *
	$p›í
(c⁄° *, c⁄° *Ë
	`__DARWIN_10_6_AND_LATER_ALIAS
(
	`__DARWIN_ALIAS
(
p›í
));

346 
	`putc_u∆ocked
(, 
FILE
 *);

347 
	`putch¨_u∆ocked
();

348 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

349 
	`putw
(, 
FILE
 *);

350 
	`£tbuf„r
(
FILE
 *, *, );

351 
	`£éöebuf
(
FILE
 *);

353 
	$¢¥ötf
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, ...Ë
	`__DARWIN_LDBL_COMPAT
(
¢¥ötf
);

354 *
	$ãm≤am
(c⁄° *, c⁄° *Ë
	`__DARWIN_ALIAS
(
ãm≤am
);

355 
	$vfsˇnf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
vfsˇnf
);

356 
	$vsˇnf
(c⁄° * 
__ª°ri˘
, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
vsˇnf
);

357 
	$v¢¥ötf
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
v¢¥ötf
);

358 
	$vssˇnf
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
vssˇnf
);

359 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

360 
FILE
 *
	`z›í
(const *, const *, );

362 
__END_DECLS


367 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

368 
__BEGIN_DECLS


369 
FILE
 *
	`fun›í
(const *,

372 
	$Âos_t
 (*)(*, 
Âos_t
, ),

374 
__END_DECLS


375 
	#‰›í
(
cookõ
, 
‚
Ë
	`fun›í
(cookõ, fn, 0, 0, 0)

	)

376 
	#fw›í
(
cookõ
, 
‚
Ë
	`fun›í
(cookõ, 0, fn, 0, 0)

	)

383 
__BEGIN_DECLS


384 
	`__§gë
(
FILE
 *);

385 
	$__svfsˇnf
(
FILE
 *, c⁄° *, 
va_li°
Ë
	`__DARWIN_LDBL_COMPAT
(
__svfsˇnf
);

386 
	`__swbuf
(, 
FILE
 *);

387 
__END_DECLS


393 
	#__sgëc
(
p
Ë(--’)->
_r
 < 0 ? 
	`__§gë
’Ë: ()(*’)->
_p
++))

	)

394 #i‡
	`deföed
(
__GNUC__
Ë&& deföed(
__STDC__
)

395 
__ölöe
 
	$__•utc
(
_c
, 
FILE
 *
_p
) {

396 i‡(--
_p
->
_w
 >0 || (_p->_w >_p->
_lbfsize
 && ()
_c
 != '\n'))

397  (*
_p
->_p++ = 
_c
);

399  (
	`__swbuf
(
_c
, 
_p
));

400 
	}
}

405 
	#__•utc
(
c
, 
p
) \

406 (--(
p
)->
_w
 < 0 ? \

407 (
p
)->
_w
 >’)->
_lbfsize
 ? \

408 (*(
p
)->
_p
 = (
c
)), *(p)->_p != '\n' ? \

409 ()*(
p
)->
_p
++ : \

410 
	`__swbuf
('\n', 
p
) : \

411 
	`__swbuf
(()(
c
), 
p
) : \

412 (*(
p
)->
_p
 = (
c
), ()*’)->_p++))

	)

415 
	#__s„of
(
p
Ë((’)->
_Êags
 & 
__SEOF
Ë!0)

	)

416 
	#__s„º‹
(
p
Ë((’)->
_Êags
 & 
__SERR
Ë!0)

	)

417 
	#__s˛óªº
(
p
Ë(()(’)->
_Êags
 &~(
__SERR
|
__SEOF
)))

	)

418 
	#__sfûío
(
p
Ë(’)->
_fûe
)

	)

420 #i‚de‡
_ANSI_SOURCE


421 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

422 
	#„of_u∆ocked
(
p
Ë
	`__s„of
’)

	)

423 
	#„º‹_u∆ocked
(
p
Ë
	`__s„º‹
’)

	)

424 
	#˛óªº_u∆ocked
(
p
Ë
	`__s˛óªº
’)

	)

425 
	#fûío_u∆ocked
(
p
Ë
	`__sfûío
’)

	)

428 #i‚de‡
löt


429 
	#gëc_u∆ocked
(
Â
Ë
	`__sgëc
(Â)

	)

430 
	#putc_u∆ocked
(
x
, 
Â
Ë
	`__•utc
(x, fp)

	)

433 
	#gëch¨_u∆ocked
(Ë
	`gëc_u∆ocked
(
°dö
)

	)

434 
	#putch¨_u∆ocked
(
x
Ë
	`putc_u∆ocked
(x, 
°dout
)

	)

437 #ifde‡
_USE_EXTENDED_LOCALES_


438 
	~<xloˇÀ/_°dio.h
>

441 #i‡
deföed
 (
__GNUC__
Ë&& 
_FORTIFY_SOURCE
 > 0 && !deföed (
__˝lu•lus
)

443 
	~<£cuª/_°dio.h
>

	@/usr/include/stdlib.h

58 #i‚de‡
_STDLIB_H_


59 
	#_STDLIB_H_


	)

61 
	~<Avaûabûôy.h
>

63 
	~<_ty≥s.h
>

64 #i‡!
deföed
(
_ANSI_SOURCE
)

65 
	~<sys/waô.h
>

66 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

67 
	~<Æloˇ.h
>

71 #i‚def 
_SIZE_T


72 
	#_SIZE_T


	)

75 
__d¨wö_size_t
 
	tsize_t
;

78 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

79 #i‚de‡
_CT_RUNE_T


80 
	#_CT_RUNE_T


	)

81 
__d¨wö_˘_ru√_t
 
	t˘_ru√_t
;

84 #i‚de‡
_RUNE_T


85 
	#_RUNE_T


	)

86 
__d¨wö_ru√_t
 
	tru√_t
;

90 #i‚def 
__˝lu•lus


91 #i‚def 
_WCHAR_T


92 
	#_WCHAR_T


	)

93 
__d¨wö_wch¨_t
 
	twch¨_t
;

98 
	mquŸ
;

99 
	mªm
;

100 } 
	tdiv_t
;

103 
	mquŸ
;

104 
	mªm
;

105 } 
	tldiv_t
;

107 #i‡!
__DARWIN_NO_LONG_LONG


109 
	mquŸ
;

110 
	mªm
;

111 } 
	tŒdiv_t
;

114 #i‚de‡
NULL


115 
	#NULL
 
__DARWIN_NULL


	)

118 
	#EXIT_FAILURE
 1

	)

119 
	#EXIT_SUCCESS
 0

	)

121 
	#RAND_MAX
 0x7fffffff

	)

123 #ifde‡
_USE_EXTENDED_LOCALES_


124 
	~<_xloˇÀ.h
>

127 #i‚de‡
MB_CUR_MAX


128 #ifde‡
_USE_EXTENDED_LOCALES_


129 
	#MB_CUR_MAX
 (
	`___mb_cur_max
())

	)

130 #i‚de‡
MB_CUR_MAX_L


131 
	#MB_CUR_MAX_L
(
x
Ë(
	`___mb_cur_max_l
(x))

	)

134 
__mb_cur_max
;

135 
	#MB_CUR_MAX
 
__mb_cur_max


	)

139 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)) \

140 && 
deföed
(
_USE_EXTENDED_LOCALES_
Ë&& !
	$deföed
(
MB_CUR_MAX_L
)

141 
	#MB_CUR_MAX_L
(
x
Ë(
	`___mb_cur_max_l
(x))

	)

144 
__BEGIN_DECLS


145 
	$ab‹t
(Ë
__dód2
;

146 
	$abs
(Ë
__puª2
;

147 
	`©exô
((*)());

148 
	`©of
(const *);

149 
	`©oi
(const *);

150 
	`©ﬁ
(const *);

151 #i‡!
__DARWIN_NO_LONG_LONG


153 
	`©ﬁl
(const *);

155 *
	`b£¨ch
(c⁄° *, c⁄° *, 
size_t
,

156 
size_t
, (*)(const *, const *));

157 *
	`ˇŒoc
(
size_t
, size_t);

158 
div_t
 
	$div
(, Ë
__puª2
;

159 
	$exô
(Ë
__dód2
;

160 
	`‰ì
(*);

161 *
	`gëív
(const *);

162 
	$œbs
(Ë
__puª2
;

163 
ldiv_t
 
	$ldiv
(, Ë
__puª2
;

164 #i‡!
__DARWIN_NO_LONG_LONG


166 
	`Œabs
();

167 
Œdiv_t
 
	`Œdiv
(, );

169 *
	`mÆloc
(
size_t
);

170 
	`mbÀn
(c⁄° *, 
size_t
);

171 
size_t
 
	`mb°owcs
(
wch¨_t
 * 
__ª°ri˘
 , const * __restrict, size_t);

172 
	`mbtowc
(
wch¨_t
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
size_t
);

173 
	`posix_memÆign
(**, 
size_t
, size_t);

174 
	`qs‹t
(*, 
size_t
, size_t,

176 
	`ønd
();

177 *
	`ªÆloc
(*, 
size_t
);

178 
	`§™d
();

179 
	$°πod
(c⁄° *, **Ë
	`__DARWIN_ALIAS
(
°πod
);

180 
	$°πof
(c⁄° *, **Ë
	`__DARWIN_ALIAS
(
°πof
);

181 
	`°πﬁ
(const *, **, );

183 
	$°πﬁd
(c⁄° *, **Ë
	`__DARWIN_LDBL_COMPAT
(
°πﬁd
);

184 #i‡!
__DARWIN_NO_LONG_LONG


186 
	`°πﬁl
(const *, **, );

189 
	`°πoul
(const *, **, );

190 #i‡!
__DARWIN_NO_LONG_LONG


192 
	`°πouŒ
(const *, **, );

194 
	$sy°em
(c⁄° *Ë
	`__DARWIN_ALIAS_C
(
sy°em
);

195 
size_t
 
	`wc°ombs
(* 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict, size_t);

196 
	`w˘omb
(*, 
wch¨_t
);

198 #i‚de‡
_ANSI_SOURCE


199 
	$_Exô
(Ë
__dód2
;

200 
	`a64l
(const *);

201 
	`dønd48
();

202 *
	`ecvt
(, , *
__ª°ri˘
, *__restrict);

203 
	`î™d48
([3]);

204 *
	`fcvt
(, , *
__ª°ri˘
, *__restrict);

205 *
	`gcvt
(, , *);

206 
	`gësub›t
(**, * const *, **);

207 
	`gø¡±
();

208 #i‡
__DARWIN_UNIX03


209 *
	`öô°©e
(, *, 
size_t
);

211 *
	`öô°©e
(, *, );

213 
	`jønd48
([3]);

214 *
	`l64a
();

215 
	`lc⁄g48
([7]);

216 
	`Ã™d48
();

217 *
	`mkãmp
(*);

218 
	`mk°emp
(*);

219 
	`mønd48
();

220 
	`ƒ™d48
([3]);

221 
	`posix_›í±
();

222 *
	`±¢ame
();

223 
	$puãnv
(*Ë
	`__DARWIN_ALIAS
(
puãnv
);

224 
	`øndom
();

225 
	`ønd_r
(*);

226 #i‡(
__DARWIN_UNIX03
 && !
	`deföed
(
_POSIX_C_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_BETTER_REALPATH
)

227 *
	$ªÆ∑th
(c⁄° * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_EXTSN
(
ªÆ∑th
);

229 *
	$ªÆ∑th
(c⁄° * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
ªÆ∑th
);

232 *
	`£ed48
([3]);

233 
	$£ãnv
(c⁄° *, c⁄° *, Ë
	`__DARWIN_ALIAS
(
£ãnv
);

234 #i‡
__DARWIN_UNIX03


235 
	$£tkey
(c⁄° *Ë
	`__DARWIN_ALIAS
(
£tkey
);

237 
	`£tkey
(const *);

239 *
	`£t°©e
(const *);

240 
	`§™d48
();

241 #i‡
__DARWIN_UNIX03


242 
	`§™dom
();

244 
	`§™dom
();

246 
	`u∆ock±
();

247 #i‡
__DARWIN_UNIX03


248 
	$un£ãnv
(c⁄° *Ë
	`__DARWIN_ALIAS
(
un£ãnv
);

250 
	`un£ãnv
(const *);

254 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

255 
	~<machöe/ty≥s.h
>

257 #i‚de‡
_DEV_T


258 
__d¨wö_dev_t
 
	tdev_t
;

259 
	#_DEV_T


	)

262 #i‚def 
_MODE_T


263 
__d¨wö_mode_t
 
	tmode_t
;

264 
	#_MODE_T


	)

267 
u_öt32_t


268 
	`¨c4øndom
();

269 
	`¨c4øndom_addøndom
(*
d©
, 
d©Àn
);

270 
	`¨c4øndom_°ú
();

271 #ifde‡
__BLOCKS__


272 
	`©exô_b
((^)());

273 *
	`b£¨ch_b
(c⁄° *, c⁄° *, 
size_t
,

274 
size_t
, (^)(const *, const *));

278 *
	`cgëˇp
(*, const *, );

279 
	`cgë˛o£
();

280 
	`cgëít
(**, **, const *);

281 
	`cgëfú°
(**, **);

282 
	`cgëm©ch
(const *, const *);

283 
	`cgë√xt
(**, **);

284 
	`cgënum
(*, const *, *);

285 
	`cgë£t
(const *);

286 
	`cgë°r
(*, const *, **);

287 
	`cgëu°r
(*, const *, **);

289 
	$d´m⁄
(, Ë
	$__DARWIN_1050
(
d´m⁄
Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
,
__MAC_10_5
,
__IPHONE_2_0
,__IPHONE_2_0);

290 *
	`dev«me
(
dev_t
, 
mode_t
);

291 *
	`dev«me_r
(
dev_t
, 
mode_t
, *
buf
, 
Àn
);

292 *
	`gëbsize
(*, *);

293 
	`gëlﬂdavg
([], );

295 *
	`gë¥og«me
();

297 
	`hóps‹t
(*, 
size_t
, size_t,

299 #ifde‡
__BLOCKS__


300 
	`hóps‹t_b
(*, 
size_t
, size_t,

303 
	`mîges‹t
(*, 
size_t
, size_t,

305 #ifde‡
__BLOCKS__


306 
	`mîges‹t_b
(*, 
size_t
, size_t,

309 
	`ps‹t
(*, 
size_t
, size_t,

311 #ifde‡
__BLOCKS__


312 
	`ps‹t_b
(*, 
size_t
, size_t,

315 
	`ps‹t_r
(*, 
size_t
, size_t, *,

317 #ifde‡
__BLOCKS__


318 
	`qs‹t_b
(*, 
size_t
, size_t,

321 
	`qs‹t_r
(*, 
size_t
, size_t, *,

323 
	`ødixs‹t
(const **, , const *,

325 
	`£çrog«me
(const *);

326 
	`§adixs‹t
(const **, , const *,

328 
	`§™ddev
();

329 
	`§™domdev
();

330 *
	`ªÆlocf
(*, 
size_t
);

331 #i‡!
__DARWIN_NO_LONG_LONG


333 
	`°πoq
(const *, **, );

335 
	`°πouq
(const *, **, );

337 *
sub›èrg
;

338 *
	`vÆloc
(
size_t
);

342 #i‡!
	`deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

343 #¥agm®
GCC
 
pois⁄
 
mb°owcs
 
mbtowc
 
wc°ombs
 
w˘omb


345 
__END_DECLS


347 #ifde‡
_USE_EXTENDED_LOCALES_


348 
	~<xloˇÀ/_°dlib.h
>

	@/usr/include/string.h

58 #i‚de‡
_STRING_H_


59 
	#_STRING_H_


	)

60 
	~<_ty≥s.h
>

62 #i‚def 
_SIZE_T


63 
	#_SIZE_T


	)

64 
__d¨wö_size_t
 
	tsize_t
;

67 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

68 #i‚de‡
_SSIZE_T


69 
	#_SSIZE_T


	)

70 
__d¨wö_ssize_t
 
	tssize_t
;

74 #i‚de‡
NULL


75 
	#NULL
 
__DARWIN_NULL


	)

78 
	~<sys/cdefs.h
>

80 
__BEGIN_DECLS


81 *
memchr
(c⁄° *, , 
size_t
);

82 
memcmp
(c⁄° *, c⁄° *, 
size_t
);

83 *
mem˝y
(*, c⁄° *, 
size_t
);

84 *
memmove
(*, c⁄° *, 
size_t
);

85 *
mem£t
(*, , 
size_t
);

86 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

87 *
°p˝y
(*, const *);

88 *
°rˇ£°r
(const *, const *);

90 *
°rˇt
(*, const *);

91 *
°rchr
(const *, );

92 
°rcmp
(const *, const *);

93 
°rcﬁl
(const *, const *);

94 *
°r˝y
(*, const *);

95 
size_t
 
°rc•n
(const *, const *);

96 *
	$°ªº‹
(Ë
	`__DARWIN_ALIAS
(
°ªº‹
);

97 
	`°ªº‹_r
(, *, 
size_t
);

98 
size_t
 
	`°æí
(const *);

99 *
	`°∫ˇt
(*, c⁄° *, 
size_t
);

100 
	`°∫cmp
(c⁄° *, c⁄° *, 
size_t
);

101 *
	`°∫˝y
(*, c⁄° *, 
size_t
);

102 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

103 *
	`°∫°r
(c⁄° *, c⁄° *, 
size_t
);

105 *
	`°Ωbrk
(const *, const *);

106 *
	`°ºchr
(const *, );

107 
size_t
 
	`°r•n
(const *, const *);

108 *
	`°r°r
(const *, const *);

109 *
	`°πok
(*, const *);

110 
size_t
 
	`°rx‰m
(*, const *, size_t);

113 #i‚de‡
_ANSI_SOURCE


114 *
	`memc˝y
(*, c⁄° *, , 
size_t
);

115 *
	`°πok_r
(*, const *, **);

116 *
	`°rdup
(const *);

117 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

118 
	`bcmp
(c⁄° *, c⁄° *, 
size_t
);

119 
	`bc›y
(c⁄° *, *, 
size_t
);

120 
	`bzîo
(*, 
size_t
);

121 
	`ffs
();

122 
	`ff¶
();

123 
	`Ês
();

124 
	`Ê¶
();

125 *
	`ödex
(const *, );

126 
	`mem£t_∑âîn4
(*, c⁄° *, 
size_t
);

127 
	`mem£t_∑âîn8
(*, c⁄° *, 
size_t
);

128 
	`mem£t_∑âîn16
(*, c⁄° *, 
size_t
);

129 *
	`rödex
(const *, );

130 
	`°rˇ£cmp
(const *, const *);

131 
size_t
 
	`°æˇt
(*, const *, size_t);

132 
size_t
 
	`°æ˝y
(*, const *, size_t);

133 
	`°rmode
(, *);

134 
	`°∫ˇ£cmp
(c⁄° *, c⁄° *, 
size_t
);

135 *
	`°r£p
(**, const *);

136 *
	`°rsig«l
(
sig
);

137 
	`swab
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
ssize_t
);

140 
__END_DECLS


142 #ifde‡
_USE_EXTENDED_LOCALES_


143 
	~<xloˇÀ/_°rög.h
>

146 #i‡
	`deföed
 (
__GNUC__
Ë&& 
_FORTIFY_SOURCE
 > 0 && !deföed (
__˝lu•lus
)

148 
	~<£cuª/_°rög.h
>

	@/usr/include/strings.h

58 
	~<sys/cdefs.h
>

60 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

62 
	~<°rög.h
>

66 
	~<_ty≥s.h
>

68 #i‚def 
_SIZE_T


69 
	#_SIZE_T


	)

70 
__d¨wö_size_t
 
	tsize_t
;

73 
__BEGIN_DECLS


74 
bcmp
(c⁄° *, c⁄° *, 
size_t
);

75 
bc›y
(c⁄° *, *, 
size_t
);

76 
bzîo
(*, 
size_t
);

77 
ffs
();

78 *
ödex
(const *, );

79 *
rödex
(const *, );

80 
°rˇ£cmp
(const *, const *);

81 
°∫ˇ£cmp
(c⁄° *, c⁄° *, 
size_t
);

82 
	g__END_DECLS


	@/usr/include/sys/mman.h

76 #i‚def 
_SYS_MMAN_H_


77 
	#_SYS_MMAN_H_


	)

79 
	~<sys/≠∂ópi›ts.h
>

80 
	~<sys/cdefs.h
>

82 
	~<sys/_ty≥s.h
>

88 #i‚def 
_MODE_T


89 
__d¨wö_mode_t
 
	tmode_t
;

90 
	#_MODE_T


	)

93 #i‚de‡
_OFF_T


94 
__d¨wö_off_t
 
	toff_t
;

95 
	#_OFF_T


	)

98 #i‚de‡
_SIZE_T


99 
	#_SIZE_T


	)

100 
__d¨wö_size_t
 
	tsize_t
;

107 
	#PROT_NONE
 0x00

	)

108 
	#PROT_READ
 0x01

	)

109 
	#PROT_WRITE
 0x02

	)

110 
	#PROT_EXEC
 0x04

	)

116 
	#MAP_SHARED
 0x0001

	)

117 
	#MAP_PRIVATE
 0x0002

	)

118 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

119 
	#MAP_COPY
 
MAP_PRIVATE


	)

125 
	#MAP_FIXED
 0x0010

	)

126 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

127 
	#MAP_RENAME
 0x0020

	)

128 
	#MAP_NORESERVE
 0x0040

	)

129 
	#MAP_RESERVED0080
 0x0080

	)

130 
	#MAP_NOEXTEND
 0x0100

	)

131 
	#MAP_HASSEMAPHORE
 0x0200

	)

132 
	#MAP_NOCACHE
 0x0400

	)

138 
	#MCL_CURRENT
 0x0001

	)

139 
	#MCL_FUTURE
 0x0002

	)

144 
	#MAP_FAILED
 ((*)-1Ë

	)

149 
	#MS_ASYNC
 0x0001

	)

150 
	#MS_INVALIDATE
 0x0002

	)

151 
	#MS_SYNC
 0x0010

	)

153 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

154 
	#MS_KILLPAGES
 0x0004

	)

155 
	#MS_DEACTIVATE
 0x0008

	)

160 
	#MAP_FILE
 0x0000

	)

161 
	#MAP_ANON
 0x1000

	)

168 
	#POSIX_MADV_NORMAL
 0

	)

169 
	#POSIX_MADV_RANDOM
 1

	)

170 
	#POSIX_MADV_SEQUENTIAL
 2

	)

171 
	#POSIX_MADV_WILLNEED
 3

	)

172 
	#POSIX_MADV_DONTNEED
 4

	)

174 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

175 
	#MADV_NORMAL
 
POSIX_MADV_NORMAL


	)

176 
	#MADV_RANDOM
 
POSIX_MADV_RANDOM


	)

177 
	#MADV_SEQUENTIAL
 
POSIX_MADV_SEQUENTIAL


	)

178 
	#MADV_WILLNEED
 
POSIX_MADV_WILLNEED


	)

179 
	#MADV_DONTNEED
 
POSIX_MADV_DONTNEED


	)

180 
	#MADV_FREE
 5

	)

181 
	#MADV_ZERO_WIRED_PAGES
 6

	)

182 
	#MADV_FREE_REUSABLE
 7

	)

183 
	#MADV_FREE_REUSE
 8

	)

184 
	#MADV_CAN_REUSE
 9

	)

189 
	#MINCORE_INCORE
 0x1

	)

190 
	#MINCORE_REFERENCED
 0x2

	)

191 
	#MINCORE_MODIFIED
 0x4

	)

192 
	#MINCORE_REFERENCED_OTHER
 0x8

	)

193 
	#MINCORE_MODIFIED_OTHER
 0x10

	)

198 
__BEGIN_DECLS


200 
mlockÆl
();

201 
mu∆ockÆl
();

203 
mlock
(c⁄° *, 
size_t
);

204 #i‚de‡
_MMAP


205 
	#_MMAP


	)

207 * 
	$mm≠
(*, 
size_t
, , , , 
off_t
Ë
	`__DARWIN_ALIAS
(
mm≠
);

210 
	$m¥Ÿe˘
(*, 
size_t
, Ë
	`__DARWIN_ALIAS
(
m¥Ÿe˘
);

212 
	$msync
(*, 
size_t
, Ë
	`__DARWIN_ALIAS_C
(
msync
);

214 
	`mu∆ock
(c⁄° *, 
size_t
);

216 
	$munm≠
(*, 
size_t
Ë
	`__DARWIN_ALIAS
(
munm≠
);

218 
	`shm_›í
(const *, , ...);

219 
	`shm_u∆ök
(const *);

221 
	`posix_madvi£
(*, 
size_t
, );

223 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

224 
	`madvi£
(*, 
size_t
, );

225 
	`möc‹e
(c⁄° *, 
size_t
, *);

226 
	`möhîô
(*, 
size_t
, );

228 
__END_DECLS


	@/usr/include/sys/stat.h

70 #i‚de‡
_SYS_STAT_H_


71 
	#_SYS_STAT_H_


	)

73 
	~<sys/_ty≥s.h
>

74 
	~<sys/cdefs.h
>

75 
	~<Avaûabûôy.h
>

78 
	#__√ed_°ru˘_time•ec


	)

79 
	~<sys/_°ru˘s.h
>

86 #i‚de‡
_BLKCNT_T


87 
__d¨wö_blk˙t_t
 
	tblk˙t_t
;

88 
	#_BLKCNT_T


	)

91 #i‚de‡
_BLKSIZE_T


92 
__d¨wö_blksize_t
 
	tblksize_t
;

93 
	#_BLKSIZE_T


	)

96 #i‚de‡
_DEV_T


97 
__d¨wö_dev_t
 
	tdev_t
;

98 
	#_DEV_T


	)

101 #i‚def 
_INO_T


102 
__d¨wö_öo_t
 
	töo_t
;

103 
	#_INO_T


	)

106 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

107 #i‚def 
_INO64_T


108 
__d¨wö_öo64_t
 
	töo64_t
;

109 
	#_INO64_T


	)

113 #i‚def 
_MODE_T


114 
__d¨wö_mode_t
 
	tmode_t
;

115 
	#_MODE_T


	)

118 #i‚de‡
_NLINK_T


119 
__uöt16_t
 
	t∆ök_t
;

120 
	#_NLINK_T


	)

123 #i‚de‡
_UID_T


124 
__d¨wö_uid_t
 
	tuid_t
;

125 
	#_UID_T


	)

128 #i‚de‡
_GID_T


129 
__d¨wö_gid_t
 
	tgid_t
;

130 
	#_GID_T


	)

133 #i‚de‡
_OFF_T


134 
__d¨wö_off_t
 
	toff_t
;

135 
	#_OFF_T


	)

138 #i‚def 
_TIME_T


139 
	#_TIME_T


	)

140 
__d¨wö_time_t
 
	ttime_t
;

144 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

153 
	so°©
 {

154 
__uöt16_t
 
	m°_dev
;

155 
öo_t
 
	m°_öo
;

156 
mode_t
 
	m°_mode
;

157 
∆ök_t
 
	m°_∆ök
;

158 
__uöt16_t
 
	m°_uid
;

159 
__uöt16_t
 
	m°_gid
;

160 
__uöt16_t
 
	m°_rdev
;

161 
__öt32_t
 
	m°_size
;

162 
time•ec
 
	m°_©ime•ec
;

163 
time•ec
 
	m°_mtime•ec
;

164 
time•ec
 
	m°_˘ime•ec
;

165 
__öt32_t
 
	m°_blksize
;

166 
__öt32_t
 
	m°_blocks
;

167 
__uöt32_t
 
	m°_Êags
;

168 
__uöt32_t
 
	m°_gí
;

171 
	#__DARWIN_STRUCT_STAT64_TIMES
 \

172 
time•ec
 
°_©ime•ec
; \

173 
time•ec
 
°_mtime•ec
; \

174 
time•ec
 
°_˘ime•ec
; \

175 
time•ec
 
°_búthtime•ec
;

	)

179 
	#__DARWIN_STRUCT_STAT64_TIMES
 \

180 
time_t
 
°_©ime
; \

181 
°_©imí£c
; \

182 
time_t
 
°_mtime
; \

183 
°_mtimí£c
; \

184 
time_t
 
°_˘ime
; \

185 
°_˘imí£c
; \

186 
time_t
 
°_búthtime
; \

187 
°_búthtimí£c
;

	)

201 
	#__DARWIN_STRUCT_STAT64
 { \

202 
dev_t
 
°_dev
; \

203 
mode_t
 
°_mode
; \

204 
∆ök_t
 
°_∆ök
; \

205 
__d¨wö_öo64_t
 
°_öo
; \

206 
uid_t
 
°_uid
; \

207 
gid_t
 
°_gid
; \

208 
dev_t
 
°_rdev
; \

209 
__DARWIN_STRUCT_STAT64_TIMES
 \

210 
off_t
 
°_size
; \

211 
blk˙t_t
 
°_blocks
; \

212 
blksize_t
 
°_blksize
; \

213 
__uöt32_t
 
°_Êags
; \

214 
__uöt32_t
 
°_gí
; \

215 
__öt32_t
 
°_l•¨e
; \

216 
__öt64_t
 
°_q•¨e
[2]; \

217 }

	)

223 #i‡
__DARWIN_64_BIT_INO_T


225 
°©
 
	g__DARWIN_STRUCT_STAT64
;

229 
	s°©
 {

230 
dev_t
 
	m°_dev
;

231 
öo_t
 
	m°_öo
;

232 
mode_t
 
	m°_mode
;

233 
∆ök_t
 
	m°_∆ök
;

234 
uid_t
 
	m°_uid
;

235 
gid_t
 
	m°_gid
;

236 
dev_t
 
	m°_rdev
;

237 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

238 
time•ec
 
	m°_©ime•ec
;

239 
time•ec
 
	m°_mtime•ec
;

240 
time•ec
 
	m°_˘ime•ec
;

242 
time_t
 
	m°_©ime
;

243 
	m°_©imí£c
;

244 
time_t
 
	m°_mtime
;

245 
	m°_mtimí£c
;

246 
time_t
 
	m°_˘ime
;

247 
	m°_˘imí£c
;

249 
off_t
 
	m°_size
;

250 
blk˙t_t
 
	m°_blocks
;

251 
blksize_t
 
	m°_blksize
;

252 
__uöt32_t
 
	m°_Êags
;

253 
__uöt32_t
 
	m°_gí
;

254 
__öt32_t
 
	m°_l•¨e
;

255 
__öt64_t
 
	m°_q•¨e
[2];

260 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

262 #i‡!
__DARWIN_ONLY_64_BIT_INO_T


264 
°©64
 
	g__DARWIN_STRUCT_STAT64
;

273 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

274 
	#°_©ime
 
°_©ime•ec
.
tv_£c


	)

275 
	#°_mtime
 
°_mtime•ec
.
tv_£c


	)

276 
	#°_˘ime
 
°_˘ime•ec
.
tv_£c


	)

277 
	#°_búthtime
 
°_búthtime•ec
.
tv_£c


	)

284 #i‚de‡
S_IFMT


286 
	#S_IFMT
 0170000

	)

287 
	#S_IFIFO
 0010000

	)

288 
	#S_IFCHR
 0020000

	)

289 
	#S_IFDIR
 0040000

	)

290 
	#S_IFBLK
 0060000

	)

291 
	#S_IFREG
 0100000

	)

292 
	#S_IFLNK
 0120000

	)

293 
	#S_IFSOCK
 0140000

	)

294 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

295 
	#S_IFWHT
 0160000

	)

300 
	#S_IRWXU
 0000700

	)

301 
	#S_IRUSR
 0000400

	)

302 
	#S_IWUSR
 0000200

	)

303 
	#S_IXUSR
 0000100

	)

305 
	#S_IRWXG
 0000070

	)

306 
	#S_IRGRP
 0000040

	)

307 
	#S_IWGRP
 0000020

	)

308 
	#S_IXGRP
 0000010

	)

310 
	#S_IRWXO
 0000007

	)

311 
	#S_IROTH
 0000004

	)

312 
	#S_IWOTH
 0000002

	)

313 
	#S_IXOTH
 0000001

	)

315 
	#S_ISUID
 0004000

	)

316 
	#S_ISGID
 0002000

	)

317 
	#S_ISVTX
 0001000

	)

319 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

320 
	#S_ISTXT
 
S_ISVTX


	)

321 
	#S_IREAD
 
S_IRUSR


	)

322 
	#S_IWRITE
 
S_IWUSR


	)

323 
	#S_IEXEC
 
S_IXUSR


	)

333 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
Ë

	)

334 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
Ë

	)

335 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
Ë

	)

336 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
Ë

	)

337 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
Ë

	)

338 
	#S_ISLNK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFLNK
Ë

	)

339 
	#S_ISSOCK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFSOCK
Ë

	)

340 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

341 
	#S_ISWHT
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFWHT
Ë

	)

359 
	#S_TYPEISMQ
(
buf
Ë(0Ë

	)

360 
	#S_TYPEISSEM
(
buf
Ë(0Ë

	)

361 
	#S_TYPEISSHM
(
buf
Ë(0Ë

	)

377 
	#S_TYPEISTMO
(
buf
Ë(0Ë

	)

380 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

381 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

383 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISTXT
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

385 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

387 
	#S_BLKSIZE
 512

	)

394 
	#UF_SETTABLE
 0x0000fff‡

	)

395 
	#UF_NODUMP
 0x00000001

	)

396 
	#UF_IMMUTABLE
 0x00000002

	)

397 
	#UF_APPEND
 0x00000004

	)

398 
	#UF_OPAQUE
 0x00000008

	)

404 
	#UF_COMPRESSED
 0x00000020

	)

406 
	#UF_HIDDEN
 0x00008000

	)

411 
	#SF_SETTABLE
 0xffff0000

	)

412 
	#SF_ARCHIVED
 0x00010000

	)

413 
	#SF_IMMUTABLE
 0x00020000

	)

414 
	#SF_APPEND
 0x00040000

	)

427 
__BEGIN_DECLS


429 
	$chmod
(c⁄° *, 
mode_t
Ë
	`__DARWIN_ALIAS
(
chmod
);

430 
	$fchmod
(, 
mode_t
Ë
	`__DARWIN_ALIAS
(
fchmod
);

431 
	$f°©
(, 
°©
 *Ë
	`__DARWIN_INODE64
(
f°©
);

432 
	$l°©
(c⁄° *, 
°©
 *Ë
	`__DARWIN_INODE64
(
l°©
);

433 
	`mkdú
(c⁄° *, 
mode_t
);

434 
	`mkfifo
(c⁄° *, 
mode_t
);

435 
	$°©
(c⁄° *, 
°©
 *Ë
	`__DARWIN_INODE64
(stat);

436 
	`mknod
(c⁄° *, 
mode_t
, 
dev_t
);

437 
mode_t
 
	`umask
(mode_t);

439 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

440 #i‚de‡
_FILESEC_T


441 
_fûe£c
;

442 
_fûe£c
 *
	tfûe£c_t
;

443 
	#_FILESEC_T


	)

445 
	`chÊags
(c⁄° *, 
__uöt32_t
);

446 
	`chmodx_≈
(c⁄° *, 
fûe£c_t
);

447 
	`fchÊags
(, 
__uöt32_t
);

448 
	`fchmodx_≈
(, 
fûe£c_t
);

449 
	$f°©x_≈
(, 
°©
 *, 
fûe£c_t
Ë
	`__DARWIN_INODE64
(
f°©x_≈
);

450 
	`lchÊags
(c⁄° *, 
__uöt32_t
);

451 
	`lchmod
(c⁄° *, 
mode_t
);

452 
	$l°©x_≈
(c⁄° *, 
°©
 *, 
fûe£c_t
Ë
	`__DARWIN_INODE64
(
l°©x_≈
);

453 
	`mkdúx_≈
(c⁄° *, 
fûe£c_t
);

454 
	`mkfifox_≈
(c⁄° *, 
fûe£c_t
);

455 
	$°©x_≈
(c⁄° *, 
°©
 *, 
fûe£c_t
Ë
	`__DARWIN_INODE64
(
°©x_≈
);

456 
	`umaskx_≈
(
fûe£c_t
);

458 #i‡!
__DARWIN_ONLY_64_BIT_INO_T


460 
	$f°©x64_≈
(, 
°©64
 *, 
fûe£c_t
Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

461 
	$l°©x64_≈
(c⁄° *, 
°©64
 *, 
fûe£c_t
Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

462 
	$°©x64_≈
(c⁄° *, 
°©64
 *, 
fûe£c_t
Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

463 
	$f°©64
(, 
°©64
 *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

464 
	$l°©64
(c⁄° *, 
°©64
 *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

465 
	$°©64
(c⁄° *, 
°©64
 *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

469 
__END_DECLS


	@/usr/include/sys/time.h

64 #i‚de‡
_SYS_TIME_H_


65 
	#_SYS_TIME_H_


	)

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

74 
	#__√ed_fd_£t


	)

75 
	#__√ed_°ru˘_time•ec


	)

76 
	#__√ed_°ru˘_timevÆ


	)

77 
	~<sys/_°ru˘s.h
>

79 #i‚def 
_TIME_T


80 
	#_TIME_T


	)

81 
__d¨wö_time_t
 
	ttime_t
;

84 #i‚de‡
_SUSECONDS_T


85 
	#_SUSECONDS_T


	)

86 
__d¨wö_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

93 
	sôimîvÆ
 {

94 
timevÆ
 
	mô_öãrvÆ
;

95 
timevÆ
 
	mô_vÆue
;

102 
	#ITIMER_REAL
 0

	)

103 
	#ITIMER_VIRTUAL
 1

	)

104 
	#ITIMER_PROF
 2

	)

112 #i‚def 
FD_SETSIZE


113 
	#FD_SETSIZE
 
__DARWIN_FD_SETSIZE


	)

115 #i‚de‡
FD_SET


116 
	#FD_SET
(
n
, 
p
Ë
	`__DARWIN_FD_SET
“,Ö)

	)

118 #i‚def 
FD_CLR


119 
	#FD_CLR
(
n
,
p
Ë
	`__DARWIN_FD_CLR
“,Ö)

	)

121 #i‚de‡
FD_ISSET


122 
	#FD_ISSET
(
n
, 
p
Ë
	`__DARWIN_FD_ISSET
“,Ö)

	)

124 #i‚de‡
FD_ZERO


125 
	#FD_ZERO
(
p
Ë
	`__DARWIN_FD_ZERO
’)

	)

128 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

130 #i‚de‡
FD_COPY


131 
	#FD_COPY
(
f
, 
t
Ë
	`__DARWIN_FD_COPY
(f,Å)

	)

134 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

135 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

136 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

137 }

	)

138 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

139 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

140 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

141 }

	)

143 
	stimez⁄e
 {

144 
	mtz_möuãswe°
;

145 
	mtz_d°time
;

147 
	#DST_NONE
 0

	)

148 
	#DST_USA
 1

	)

149 
	#DST_AUST
 2

	)

150 
	#DST_WET
 3

	)

151 
	#DST_MET
 4

	)

152 
	#DST_EET
 5

	)

153 
	#DST_CAN
 6

	)

156 
	#timî˛ór
(
tvp
Ë—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0

	)

157 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

158 
	#timîcmp
(
tvp
, 
uvp
, 
cmp
) \

159 (((
tvp
)->
tv_£c
 =(
uvp
)->tv_sec) ? \

160 ((
tvp
)->
tv_u£c
 
	`cmp
 (
uvp
)->tv_usec) : \

161 ((
tvp
)->
tv_£c
 
	`cmp
 (
uvp
)->tv_£c))

	)

162 
	#timîadd
(
tvp
, 
uvp
, 
vvp
) \

164 (
vvp
)->
tv_£c
 = (
tvp
)->tv_£¯+ (
uvp
)->tv_sec; \

165 (
vvp
)->
tv_u£c
 = (
tvp
)->tv_u£¯+ (
uvp
)->tv_usec; \

166 i‡((
vvp
)->
tv_u£c
 >= 1000000) { \

167 (
vvp
)->
tv_£c
++; \

168 (
vvp
)->
tv_u£c
 -= 1000000; \

170 } 0)

	)

171 
	#timîsub
(
tvp
, 
uvp
, 
vvp
) \

173 (
vvp
)->
tv_£c
 = (
tvp
)->tv_£¯- (
uvp
)->tv_sec; \

174 (
vvp
)->
tv_u£c
 = (
tvp
)->tv_u£¯- (
uvp
)->tv_usec; \

175 i‡((
vvp
)->
tv_u£c
 < 0) { \

176 (
vvp
)->
tv_£c
--; \

177 (
vvp
)->
tv_u£c
 += 1000000; \

179 } 0)

	)

181 
	#timevÆcmp
(
l
, 
r
, 
cmp
Ë
	`timîcmp
÷,Ñ, cmpË

	)

186 
	s˛ocköfo
 {

187 
	mhz
;

188 
	mtick
;

189 
	mtickadj
;

190 
	m°©hz
;

191 
	m¥ofhz
;

196 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

197 
	~<time.h
>

200 
	g__BEGIN_DECLS


202 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

203 
adjtime
(c⁄° 
timevÆ
 *, timeval *);

204 
futimes
(, c⁄° 
timevÆ
 *);

205 
lutimes
(c⁄° *, c⁄° 
timevÆ
 *);

206 
£âimeofday
(c⁄° 
timevÆ
 *, c⁄° 
timez⁄e
 *);

209 
gëôimî
(, 
ôimîvÆ
 *);

210 
gëtimeofday
(
timevÆ
 * 
__ª°ri˘
, * __restrict);

212 
	~<sys/_£À˘.h
>

214 
£tôimî
(, c⁄° 
ôimîvÆ
 * 
__ª°ri˘
,

215 
ôimîvÆ
 * 
__ª°ri˘
);

216 
utimes
(c⁄° *, c⁄° 
timevÆ
 *);

218 
	g__END_DECLS


	@/usr/include/sys/types.h

69 #i‚de‡
_SYS_TYPES_H_


70 
	#_SYS_TYPES_H_


	)

72 
	~<sys/≠∂ópi›ts.h
>

74 #i‚de‡
__ASSEMBLER__


75 
	~<sys/cdefs.h
>

78 
	~<machöe/ty≥s.h
>

79 
	~<sys/_ty≥s.h
>

81 
	~<machöe/ídün.h
>

83 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

84 
	tu_ch¨
;

85 
	tu_sh‹t
;

86 
	tu_öt
;

87 #i‚de‡
_U_LONG


88 
	tu_l⁄g
;

89 
	#_U_LONG


	)

91 
	tush‹t
;

92 
	tuöt
;

95 
u_öt64_t
 
	tu_quad_t
;

96 
öt64_t
 
	tquad_t
;

97 
quad_t
 * 
	tqaddr_t
;

99 * 
	tˇddr_t
;

100 
öt32_t
 
	tdaddr_t
;

102 #i‚de‡
_DEV_T


103 
__d¨wö_dev_t
 
	tdev_t
;

104 
	#_DEV_T


	)

107 
u_öt32_t
 
	tfix±_t
;

109 #i‚de‡
_BLKCNT_T


110 
__d¨wö_blk˙t_t
 
	tblk˙t_t
;

111 
	#_BLKCNT_T


	)

114 #i‚de‡
_BLKSIZE_T


115 
__d¨wö_blksize_t
 
	tblksize_t
;

116 
	#_BLKSIZE_T


	)

119 #i‚de‡
_GID_T


120 
__d¨wö_gid_t
 
	tgid_t
;

121 
	#_GID_T


	)

124 #i‚de‡
_IN_ADDR_T


125 
	#_IN_ADDR_T


	)

126 
__uöt32_t
 
	tö_addr_t
;

129 #i‚de‡
_IN_PORT_T


130 
	#_IN_PORT_T


	)

131 
__uöt16_t
 
	tö_p‹t_t
;

134 #i‚def 
_INO_T


135 
__d¨wö_öo_t
 
	töo_t
;

136 
	#_INO_T


	)

139 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

140 #i‚def 
_INO64_T


141 
__d¨wö_öo64_t
 
	töo64_t
;

142 
	#_INO64_T


	)

146 #i‚de‡
_KEY_T


147 
	#_KEY_T


	)

148 
__öt32_t
 
	tkey_t
;

151 #i‚def 
_MODE_T


152 
__d¨wö_mode_t
 
	tmode_t
;

153 
	#_MODE_T


	)

156 #i‚de‡
_NLINK_T


157 
__uöt16_t
 
	t∆ök_t
;

158 
	#_NLINK_T


	)

161 #i‚de‡
_ID_T


162 
	#_ID_T


	)

163 
__d¨wö_id_t
 
	tid_t
;

166 #i‚de‡
_PID_T


167 
__d¨wö_pid_t
 
	tpid_t
;

168 
	#_PID_T


	)

171 #i‚de‡
_OFF_T


172 
__d¨wö_off_t
 
	toff_t
;

173 
	#_OFF_T


	)

176 
öt32_t
 
	t£gsz_t
;

177 
öt32_t
 
	tswblk_t
;

179 #i‚de‡
_UID_T


180 
__d¨wö_uid_t
 
	tuid_t
;

181 
	#_UID_T


	)

184 #i‚de‡
_ID_T


185 
__d¨wö_id_t
 
	tid_t
;

186 
	#_ID_T


	)

189 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

191 #i‡
deföed
(
__˝lu•lus
)

197 
ölöe
 
__öt32_t
 
	$maj‹
(
__uöt32_t
 
_x
)

199  (
__öt32_t
)(((
__uöt32_t
)
_x
 >> 24) & 0xff);

200 
	}
}

202 
ölöe
 
__öt32_t
 
	$mö‹
(
__uöt32_t
 
_x
)

204  (
__öt32_t
)((
_x
) & 0xffffff);

205 
	}
}

207 
ölöe
 
dev_t
 
	$makedev
(
__uöt32_t
 
_maj‹
, __uöt32_à
_mö‹
)

209  (
dev_t
)(((
_maj‹
Ë<< 24Ë| (
_mö‹
));

210 
	}
}

214 
	#maj‹
(
x
Ë((
öt32_t
)(((
u_öt32_t
)(xË>> 24Ë& 0xff))

	)

215 
	#mö‹
(
x
Ë((
öt32_t
)((xË& 0xffffff))

	)

216 
	#makedev
(
x
,
y
Ë((
dev_t
)(((xË<< 24Ë| (y)))

	)

221 #i‚def 
_CLOCK_T


222 
	#_CLOCK_T


	)

223 
__d¨wö_˛ock_t
 
	t˛ock_t
;

226 #i‚de‡
_SIZE_T


227 
	#_SIZE_T


	)

230 
__d¨wö_size_t
 
	tsize_t
;

233 #i‚def 
_SSIZE_T


234 
	#_SSIZE_T


	)

235 
__d¨wö_ssize_t
 
	tssize_t
;

238 #i‚def 
_TIME_T


239 
	#_TIME_T


	)

240 
__d¨wö_time_t
 
	ttime_t
;

243 #i‚de‡
_USECONDS_T


244 
	#_USECONDS_T


	)

245 
__d¨wö_u£c⁄ds_t
 
	tu£c⁄ds_t
;

248 #i‚de‡
_SUSECONDS_T


249 
	#_SUSECONDS_T


	)

250 
__d¨wö_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

253 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

259 
	#__√ed_fd_£t


	)

260 
	~<sys/_°ru˘s.h
>

262 
	#NBBY
 
__DARWIN_NBBY


	)

263 
	#NFDBITS
 
__DARWIN_NFDBITS


	)

264 
	#howm™y
(
x
, 
y
Ë
	`__DARWIN_howm™y
(x, yË

	)

265 
__öt32_t
 
	tfd_mask
;

273 #i‚def 
FD_SETSIZE


274 
	#FD_SETSIZE
 
__DARWIN_FD_SETSIZE


	)

276 #i‚de‡
FD_SET


277 
	#FD_SET
(
n
, 
p
Ë
	`__DARWIN_FD_SET
“,Ö)

	)

279 #i‚de‡
FD_CLR


280 
	#FD_CLR
(
n
, 
p
Ë
	`__DARWIN_FD_CLR
“,Ö)

	)

282 #i‚de‡
FD_ISSET


283 
	#FD_ISSET
(
n
, 
p
Ë
	`__DARWIN_FD_ISSET
“,Ö)

	)

285 #i‚de‡
FD_ZERO


286 
	#FD_ZERO
(
p
Ë
	`__DARWIN_FD_ZERO
’)

	)

288 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

289 #i‚de‡
FD_COPY


290 
	#FD_COPY
(
f
, 
t
Ë
	`__DARWIN_FD_COPY
(f,Å)

	)

295 #i‡
deföed
(
__STDC__
Ë&& deföed(
KERNEL
)

301 
	g¥oc
;

302 
	gpgΩ
;

303 
	gu¸ed
;

304 
	grußge
;

305 
	gfûe
;

306 
	gbuf
;

307 
	gây
;

308 
	guio
;

314 #i‚de‡
__POSIX_LIB__


316 #i‚de‡
_PTHREAD_ATTR_T


317 
	#_PTHREAD_ATTR_T


	)

318 
__d¨wö_±hªad_©å_t
 
	t±hªad_©å_t
;

320 #i‚de‡
_PTHREAD_COND_T


321 
	#_PTHREAD_COND_T


	)

322 
__d¨wö_±hªad_c⁄d_t
 
	t±hªad_c⁄d_t
;

324 #i‚de‡
_PTHREAD_CONDATTR_T


325 
	#_PTHREAD_CONDATTR_T


	)

326 
__d¨wö_±hªad_c⁄d©å_t
 
	t±hªad_c⁄d©å_t
;

328 #i‚de‡
_PTHREAD_MUTEX_T


329 
	#_PTHREAD_MUTEX_T


	)

330 
__d¨wö_±hªad_muãx_t
 
	t±hªad_muãx_t
;

332 #i‚de‡
_PTHREAD_MUTEXATTR_T


333 
	#_PTHREAD_MUTEXATTR_T


	)

334 
__d¨wö_±hªad_muãx©å_t
 
	t±hªad_muãx©å_t
;

336 #i‚de‡
_PTHREAD_ONCE_T


337 
	#_PTHREAD_ONCE_T


	)

338 
__d¨wö_±hªad_⁄˚_t
 
	t±hªad_⁄˚_t
;

340 #i‚de‡
_PTHREAD_RWLOCK_T


341 
	#_PTHREAD_RWLOCK_T


	)

342 
__d¨wö_±hªad_rwlock_t
 
	t±hªad_rwlock_t
;

344 #i‚de‡
_PTHREAD_RWLOCKATTR_T


345 
	#_PTHREAD_RWLOCKATTR_T


	)

346 
__d¨wö_±hªad_rwlock©å_t
 
	t±hªad_rwlock©å_t
;

348 #i‚de‡
_PTHREAD_T


349 
	#_PTHREAD_T


	)

350 
__d¨wö_±hªad_t
 
	t±hªad_t
;

355 #i‚de‡
_PTHREAD_KEY_T


356 
	#_PTHREAD_KEY_T


	)

357 
__d¨wö_±hªad_key_t
 
	t±hªad_key_t
;

361 #i‚de‡
_FSBLKCNT_T


362 
	#_FSBLKCNT_T


	)

363 
__d¨wö_fsblk˙t_t
 
	tfsblk˙t_t
;

366 #i‚de‡
_FSFILCNT_T


367 
	#_FSFILCNT_T


	)

368 
__d¨wö_fsfû˙t_t
 
	tfsfû˙t_t
;

	@/usr/include/sys/uio.h

64 #i‚de‡
_SYS_UIO_H_


65 
	#_SYS_UIO_H_


	)

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

74 #i‚de‡
_SIZE_T


75 
	#_SIZE_T


	)

76 
__d¨wö_size_t
 
	tsize_t
;

79 #i‚def 
_SSIZE_T


80 
	#_SSIZE_T


	)

81 
__d¨wö_ssize_t
 
	tssize_t
;

88 #i‚de‡
_STRUCT_IOVEC


89 
	#_STRUCT_IOVEC


	)

90 
	siovec
 {

91 * 
	miov_ba£
;

92 
size_t
 
	miov_Àn
;

97 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

103 
	euio_rw
 { 
	mUIO_READ
, 
	mUIO_WRITE
 };

108 
__BEGIN_DECLS


109 
ssize_t
 
	$ªadv
(, c⁄° 
iovec
 *, Ë
	`__DARWIN_ALIAS_C
(
ªadv
);

110 
ssize_t
 
	$wrôev
(, c⁄° 
iovec
 *, Ë
	`__DARWIN_ALIAS_C
(
wrôev
);

111 
__END_DECLS


	@/usr/include/termios.h

23 #i‚de‡
__TERMIOS_H__


24 
	#__TERMIOS_H__


	)

26 
	~<sys/cdefs.h
>

27 
	~<sys/ãrmios.h
>

28 
	~<_ty≥s.h
>

30 #i‚de‡
_PID_T


31 
__d¨wö_pid_t
 
	tpid_t
;

32 
	#_PID_T


	)

35 
__BEGIN_DECLS


36 
pid_t
 
tcgësid
();

37 
	g__END_DECLS


	@/usr/include/unistd.h

68 #i‚de‡
_UNISTD_H_


69 
	#_UNISTD_H_


	)

71 
	~<_ty≥s.h
>

72 
	~<sys/uni°d.h
>

74 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

75 #i‚de‡
_DEV_T


76 
	#_DEV_T


	)

77 
__d¨wö_dev_t
 
	tdev_t
;

81 #i‚de‡
_GID_T


82 
	#_GID_T


	)

83 
__d¨wö_gid_t
 
	tgid_t
;

86 #i‚de‡
_INTPTR_T


87 
	#_INTPTR_T


	)

88 
__d¨wö_öçå_t
 
	töçå_t
;

91 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

92 #i‚de‡
_MODE_T


93 
	#_MODE_T


	)

94 
__d¨wö_mode_t
 
	tmode_t
;

98 #i‚de‡
_OFF_T


99 
	#_OFF_T


	)

100 
__d¨wö_off_t
 
	toff_t
;

103 #i‚de‡
_PID_T


104 
	#_PID_T


	)

105 
__d¨wö_pid_t
 
	tpid_t
;

108 #i‚de‡
_SIZE_T


109 
	#_SIZE_T


	)

112 
__d¨wö_size_t
 
	tsize_t
;

115 #i‚def 
_SSIZE_T


116 
	#_SSIZE_T


	)

117 
__d¨wö_ssize_t
 
	tssize_t
;

120 #i‚de‡
_UID_T


121 
	#_UID_T


	)

122 
__d¨wö_uid_t
 
	tuid_t
;

125 #i‚de‡
_USECONDS_T


126 
	#_USECONDS_T


	)

127 
__d¨wö_u£c⁄ds_t
 
	tu£c⁄ds_t
;

130 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

131 #i‚de‡
_UUID_T


132 
	#_UUID_T


	)

133 
__d¨wö_uuid_t
 
	tuuid_t
;

137 
	#STDIN_FILENO
 0

	)

138 
	#STDOUT_FILENO
 1

	)

139 
	#STDERR_FILENO
 2

	)

141 #i‚de‡
NULL


142 
	#NULL
 
__DARWIN_NULL


	)

147 
	#_XOPEN_VERSION
 600

	)

148 
	#_XOPEN_XCU_VERSION
 4

	)

152 
	#_POSIX_ADVISORY_INFO
 (-1Ë

	)

153 
	#_POSIX_ASYNCHRONOUS_IO
 (-1Ë

	)

154 
	#_POSIX_BARRIERS
 (-1Ë

	)

155 
	#_POSIX_CHOWN_RESTRICTED
 200112L

	)

156 
	#_POSIX_CLOCK_SELECTION
 (-1Ë

	)

157 
	#_POSIX_CPUTIME
 (-1Ë

	)

158 
	#_POSIX_FSYNC
 200112L

	)

159 
	#_POSIX_IPV6
 200112L

	)

160 
	#_POSIX_JOB_CONTROL
 200112L

	)

161 
	#_POSIX_MAPPED_FILES
 200112L

	)

162 
	#_POSIX_MEMLOCK
 (-1Ë

	)

163 
	#_POSIX_MEMLOCK_RANGE
 (-1Ë

	)

164 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

165 
	#_POSIX_MESSAGE_PASSING
 (-1Ë

	)

166 
	#_POSIX_MONOTONIC_CLOCK
 (-1Ë

	)

167 
	#_POSIX_NO_TRUNC
 200112L

	)

168 
	#_POSIX_PRIORITIZED_IO
 (-1Ë

	)

169 
	#_POSIX_PRIORITY_SCHEDULING
 (-1Ë

	)

170 
	#_POSIX_RAW_SOCKETS
 (-1Ë

	)

171 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

172 
	#_POSIX_REALTIME_SIGNALS
 (-1Ë

	)

173 
	#_POSIX_REGEXP
 200112L

	)

174 
	#_POSIX_SAVED_IDS
 200112L

	)

175 
	#_POSIX_SEMAPHORES
 (-1Ë

	)

176 
	#_POSIX_SHARED_MEMORY_OBJECTS
 (-1Ë

	)

177 
	#_POSIX_SHELL
 200112L

	)

178 
	#_POSIX_SPAWN
 (-1Ë

	)

179 
	#_POSIX_SPIN_LOCKS
 (-1Ë

	)

180 
	#_POSIX_SPORADIC_SERVER
 (-1Ë

	)

181 
	#_POSIX_SYNCHRONIZED_IO
 (-1Ë

	)

182 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

183 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

184 
	#_POSIX_THREAD_CPUTIME
 (-1Ë

	)

185 
	#_POSIX_THREAD_PRIO_INHERIT
 (-1Ë

	)

186 
	#_POSIX_THREAD_PRIO_PROTECT
 (-1Ë

	)

187 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 (-1Ë

	)

188 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

189 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

190 
	#_POSIX_THREAD_SPORADIC_SERVER
 (-1Ë

	)

191 
	#_POSIX_THREADS
 200112L

	)

192 
	#_POSIX_TIMEOUTS
 (-1Ë

	)

193 
	#_POSIX_TIMERS
 (-1Ë

	)

194 
	#_POSIX_TRACE
 (-1Ë

	)

195 
	#_POSIX_TRACE_EVENT_FILTER
 (-1Ë

	)

196 
	#_POSIX_TRACE_INHERIT
 (-1Ë

	)

197 
	#_POSIX_TRACE_LOG
 (-1Ë

	)

198 
	#_POSIX_TYPED_MEMORY_OBJECTS
 (-1Ë

	)

199 #i‚de‡
_POSIX_VDISABLE


200 
	#_POSIX_VDISABLE
 0xf‡

	)

203 
	#_POSIX2_C_BIND
 200112L

	)

204 
	#_POSIX2_C_DEV
 200112L

	)

205 
	#_POSIX2_CHAR_TERM
 200112L

	)

206 
	#_POSIX2_FORT_DEV
 (-1Ë

	)

207 
	#_POSIX2_FORT_RUN
 200112L

	)

208 
	#_POSIX2_LOCALEDEF
 200112L

	)

209 
	#_POSIX2_PBS
 (-1)

	)

210 
	#_POSIX2_PBS_ACCOUNTING
 (-1)

	)

211 
	#_POSIX2_PBS_CHECKPOINT
 (-1)

	)

212 
	#_POSIX2_PBS_LOCATE
 (-1)

	)

213 
	#_POSIX2_PBS_MESSAGE
 (-1)

	)

214 
	#_POSIX2_PBS_TRACK
 (-1)

	)

215 
	#_POSIX2_SW_DEV
 200112L

	)

216 
	#_POSIX2_UPE
 200112L

	)

218 
	#_V6_ILP32_OFF32
 (-1)

	)

219 
	#_V6_ILP32_OFFBIG
 (1)

	)

220 
	#_V6_LP64_OFF64
 (-1)

	)

221 
	#_V6_LPBIG_OFFBIG
 (-1)

	)

223 
	#_XBS5_ILP32_OFF32
 
_V6_ILP32_OFF32


	)

224 
	#_XBS5_ILP32_OFFBIG
 
_V6_ILP32_OFFBIG


	)

225 
	#_XBS5_LP64_OFF64
 
_V6_LP64_OFF64


	)

226 
	#_XBS5_LPBIG_OFFBIG
 
_V6_LPBIG_OFFBIG


	)

228 
	#_XOPEN_CRYPT
 (1)

	)

229 
	#_XOPEN_ENH_I18N
 (1Ë

	)

230 
	#_XOPEN_LEGACY
 (-1Ë

	)

231 
	#_XOPEN_REALTIME
 (-1Ë

	)

232 
	#_XOPEN_REALTIME_THREADS
 (-1Ë

	)

233 
	#_XOPEN_SHM
 (1)

	)

234 
	#_XOPEN_STREAMS
 (-1)

	)

235 
	#_XOPEN_UNIX
 (1)

	)

238 
	#F_ULOCK
 0

	)

239 
	#F_LOCK
 1

	)

240 
	#F_TLOCK
 2

	)

241 
	#F_TEST
 3

	)

244 
	#_SC_ARG_MAX
 1

	)

245 
	#_SC_CHILD_MAX
 2

	)

246 
	#_SC_CLK_TCK
 3

	)

247 
	#_SC_NGROUPS_MAX
 4

	)

248 
	#_SC_OPEN_MAX
 5

	)

249 
	#_SC_JOB_CONTROL
 6

	)

250 
	#_SC_SAVED_IDS
 7

	)

251 
	#_SC_VERSION
 8

	)

252 
	#_SC_BC_BASE_MAX
 9

	)

253 
	#_SC_BC_DIM_MAX
 10

	)

254 
	#_SC_BC_SCALE_MAX
 11

	)

255 
	#_SC_BC_STRING_MAX
 12

	)

256 
	#_SC_COLL_WEIGHTS_MAX
 13

	)

257 
	#_SC_EXPR_NEST_MAX
 14

	)

258 
	#_SC_LINE_MAX
 15

	)

259 
	#_SC_RE_DUP_MAX
 16

	)

260 
	#_SC_2_VERSION
 17

	)

261 
	#_SC_2_C_BIND
 18

	)

262 
	#_SC_2_C_DEV
 19

	)

263 
	#_SC_2_CHAR_TERM
 20

	)

264 
	#_SC_2_FORT_DEV
 21

	)

265 
	#_SC_2_FORT_RUN
 22

	)

266 
	#_SC_2_LOCALEDEF
 23

	)

267 
	#_SC_2_SW_DEV
 24

	)

268 
	#_SC_2_UPE
 25

	)

269 
	#_SC_STREAM_MAX
 26

	)

270 
	#_SC_TZNAME_MAX
 27

	)

271 
	#_SC_ASYNCHRONOUS_IO
 28

	)

272 
	#_SC_PAGESIZE
 29

	)

273 
	#_SC_MEMLOCK
 30

	)

274 
	#_SC_MEMLOCK_RANGE
 31

	)

275 
	#_SC_MEMORY_PROTECTION
 32

	)

276 
	#_SC_MESSAGE_PASSING
 33

	)

277 
	#_SC_PRIORITIZED_IO
 34

	)

278 
	#_SC_PRIORITY_SCHEDULING
 35

	)

279 
	#_SC_REALTIME_SIGNALS
 36

	)

280 
	#_SC_SEMAPHORES
 37

	)

281 
	#_SC_FSYNC
 38

	)

282 
	#_SC_SHARED_MEMORY_OBJECTS
 39

	)

283 
	#_SC_SYNCHRONIZED_IO
 40

	)

284 
	#_SC_TIMERS
 41

	)

285 
	#_SC_AIO_LISTIO_MAX
 42

	)

286 
	#_SC_AIO_MAX
 43

	)

287 
	#_SC_AIO_PRIO_DELTA_MAX
 44

	)

288 
	#_SC_DELAYTIMER_MAX
 45

	)

289 
	#_SC_MQ_OPEN_MAX
 46

	)

290 
	#_SC_MAPPED_FILES
 47

	)

291 
	#_SC_RTSIG_MAX
 48

	)

292 
	#_SC_SEM_NSEMS_MAX
 49

	)

293 
	#_SC_SEM_VALUE_MAX
 50

	)

294 
	#_SC_SIGQUEUE_MAX
 51

	)

295 
	#_SC_TIMER_MAX
 52

	)

296 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

297 
	#_SC_NPROCESSORS_CONF
 57

	)

298 
	#_SC_NPROCESSORS_ONLN
 58

	)

300 
	#_SC_2_PBS
 59

	)

301 
	#_SC_2_PBS_ACCOUNTING
 60

	)

302 
	#_SC_2_PBS_CHECKPOINT
 61

	)

303 
	#_SC_2_PBS_LOCATE
 62

	)

304 
	#_SC_2_PBS_MESSAGE
 63

	)

305 
	#_SC_2_PBS_TRACK
 64

	)

306 
	#_SC_ADVISORY_INFO
 65

	)

307 
	#_SC_BARRIERS
 66

	)

308 
	#_SC_CLOCK_SELECTION
 67

	)

309 
	#_SC_CPUTIME
 68

	)

310 
	#_SC_FILE_LOCKING
 69

	)

311 
	#_SC_GETGR_R_SIZE_MAX
 70

	)

312 
	#_SC_GETPW_R_SIZE_MAX
 71

	)

313 
	#_SC_HOST_NAME_MAX
 72

	)

314 
	#_SC_LOGIN_NAME_MAX
 73

	)

315 
	#_SC_MONOTONIC_CLOCK
 74

	)

316 
	#_SC_MQ_PRIO_MAX
 75

	)

317 
	#_SC_READER_WRITER_LOCKS
 76

	)

318 
	#_SC_REGEXP
 77

	)

319 
	#_SC_SHELL
 78

	)

320 
	#_SC_SPAWN
 79

	)

321 
	#_SC_SPIN_LOCKS
 80

	)

322 
	#_SC_SPORADIC_SERVER
 81

	)

323 
	#_SC_THREAD_ATTR_STACKADDR
 82

	)

324 
	#_SC_THREAD_ATTR_STACKSIZE
 83

	)

325 
	#_SC_THREAD_CPUTIME
 84

	)

326 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 85

	)

327 
	#_SC_THREAD_KEYS_MAX
 86

	)

328 
	#_SC_THREAD_PRIO_INHERIT
 87

	)

329 
	#_SC_THREAD_PRIO_PROTECT
 88

	)

330 
	#_SC_THREAD_PRIORITY_SCHEDULING
 89

	)

331 
	#_SC_THREAD_PROCESS_SHARED
 90

	)

332 
	#_SC_THREAD_SAFE_FUNCTIONS
 91

	)

333 
	#_SC_THREAD_SPORADIC_SERVER
 92

	)

334 
	#_SC_THREAD_STACK_MIN
 93

	)

335 
	#_SC_THREAD_THREADS_MAX
 94

	)

336 
	#_SC_TIMEOUTS
 95

	)

337 
	#_SC_THREADS
 96

	)

338 
	#_SC_TRACE
 97

	)

339 
	#_SC_TRACE_EVENT_FILTER
 98

	)

340 
	#_SC_TRACE_INHERIT
 99

	)

341 
	#_SC_TRACE_LOG
 100

	)

342 
	#_SC_TTY_NAME_MAX
 101

	)

343 
	#_SC_TYPED_MEMORY_OBJECTS
 102

	)

344 
	#_SC_V6_ILP32_OFF32
 103

	)

345 
	#_SC_V6_ILP32_OFFBIG
 104

	)

346 
	#_SC_V6_LP64_OFF64
 105

	)

347 
	#_SC_V6_LPBIG_OFFBIG
 106

	)

348 
	#_SC_IPV6
 118

	)

349 
	#_SC_RAW_SOCKETS
 119

	)

350 
	#_SC_SYMLOOP_MAX
 120

	)

351 
	#_SC_ATEXIT_MAX
 107

	)

352 
	#_SC_IOV_MAX
 56

	)

353 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

354 
	#_SC_XOPEN_CRYPT
 108

	)

355 
	#_SC_XOPEN_ENH_I18N
 109

	)

356 
	#_SC_XOPEN_LEGACY
 110

	)

357 
	#_SC_XOPEN_REALTIME
 111

	)

358 
	#_SC_XOPEN_REALTIME_THREADS
 112

	)

359 
	#_SC_XOPEN_SHM
 113

	)

360 
	#_SC_XOPEN_STREAMS
 114

	)

361 
	#_SC_XOPEN_UNIX
 115

	)

362 
	#_SC_XOPEN_VERSION
 116

	)

363 
	#_SC_XOPEN_XCU_VERSION
 121

	)

364 
	#_SC_XBS5_ILP32_OFF32
 122

	)

365 
	#_SC_XBS5_ILP32_OFFBIG
 123

	)

366 
	#_SC_XBS5_LP64_OFF64
 124

	)

367 
	#_SC_XBS5_LPBIG_OFFBIG
 125

	)

368 
	#_SC_SS_REPL_MAX
 126

	)

369 
	#_SC_TRACE_EVENT_NAME_MAX
 127

	)

370 
	#_SC_TRACE_NAME_MAX
 128

	)

371 
	#_SC_TRACE_SYS_MAX
 129

	)

372 
	#_SC_TRACE_USER_EVENT_MAX
 130

	)

373 
	#_SC_PASS_MAX
 131

	)

375 #i‚de‡
_CS_PATH


376 
	#_CS_PATH
 1

	)

378 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 2

	)

379 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 3

	)

380 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 4

	)

381 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 5

	)

382 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 6

	)

383 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 7

	)

384 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 8

	)

385 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 9

	)

386 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 10

	)

387 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 11

	)

388 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 12

	)

389 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 13

	)

390 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 14

	)

393 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 20

	)

394 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 21

	)

395 
	#_CS_XBS5_ILP32_OFF32_LIBS
 22

	)

396 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 23

	)

397 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 24

	)

398 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 25

	)

399 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 26

	)

400 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 27

	)

401 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 28

	)

402 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 29

	)

403 
	#_CS_XBS5_LP64_OFF64_LIBS
 30

	)

404 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 31

	)

405 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 32

	)

406 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 33

	)

407 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 34

	)

408 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 35

	)

410 
	#_CS_DARWIN_USER_DIR
 65536

	)

411 
	#_CS_DARWIN_USER_TEMP_DIR
 65537

	)

412 
	#_CS_DARWIN_USER_CACHE_DIR
 65538

	)

414 
__BEGIN_DECLS


416 
	$_exô
(Ë
__dód2
;

417 
	`ac˚ss
(const *, );

419 
	`Æ¨m
();

420 
	`chdú
(const *);

421 
	`chown
(c⁄° *, 
uid_t
, 
gid_t
);

422 
	$˛o£
(Ë
	`__DARWIN_ALIAS_C
(
˛o£
);

423 
size_t
 
	$c⁄f°r
(, *, 
size_t
Ë
	`__DARWIN_ALIAS
(
c⁄f°r
);

424 *
	`¸y±
(const *, const *);

425 *
	`˘îmid
(*);

426 
	`dup
();

427 
	`dup2
(, );

428 #i‡
__DARWIN_UNIX03


429 
	$í¸y±
(*, Ë
	`__DARWIN_ALIAS
(
í¸y±
);

431 
	`í¸y±
(*, );

433 
	`exe˛
(const *, const *, ...);

434 
	`exe˛e
(const *, const *, ...);

435 
	`exe˛p
(const *, const *, ...);

436 
	`execv
(const *, * const *);

437 
	`execve
(const *, * const *, * const *);

438 
	`execvp
(const *, * const *);

439 
	`fchown
(, 
uid_t
, 
gid_t
);

440 
	`fchdú
();

441 
pid_t
 
	`f‹k
();

442 
	`Â©hc⁄f
(, );

443 
	$fsync
(Ë
	`__DARWIN_ALIAS_C
(
fsync
);

444 
	`·runˇã
(, 
off_t
);

445 *
	`gëcwd
(*, 
size_t
);

446 
gid_t
 
	`gëegid
();

447 
uid_t
 
	`gëeuid
();

448 
gid_t
 
	`gëgid
();

449 #i‡
	`deföed
(
_DARWIN_UNLIMITED_GETGROUPS
Ë|| deföed(
_DARWIN_C_SOURCE
)

450 
	$gëgroups
(, 
gid_t
 []Ë
	`__DARWIN_EXTSN
(
gëgroups
);

452 
	`gëgroups
(, 
gid_t
 []);

454 
	`gëho°id
();

455 
	`gëho°«me
(*, 
size_t
);

456 *
	`gëlogö
();

457 
	`gëlogö_r
(*, 
size_t
);

458 
	$gë›t
(, * c⁄° [], c⁄° *Ë
	`__DARWIN_ALIAS
(
gë›t
);

459 
pid_t
 
	`gëpgid
(pid_t);

460 
pid_t
 
	`gëpgΩ
();

461 
pid_t
 
	`gëpid
();

462 
pid_t
 
	`gëµid
();

463 
pid_t
 
	`gësid
(pid_t);

464 
uid_t
 
	`gëuid
();

465 *
	`gëwd
(*);

466 
	`ißây
();

467 
	$lchown
(c⁄° *, 
uid_t
, 
gid_t
Ë
	`__DARWIN_ALIAS
(
lchown
);

468 
	`lök
(const *, const *);

469 
	$lockf
(, , 
off_t
Ë
	`__DARWIN_ALIAS_C
(
lockf
);

470 
off_t
 
	`l£ek
(, off_t, );

471 
	$ni˚
(Ë
	`__DARWIN_ALIAS
(
ni˚
);

472 
	`∑thc⁄f
(const *, );

473 
	$∑u£
(Ë
	`__DARWIN_ALIAS_C
(
∑u£
);

474 
	`pùe
([2]);

475 
ssize_t
 
	$¥ód
(, *, 
size_t
, 
off_t
Ë
	`__DARWIN_ALIAS_C
(
¥ód
);

476 
ssize_t
 
	$pwrôe
(, c⁄° *, 
size_t
, 
off_t
Ë
	`__DARWIN_ALIAS_C
(
pwrôe
);

477 
ssize_t
 
	$ªad
(, *, 
size_t
Ë
	`__DARWIN_ALIAS_C
(
ªad
);

478 
ssize_t
 
	`ªadlök
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
size_t
);

479 
	`rmdú
(const *);

480 
	`£ãgid
(
gid_t
);

481 
	`£ãuid
(
uid_t
);

482 
	`£tgid
(
gid_t
);

483 
	`£çgid
(
pid_t
,Öid_t);

484 #i‡
__DARWIN_UNIX03


485 
pid_t
 
	$£çgΩ
(Ë
	`__DARWIN_ALIAS
(
£çgΩ
);

487 
	`£çgΩ
(
pid_t
 
pid
,Öid_à
pgΩ
);

489 
	$£åegid
(
gid_t
, gid_tË
	`__DARWIN_ALIAS
(
£åegid
);

490 
	$£åeuid
(
uid_t
, uid_tË
	`__DARWIN_ALIAS
(
£åeuid
);

491 
pid_t
 
	`£tsid
();

492 
	`£tuid
(
uid_t
);

494 
	$¶ìp
(Ë
	`__DARWIN_ALIAS_C
(
¶ìp
);

495 
	`swab
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
ssize_t
);

496 
	`symlök
(const *, const *);

497 
	`sync
();

498 
	`sysc⁄f
();

499 
pid_t
 
	`tcgëpgΩ
();

500 
	`tc£çgΩ
(, 
pid_t
);

501 
	`åunˇã
(c⁄° *, 
off_t
);

502 *
	`ây«me
();

503 #i‡
__DARWIN_UNIX03


504 
	$ây«me_r
(, *, 
size_t
Ë
	`__DARWIN_ALIAS
(
ây«me_r
);

506 *
	`ây«me_r
(, *, 
size_t
);

508 
u£c⁄ds_t


509 
	`uÆ¨m
(
u£c⁄ds_t
, useconds_t);

510 
	`u∆ök
(const *);

511 
	$u¶ìp
(
u£c⁄ds_t
Ë
	`__DARWIN_ALIAS_C
(
u¶ìp
);

512 
pid_t
 
	`vf‹k
();

513 
ssize_t
 
	$wrôe
(, c⁄° *, 
size_t
Ë
	`__DARWIN_ALIAS_C
(
wrôe
);

515 *
›èrg
;

516 
›töd
, 
›ãº
, 
›t›t
;

518 #if !
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

519 
	~<sys/£À˘.h
>

521 
	$_Exô
(Ë
__dód2
;

522 
	`ac˚ssx_≈
(c⁄° 
ac˚ssx_des¸ùt‹
 *, 
size_t
, *, 
uid_t
);

523 
	`ac˘
(const *);

524 
	`add_¥ofû
(*, 
size_t
, , );

525 *
	`brk
(const *);

526 
	`chroŸ
(const *);

527 
	`ídu£rshñl
();

528 
	`execvP
(const *, const *, * const *);

529 *
	`fÊag°o°r
();

530 
	`gëdèbÀsize
();

531 
	`gëdomaö«me
(*, );

532 
	`gëgrou∂i°
(const *, , *, *);

533 
	`gëho°uuid
(
uuid_t
, c⁄° 
time•ec
 *);

534 
mode_t
 
	`gëmode
(const *, mode_t);

535 
	$gë∑gesize
(Ë
__puª2
;

536 *
	`gë∑ss
(const *);

537 
	`gë≥îeid
(, 
uid_t
 *, 
gid_t
 *);

538 
	`gëpgid
(
pid_t
 
_pid
);

539 
	`gësgroups_≈
(*, 
uuid_t
);

540 
	`gësid
(
pid_t
 
_pid
);

541 *
	`gëu£rshñl
();

542 
	`gëwgroups_≈
(*, 
uuid_t
);

543 
	`öôgroups
(const *, );

544 
	`úu£rok
(, , const *, const *);

545 
	`úu£rok_ß
(const *, , , const *, const *);

546 
	`is£tugid
();

547 *
	`mkdãmp
(*);

548 
	`mknod
(c⁄° *, 
mode_t
, 
dev_t
);

549 
	`mk°emp
(*);

550 
	`mk°emps
(*, );

551 *
	`mkãmp
(*);

552 
	`nfssvc
(, *);

553 
	`¥ofû
(*, 
size_t
, , );

554 
	`±hªad_£tugid_≈
(
uid_t
, 
gid_t
);

555 
	`±hªad_gëugid_≈
–
uid_t
 *, 
gid_t
 *);

556 
	`rcmd
(**, , const *, const *, const *, *);

557 
	`rcmd_af
(**, , const *, const *, const *, *,

559 
	`ªboŸ
();

560 
	`ªvoke
(const *);

561 
	`ºesvp‹t
(*);

562 
	`ºesvp‹t_af
(*, );

563 
	`ru£rok
(const *, , const *, const *);

564 *
	`sbrk
();

565 
	`£tdomaö«me
(const *, );

566 
	`£tgroups
(, c⁄° 
gid_t
 *);

567 
	`£tho°id
();

568 
	`£tho°«me
(const *, );

569 #i‡
__DARWIN_UNIX03


570 
	$£tkey
(c⁄° *Ë
	`__DARWIN_ALIAS
(
£tkey
);

572 
	`£tkey
(const *);

574 
	`£éogö
(const *);

575 *
	$£tmode
(c⁄° *Ë
	`__DARWIN_ALIAS
(
£tmode
);

576 
	`£ågid
(
gid_t
);

577 
	`£åuid
(
uid_t
);

578 
	`£tsgroups_≈
(, c⁄° 
uuid_t
);

579 
	`£tu£rshñl
();

580 
	`£twgroups_≈
(, c⁄° 
uuid_t
);

581 
	`°πofÊags
(**, *, *);

582 
	`sw≠⁄
(const *);

583 
	`sysˇŒ
(, ...);

584 
	`ây¶Ÿ
();

585 
	`undñëe
(const *);

586 
	`unwhôeout
(const *);

587 *
	`vÆloc
(
size_t
);

589 *
sub›èrg
;

590 
	`gësub›t
(**, * const *, **);

593 #ifde‡
__LP64__


594 
	`fgë©åli°
(,*,*,
size_t
,);

595 
	`f£èâæi°
(,*,*,
size_t
,);

596 
	$gë©åli°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
gë©åli°
);

597 
	$£èâæi°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
£èâæi°
);

598 
	`exch™ged©a
(const *,const *,);

599 
	`gëdúíåõßâr
(,*,*,
size_t
,*,*,*,);

602 
	`fgë©åli°
(,*,*,
size_t
,);

603 
	`f£èâæi°
(,*,*,
size_t
,);

604 
	$gë©åli°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
gë©åli°
);

605 
	$£èâæi°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
£èâæi°
);

606 
	`exch™ged©a
(const *,const *,);

607 
	`gëdúíåõßâr
(,*,*,
size_t
,*,*,*,);

611 
fs£¨chblock
;

612 
£¨ch°©e
;

614 
	`£¨chfs
(c⁄° *, 
fs£¨chblock
 *, *, , , 
£¨ch°©e
 *);

615 
	`fs˘l
(const *,,*,);

616 
	`ffs˘l
(,,*,);

618 
›åe£t
;

621 
__END_DECLS


	@/usr/include/util.h

58 #i‚de‡
_UTIL_H_


59 
	#_UTIL_H_


	)

61 
	~<sys/cdefs.h
>

62 
	~<sys/âycom.h
>

63 
	~<sys/ty≥s.h
>

64 
	~<°dio.h
>

65 
	~<pwd.h
>

66 
	~<ãrmios.h
>

67 
	~<Avaûabûôy.h
>

69 
	#PIDLOCK_NONBLOCK
 1

	)

70 
	#PIDLOCK_USEHOSTNAME
 2

	)

75 
	#FPARSELN_UNESCESC
 0x01

	)

76 
	#FPARSELN_UNESCCONT
 0x02

	)

77 
	#FPARSELN_UNESCCOMM
 0x04

	)

78 
	#FPARSELN_UNESCREST
 0x08

	)

79 
	#FPARSELN_UNESCALL
 0x0f

	)

84 
	#OPENDEV_PART
 0x01

	)

85 
	#OPENDEV_BLCK
 0x04

	)

87 
__BEGIN_DECLS


88 
	gutmp
;

89 
	$logö
(
utmp
 *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
,
__MAC_10_5
,
__IPHONE_NA
,__IPHONE_NA);

90 
	`logö_ây
();

91 
	$logout
(c⁄° *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
,
__MAC_10_5
,
__IPHONE_NA
,__IPHONE_NA);

92 
	$logwtmp
(c⁄° *, c⁄° *, c⁄° *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
,
__MAC_10_5
,
__IPHONE_2_0
,__IPHONE_2_0);

93 
	`›ídev
(*, , , **);

94 
	`›í±y
(*, *, *, 
ãrmios
 *,

95 
wösize
 *);

96 *
	`Â¨£ 
(
FILE
 *, 
size_t
 *, size_t *, const [3], );

97 
pid_t
 
	`f‹k±y
(*, *, 
ãrmios
 *, 
wösize
 *);

98 
	`pidlock
(c⁄° *, , 
pid_t
 *, const *);

99 
	`âylock
(c⁄° *, , 
pid_t
 *);

100 
	`âyu∆ock
(const *);

101 
	`âya˘i⁄
(*
ây
, *
a˘
, *
u£r
);

102 
iovec
;

103 *
	`âymsg
(
iovec
 *, , const *, );

104 
__END_DECLS


107 
	~<utmp.h
>

	@/usr/include/Availability.h

24 #i‚de‡
__AVAILABILITY__


25 
	#__AVAILABILITY__


	)

111 
	#__MAC_10_0
 1000

	)

112 
	#__MAC_10_1
 1010

	)

113 
	#__MAC_10_2
 1020

	)

114 
	#__MAC_10_3
 1030

	)

115 
	#__MAC_10_4
 1040

	)

116 
	#__MAC_10_5
 1050

	)

117 
	#__MAC_10_6
 1060

	)

118 
	#__MAC_NA
 9999

	)

120 
	#__IPHONE_2_0
 20000

	)

121 
	#__IPHONE_2_1
 20100

	)

122 
	#__IPHONE_2_2
 20200

	)

123 
	#__IPHONE_3_0
 30000

	)

124 
	#__IPHONE_NA
 99999

	)

126 
	~<AvaûabûôyI¡î«l.h
>

129 #ifde‡
__IPHONE_OS_VERSION_MIN_REQUIRED


130 
	#__OSX_AVAILABLE_STARTING
(
_mac
, 
_ùh⁄e
Ë
__AVAILABILITY_INTERNAL
##
	)
_iphone

131 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
_macI¡ro
, 
_macDï
, 
_ùh⁄eI¡ro
, 
_ùh⁄eDï
) \

132 
__AVAILABILITY_INTERNAL
##
_ùh⁄eI¡ro
##
_DEP
##
_ùh⁄eDï


	)

134 #ñi‡
deföed
(
__MAC_OS_X_VERSION_MIN_REQUIRED
)

135 
	#__OSX_AVAILABLE_STARTING
(
_mac
, 
_ùh⁄e
Ë
__AVAILABILITY_INTERNAL
##
	)
_mac

136 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
_macI¡ro
, 
_macDï
, 
_ùh⁄eI¡ro
, 
_ùh⁄eDï
) \

137 
__AVAILABILITY_INTERNAL
##
_macI¡ro
##
_DEP
##
_macDï


	)

140 
	#__OSX_AVAILABLE_STARTING
(
_mac
, 
_ùh⁄e
)

	)

141 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
_macI¡ro
, 
_macDï
, 
_ùh⁄eI¡ro
, 
_ùh⁄eDï
)

	)

	@/usr/include/_types.h

24 #i‚de‡
__TYPES_H_


25 
	#__TYPES_H_


	)

27 
	~<sys/_ty≥s.h
>

29 #i‡
__GNUC__
 > 2 || __GNUC__ =2 && 
__GNUC_MINOR__
 >= 7

30 
	#__°rfm⁄like
(
fmèrg
, 
fú°v¨¨g
) \

31 
	`__©åibuã__
((
	`__f‹m©__
 (
__°rfm⁄__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

32 
	#__°r·imñike
(
fmèrg
) \

33 
	`__©åibuã__
((
	`__f‹m©__
 (
__°r·ime__
, 
fmèrg
, 0)))

	)

35 
	#__°rfm⁄like
(
fmèrg
, 
fú°v¨¨g
)

	)

36 
	#__°r·imñike
(
fmèrg
)

	)

39 
	t__d¨wö_∆_ôem
;

40 
	t__d¨wö_w˘øns_t
;

41 #ifde‡
__LP64__


42 
__uöt32_t
 
	t__d¨wö_w˘y≥_t
;

44 
	t__d¨wö_w˘y≥_t
;

47 #ifde‡
__WCHAR_MAX__


48 
	#__DARWIN_WCHAR_MAX
 
__WCHAR_MAX__


	)

50 
	#__DARWIN_WCHAR_MAX
 0x7fffffff

	)

53 #i‡
__DARWIN_WCHAR_MAX
 > 0xffffU

54 
	#__DARWIN_WCHAR_MIN
 (-0x7ffffff‡- 1)

	)

56 
	#__DARWIN_WCHAR_MIN
 0

	)

58 
	#__DARWIN_WEOF
 ((
__d¨wö_wöt_t
)-1)

	)

60 #i‚de‡
_FORTIFY_SOURCE


61 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1050)

62 
	#_FORTIFY_SOURCE
 0

	)

64 
	#_FORTIFY_SOURCE
 2

	)

	@/usr/include/_xlocale.h

24 #i‚de‡
__XLOCALE_H_


25 
	#__XLOCALE_H_


	)

27 
	~<sys/cdefs.h
>

29 
__BEGIN_DECLS


30 
___mb_cur_max
();

31 
___mb_cur_max_l
(
loˇÀ_t
);

32 
	g__END_DECLS


	@/usr/include/alloca.h

24 #i‚de‡
_ALLOCA_H_


25 
	#_ALLOCA_H_


	)

27 
	~<sys/cdefs.h
>

28 
	~<_ty≥s.h
>

30 #i‚def 
_SIZE_T


31 
	#_SIZE_T


	)

32 
__d¨wö_size_t
 
	tsize_t
;

35 
__BEGIN_DECLS


36 *
Æloˇ
(
size_t
);

37 
	g__END_DECLS


39 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

41 #unde‡
Æloˇ


42 #unde‡
__Æloˇ


43 
	#Æloˇ
(
size
Ë
	`__Æloˇ
(size)

	)

44 
	#__Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
(size)

	)

	@/usr/include/machine/endian.h

31 #i‚de‡
_BSD_MACHINE_ENDIAN_H_


32 
	#_BSD_MACHINE_ENDIAN_H_


	)

34 #i‡
deföed
 (
__µc__
Ë|| deföed(
__µc64__
)

35 
	~"µc/ídün.h
"

36 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

37 
	~"i386/ídün.h
"

38 #ñi‡
deföed
 (
__¨m__
)

39 
	~"¨m/ídün.h
"

41 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/limits.h

5 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

6 
	~<µc/limôs.h
>

7 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

8 
	~<i386/limôs.h
>

9 #ñi‡
deföed
 (
__¨m__
)

10 
	~<¨m/limôs.h
>

12 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/types.h

31 #i‚de‡
_BSD_MACHINE_TYPES_H_


32 
	#_BSD_MACHINE_TYPES_H_


	)

34 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

35 
	~"µc/ty≥s.h
"

36 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

37 
	~"i386/ty≥s.h
"

38 #ñi‡
deföed
 (
__¨m__
)

39 
	~"¨m/ty≥s.h
"

41 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/pthread_impl.h

24 #i‚de‡
_PTHREAD_IMPL_H_


25 
	#_PTHREAD_IMPL_H_


	)

32 #i‚de‡
__POSIX_LIB__


37 
	#_PTHREAD_MUTEX_SIG_öô
 0x32AAABA7

	)

38 
	#_PTHREAD_COND_SIG_öô
 0x3CB0B1BB

	)

39 
	#_PTHREAD_ONCE_SIG_öô
 0x30B1BCBA

	)

40 
	#_PTHREAD_RWLOCK_SIG_öô
 0x2DA8B3B4

	)

44 
	#SCHED_OTHER
 1

	)

45 
	#SCHED_FIFO
 4

	)

46 
	#SCHED_RR
 2

	)

48 
	#__SCHED_PARAM_SIZE__
 4

	)

	@/usr/include/pwd.h

66 #i‚de‡
_PWD_H_


67 
	#_PWD_H_


	)

69 
	~<_ty≥s.h
>

71 #i‚de‡
_GID_T


72 
__d¨wö_gid_t
 
	tgid_t
;

73 
	#_GID_T


	)

76 #i‚de‡
_SIZE_T


77 
	#_SIZE_T


	)

78 
__d¨wö_size_t
 
	tsize_t
;

81 #i‚de‡
_UID_T


82 
__d¨wö_uid_t
 
	tuid_t
;

83 
	#_UID_T


	)

86 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

87 
	#_PATH_PWD
 "/ëc"

	)

88 
	#_PATH_PASSWD
 "/ëc/∑sswd"

	)

89 
	#_PASSWD
 "∑sswd"

	)

90 
	#_PATH_MASTERPASSWD
 "/ëc/ma°î.∑sswd"

	)

91 
	#_PATH_MASTERPASSWD_LOCK
 "/ëc/±mp"

	)

92 
	#_MASTERPASSWD
 "ma°î.∑sswd"

	)

94 
	#_PATH_MP_DB
 "/ëc/pwd.db"

	)

95 
	#_MP_DB
 "pwd.db"

	)

96 
	#_PATH_SMP_DB
 "/ëc/•wd.db"

	)

97 
	#_SMP_DB
 "•wd.db"

	)

99 
	#_PATH_PWD_MKDB
 "/u§/sbö/pwd_mkdb"

	)

101 
	#_PW_KEYBYNAME
 '1'

	)

102 
	#_PW_KEYBYNUM
 '2'

	)

103 
	#_PW_KEYBYUID
 '3'

	)

105 
	#_PASSWORD_EFMT1
 '_'

	)

107 
	#_PASSWORD_LEN
 128

	)

109 
	#_PASSWORD_NOUID
 0x01

	)

110 
	#_PASSWORD_NOGID
 0x02

	)

111 
	#_PASSWORD_NOCHG
 0x04

	)

112 
	#_PASSWORD_NOEXP
 0x08

	)

114 
	#_PASSWORD_WARNDAYS
 14

	)

115 
	#_PASSWORD_CHGNOW
 -1

	)

119 
	s∑sswd
 {

120 *
	mpw_«me
;

121 *
	mpw_∑sswd
;

122 
uid_t
 
	mpw_uid
;

123 
gid_t
 
	mpw_gid
;

124 
__d¨wö_time_t
 
	mpw_ch™ge
;

125 *
	mpw_˛ass
;

126 *
	mpw_gecos
;

127 *
	mpw_dú
;

128 *
	mpw_shñl
;

129 
__d¨wö_time_t
 
	mpw_expúe
;

132 
	~<sys/cdefs.h
>

134 
__BEGIN_DECLS


135 
∑sswd
 *
gëpwuid
(
uid_t
);

136 
∑sswd
 *
gëpw«m
(const *);

137 
gëpwuid_r
(
uid_t
, 
∑sswd
 *, *, 
size_t
, passwd **);

138 
gëpw«m_r
(c⁄° *, 
∑sswd
 *, *, 
size_t
, passwd **);

139 
∑sswd
 *
gëpwít
();

140 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

141 
£ças£¡
();

142 *
u£r_‰om_uid
(
uid_t
, );

144 
£çwít
();

145 
ídpwít
();

146 
	g__END_DECLS


	@/usr/include/runetype.h

39 #i‚def 
_RUNETYPE_H_


40 
	#_RUNETYPE_H_


	)

42 
	~<_ty≥s.h
>

44 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

46 #i‚def 
_SIZE_T


47 
	#_SIZE_T


	)

48 
__d¨wö_size_t
 
	tsize_t
;

51 #i‚def 
_CT_RUNE_T


52 
	#_CT_RUNE_T


	)

53 
__d¨wö_˘_ru√_t
 
	t˘_ru√_t
;

56 #i‚def 
_RUNE_T


57 
	#_RUNE_T


	)

58 
__d¨wö_ru√_t
 
	tru√_t
;

61 #i‚def 
__˝lu•lus


62 #i‚def 
_WCHAR_T


63 
	#_WCHAR_T


	)

64 
__d¨wö_wch¨_t
 
	twch¨_t
;

68 #i‚def 
_WINT_T


69 
	#_WINT_T


	)

70 
__d¨wö_wöt_t
 
	twöt_t
;

75 
	#_CACHED_RUNES
 (1 <<8 )

	)

76 
	#_CRMASK
 (~(
_CACHED_RUNES
 - 1))

	)

82 
__d¨wö_ru√_t
 
	m__mö
;

83 
__d¨wö_ru√_t
 
	m__max
;

84 
__d¨wö_ru√_t
 
	m__m≠
;

85 
__uöt32_t
 *
	m__ty≥s
;

86 } 
	t_Ru√E¡ry
;

89 
	m__ƒ™ges
;

90 
_Ru√E¡ry
 *
	m__ønges
;

91 } 
	t_Ru√R™ge
;

94 
	m__«me
[14];

95 
__uöt32_t
 
	m__mask
;

96 } 
	t_Ru√Ch¨Cœss
;

99 
	m__magic
[8];

100 
	m__ícodög
[32];

102 
__d¨wö_ru√_t
 (*
__sgëru√
)(c⁄° *, 
	m__d¨wö_size_t
, const **);

103 (*
	m__•uåu√
)(
	m__d¨wö_ru√_t
, *, 
	m__d¨wö_size_t
, **);

104 
__d¨wö_ru√_t
 
	m__övÆid_ru√
;

106 
__uöt32_t
 
	m__ru√ty≥
[
_CACHED_RUNES
];

107 
__d¨wö_ru√_t
 
	m__m≠lowî
[
_CACHED_RUNES
];

108 
__d¨wö_ru√_t
 
	m__m≠uµî
[
_CACHED_RUNES
];

115 
_Ru√R™ge
 
	m__ru√ty≥_ext
;

116 
_Ru√R™ge
 
	m__m≠lowî_ext
;

117 
_Ru√R™ge
 
	m__m≠uµî_ext
;

119 *
	m__v¨übÀ
;

120 
	m__v¨übÀ_Àn
;

125 
	m__nch¨˛as£s
;

126 
_Ru√Ch¨Cœss
 *
	m__ch¨˛as£s
;

127 } 
	t_Ru√LoˇÀ
;

129 
	#_RUNE_MAGIC_A
 "Ru√MagA"

	)

131 
__BEGIN_DECLS


132 
_Ru√LoˇÀ
 
_DeÁu…Ru√LoˇÀ
;

133 
_Ru√LoˇÀ
 *
_CuºítRu√LoˇÀ
;

134 
	g__END_DECLS


	@/usr/include/sched.h

24 #i‚de‡
_SCHED_H_


25 
	#_SCHED_H_


	)

27 
	~<±hªad_im∂.h
>

28 
	~<sys/cdefs.h
>

30 
	g__BEGIN_DECLS


34 #i‚de‡
__POSIX_LIB__


35 
	ssched_∑øm
 { 
	msched_¥i‹ôy
; 
	m__›aque
[
__SCHED_PARAM_SIZE__
]; };

38 
sched_yõld
();

39 
sched_gë_¥i‹ôy_mö
();

40 
sched_gë_¥i‹ôy_max
();

41 
	g__END_DECLS


	@/usr/include/secure/_stdio.h

24 #i‚de‡
_STDIO_H_


25 #îr‹ 
îr‹
 "Never use <secure/_stdio.h> directly; include <stdio.h> instead."

28 #i‚de‡
_SECURE__STDIO_H_


29 
	#_SECURE__STDIO_H_


	)

31 
	~<£cuª/_comm⁄.h
>

33 #i‡
_USE_FORTIFY_LEVEL
 > 0

35 #unde‡
•rötf


36 #unde‡
v•rötf


37 #unde‡
¢¥ötf


38 #unde‡
v¢¥ötf


42 
	$__•rötf_chk
 (* 
__ª°ri˘
, , 
size_t
,

43 c⁄° * 
__ª°ri˘
, ...)

44 
	`__DARWIN_LDBL_COMPAT
 (
__•rötf_chk
);

46 
	#•rötf
(
°r
, ...) \

47 
	`__buûtö___•rötf_chk
 (
°r
, 0, 
	`__d¨wö_obsz
(°r), 
__VA_ARGS__
)

	)

49 
	$__¢¥ötf_chk
 (* 
__ª°ri˘
, 
size_t
, , size_t,

50 c⁄° * 
__ª°ri˘
, ...)

51 
	`__DARWIN_LDBL_COMPAT
 (
__¢¥ötf_chk
);

53 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

54 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 0, 
	`__d¨wö_obsz
(°r), 
__VA_ARGS__
)

	)

56 
	$__v•rötf_chk
 (* 
__ª°ri˘
, , 
size_t
,

57 c⁄° * 
__ª°ri˘
, 
va_li°
)

58 
	`__DARWIN_LDBL_COMPAT
 (
__v•rötf_chk
);

60 
	#v•rötf
(
°r
, 
f‹m©
, 
≠
) \

61 
	`__buûtö___v•rötf_chk
 (
°r
, 0, 
	`__d¨wö_obsz
(°r), 
f‹m©
, 
≠
)

	)

63 
	$__v¢¥ötf_chk
 (* 
__ª°ri˘
, 
size_t
, , size_t,

64 c⁄° * 
__ª°ri˘
, 
va_li°
)

65 
	`__DARWIN_LDBL_COMPAT
 (
__v¢¥ötf_chk
);

67 
	#v¢¥ötf
(
°r
, 
Àn
, 
f‹m©
, 
≠
) \

68 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 0, 
	`__d¨wö_obsz
(°r), 
f‹m©
, 
≠
)

	)

	@/usr/include/secure/_string.h

24 #i‚de‡
_STRING_H_


28 #i‚de‡
_SECURE__STRING_H_


29 
	#_SECURE__STRING_H_


	)

31 
	~<sys/cdefs.h
>

32 
	~<£cuª/_comm⁄.h
>

34 #i‡
_USE_FORTIFY_LEVEL
 > 0

39 #unde‡
mem˝y


40 #unde‡
memmove


41 #unde‡
mem£t


42 #unde‡
°r˝y


43 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

44 #unde‡
°p˝y


46 #unde‡
°∫˝y


47 #unde‡
°rˇt


48 #unde‡
°∫ˇt


50 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

51 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

52 ? 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz0
 (dest)) \

53 : 
	`__ölöe_mem˝y_chk
 (
de°
, 
§c
, 
Àn
))

	)

55 
__ölöe
 *

56 
	$__ölöe_mem˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
)

58  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz0
(__dest));

59 
	}
}

61 
	#memmove
(
de°
, 
§c
, 
Àn
) \

62 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

63 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz0
 (dest)) \

64 : 
	`__ölöe_memmove_chk
 (
de°
, 
§c
, 
Àn
))

	)

66 
__ölöe
 *

67 
	$__ölöe_memmove_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
)

69  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz0
(__dest));

70 
	}
}

72 
	#mem£t
(
de°
, 
vÆ
, 
Àn
) \

73 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

74 ? 
	`__buûtö___mem£t_chk
 (
de°
, 
vÆ
, 
Àn
, 
	`__d¨wö_obsz0
 (dest)) \

75 : 
	`__ölöe_mem£t_chk
 (
de°
, 
vÆ
, 
Àn
))

	)

77 
__ölöe
 *

78 
	$__ölöe_mem£t_chk
 (*
__de°
, 
__vÆ
, 
size_t
 
__Àn
)

80  
	`__buûtö___mem£t_chk
 (
__de°
, 
__vÆ
, 
__Àn
, 
	`__d¨wö_obsz0
(__dest));

81 
	}
}

83 
	#°r˝y
(
de°
, 
§c
) \

84 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

85 ? 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (dest)) \

86 : 
	`__ölöe_°r˝y_chk
 (
de°
, 
§c
))

	)

88 
__ölöe
 *

89 
	$__ölöe_°r˝y_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

91  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__d¨wö_obsz
(__dest));

92 
	}
}

94 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

95 
	#°p˝y
(
de°
, 
§c
) \

96 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

97 ? 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (dest)) \

98 : 
	`__ölöe_°p˝y_chk
 (
de°
, 
§c
))

	)

100 
__ölöe
 *

101 
	$__ölöe_°p˝y_chk
 (*
__de°
, c⁄° *
__§c
)

103  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__d¨wö_obsz
(__dest));

104 
	}
}

107 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

108 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

109 ? 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (dest)) \

110 : 
	`__ölöe_°∫˝y_chk
 (
de°
, 
§c
, 
Àn
))

	)

112 
__ölöe
 *

113 
	$__ölöe_°∫˝y_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
)

116  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz
(__dest));

117 
	}
}

119 
	#°rˇt
(
de°
, 
§c
) \

120 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

121 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (dest)) \

122 : 
	`__ölöe_°rˇt_chk
 (
de°
, 
§c
))

	)

124 
__ölöe
 *

125 
	$__ölöe_°rˇt_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

127  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__d¨wö_obsz
(__dest));

128 
	}
}

130 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

131 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

132 ? 
	`__buûtö___°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (dest)) \

133 : 
	`__ölöe_°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
))

	)

135 
__ölöe
 *

136 
	$__ölöe_°∫ˇt_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__Àn
)

139  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz
(__dest));

140 
	}
}

	@/usr/include/sys/_select.h

36 #i‚de‡
_SYS__SELECT_H_


37 
	#_SYS__SELECT_H_


	)

39 
	$£À˘
(, 
fd_£t
 * 
__ª°ri˘
, fd_set * __restrict,

40 
fd_£t
 * 
__ª°ri˘
, 
timevÆ
 * __restrict)

41 #i‡
	`deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_UNLIMITED_SELECT
)

42 
	$__DARWIN_EXTSN_C
(
£À˘
)

44 #i‡
	`deföed
(
__LP64__
Ë&& !
__DARWIN_NON_CANCELABLE


45 
	$__DARWIN_1050
(
£À˘
)

47 
	$__DARWIN_ALIAS_C
(
£À˘
)

	@/usr/include/sys/_structs.h

29 
	~<sys/cdefs.h
>

30 
	~<sys/_ty≥s.h
>

32 #ifde‡
__√ed_uc⁄ãxt_t


33 #i‚de‡
__√ed_°ru˘_uc⁄ãxt


34 
	#__√ed_°ru˘_uc⁄ãxt


	)

38 #ifde‡
__√ed_uc⁄ãxt64_t


39 #i‚de‡
__√ed_°ru˘_uc⁄ãxt64


40 
	#__√ed_°ru˘_uc⁄ãxt64


	)

44 #ifde‡
__√ed_°ru˘_uc⁄ãxt


45 #i‚de‡
__√ed_°ru˘_mc⁄ãxt


46 
	#__√ed_°ru˘_mc⁄ãxt


	)

50 #ifde‡
__√ed_°ru˘_uc⁄ãxt64


51 #i‚de‡
__√ed_°ru˘_mc⁄ãxt64


52 
	#__√ed_°ru˘_mc⁄ãxt64


	)

56 #i‡
deföed
(
__√ed_°ru˘_mc⁄ãxt
Ë|| deföed(
__√ed_°ru˘_mc⁄ãxt64
)

57 
	~<machöe/_°ru˘s.h
>

60 #i‡
deföed
(
__√ed_°ack_t
Ë|| deföed(
__√ed_°ru˘_uc⁄ãxt
Ë|| deföed(
__√ed_°ru˘_uc⁄ãxt64
)

61 #i‚de‡
__√ed_°ru˘_sigÆt°ack


62 
	#__√ed_°ru˘_sigÆt°ack


	)

66 #ifde‡
__√ed_°ru˘_sigÆt°ack


67 #unde‡
__√ed_°ru˘_sigÆt°ack


69 #i‚de‡
_STRUCT_SIGALTSTACK


70 #i‡
__DARWIN_UNIX03


71 
	#_STRUCT_SIGALTSTACK
 
__d¨wö_sigÆt°ack


	)

73 
	#_STRUCT_SIGALTSTACK
 
sigÆt°ack


	)

75 
	g_STRUCT_SIGALTSTACK


77 *
	gss_•
;

78 
__d¨wö_size_t
 
	gss_size
;

79 
	gss_Êags
;

84 #ifde‡
__√ed_°ru˘_time•ec


85 #unde‡
__√ed_°ru˘_time•ec


86 #i‚de‡
_STRUCT_TIMESPEC


87 
	#_STRUCT_TIMESPEC
 
time•ec


	)

88 
	g_STRUCT_TIMESPEC


90 
__d¨wö_time_t
 
	gtv_£c
;

91 
	gtv_n£c
;

96 #ifde‡
__√ed_°ru˘_timevÆ


97 #unde‡
__√ed_°ru˘_timevÆ


98 #i‚de‡
_STRUCT_TIMEVAL


99 
	#_STRUCT_TIMEVAL
 
timevÆ


	)

100 
	g_STRUCT_TIMEVAL


102 
__d¨wö_time_t
 
	gtv_£c
;

103 
__d¨wö_su£c⁄ds_t
 
	gtv_u£c
;

108 #ifde‡
__√ed_°ru˘_timevÆ32


109 #unde‡
__√ed_°ru˘_timevÆ32


110 #i‚de‡
_STRUCT_TIMEVAL32


111 
	#_STRUCT_TIMEVAL32
 
timevÆ32


	)

112 
	g_STRUCT_TIMEVAL32


114 
__öt32_t
 
	gtv_£c
;

115 
__öt32_t
 
	gtv_u£c
;

120 #ifde‡
__√ed_°ru˘_uc⁄ãxt


121 #unde‡
__√ed_°ru˘_uc⁄ãxt


122 #i‚de‡
_STRUCT_UCONTEXT


123 #i‡
__DARWIN_UNIX03


124 
	#_STRUCT_UCONTEXT
 
__d¨wö_uc⁄ãxt


	)

126 
	#_STRUCT_UCONTEXT
 
uc⁄ãxt


	)

128 
	g_STRUCT_UCONTEXT


130 
	guc_⁄°ack
;

131 
__d¨wö_sig£t_t
 
	guc_sigmask
;

132 
_STRUCT_SIGALTSTACK
 
	guc_°ack
;

133 
_STRUCT_UCONTEXT
 *
	guc_lök
;

134 
__d¨wö_size_t
 
	guc_mcsize
;

135 
_STRUCT_MCONTEXT
 *
	guc_mc⁄ãxt
;

136 #ifde‡
_XOPEN_SOURCE


137 
_STRUCT_MCONTEXT
 
	g__mc⁄ãxt_d©a
;

143 #ifde‡
__√ed_°ru˘_uc⁄ãxt64


144 #unde‡
__√ed_°ru˘_uc⁄ãxt64


145 #i‚de‡
_STRUCT_UCONTEXT64


146 #i‡
__DARWIN_UNIX03


147 
	#_STRUCT_UCONTEXT64
 
__d¨wö_uc⁄ãxt64


	)

149 
	#_STRUCT_UCONTEXT64
 
uc⁄ãxt64


	)

151 
	g_STRUCT_UCONTEXT64


153 
	guc_⁄°ack
;

154 
__d¨wö_sig£t_t
 
	guc_sigmask
;

155 
_STRUCT_SIGALTSTACK
 
	guc_°ack
;

156 
_STRUCT_UCONTEXT64
 *
	guc_lök
;

157 
__d¨wö_size_t
 
	guc_mcsize
;

158 
_STRUCT_MCONTEXT64
 *
	guc_mc⁄ãxt64
;

164 #ifde‡
__√ed_fd_£t


165 #unde‡
__√ed_fd_£t


166 #i‚de‡
_FD_SET


167 
	#_FD_SET


	)

174 #ifde‡
FD_SETSIZE


175 
	#__DARWIN_FD_SETSIZE
 
FD_SETSIZE


	)

177 
	#__DARWIN_FD_SETSIZE
 1024

	)

179 
	#__DARWIN_NBBY
 8

	)

180 
	#__DARWIN_NFDBITS
 ((
__öt32_t
Ë* 
__DARWIN_NBBY
Ë

	)

181 
	#__DARWIN_howm™y
(
x
, 
y
Ë((((xË% (y)Ë=0Ë? ((xË/ (y)Ë: (((xË/ (y)Ë+ 1)Ë

	)

183 
__BEGIN_DECLS


184 
	sfd_£t
 {

185 
__öt32_t
 
	mfds_bôs
[
__DARWIN_howm™y
(
__DARWIN_FD_SETSIZE
, 
__DARWIN_NFDBITS
)];

186 } 
	tfd_£t
;

187 
__END_DECLS


190 
__ölöe
 

191 
	$__d¨wö_fd_is£t
(
_n
, c⁄° 
fd_£t
 *
_p
)

193  (
_p
->
fds_bôs
[
_n
/
__DARWIN_NFDBITS
] & (1<<(_n % __DARWIN_NFDBITS)));

194 
	}
}

196 
	#__DARWIN_FD_SET
(
n
, 
p
Ëdÿ{ 
__fd
 = (n); (’)->
fds_bôs
[__fd/
__DARWIN_NFDBITS
] |(1<<(__fd % __DARWIN_NFDBITS))); } 0)

	)

197 
	#__DARWIN_FD_CLR
(
n
, 
p
Ëdÿ{ 
__fd
 = (n); (’)->
fds_bôs
[__fd/
__DARWIN_NFDBITS
] &~(1<<(__fd % __DARWIN_NFDBITS))); } 0)

	)

198 
	#__DARWIN_FD_ISSET
(
n
, 
p
Ë
	`__d¨wö_fd_is£t
(“), (p))

	)

200 #i‡
__GNUC__
 > 3 || __GNUC__ =3 && 
__GNUC_MINOR__
 >= 3

205 
	#__DARWIN_FD_ZERO
(
p
Ë
	`__buûtö_bzîo
’, (*’)))

	)

207 
	#__DARWIN_FD_ZERO
(
p
Ë
	`bzîo
’, (*’)))

	)

210 
	#__DARWIN_FD_COPY
(
f
, 
t
Ë
	`bc›y
(f,Å, (*(f)))

	)

214 #ifde‡
__√ed_°ack_t


215 #unde‡
__√ed_°ack_t


216 #i‚de‡
_STACK_T


217 
	#_STACK_T


	)

218 
_STRUCT_SIGALTSTACK
 
	t°ack_t
;

222 #ifde‡
__√ed_uc⁄ãxt_t


223 #unde‡
__√ed_uc⁄ãxt_t


225 #i‚de‡
_UCONTEXT_T


226 
	#_UCONTEXT_T


	)

227 
_STRUCT_UCONTEXT
 
	tuc⁄ãxt_t
;

231 #ifde‡
__√ed_uc⁄ãxt64_t


232 #unde‡
__√ed_uc⁄ãxt64_t


233 #i‚de‡
_UCONTEXT64_T


234 
	#_UCONTEXT64_T


	)

235 
_STRUCT_UCONTEXT64
 
	tuc⁄ãxt64_t
;

	@/usr/include/sys/_types.h

29 #i‚de‡
_SYS__TYPES_H_


30 
	#_SYS__TYPES_H_


	)

32 
	~<sys/cdefs.h
>

33 
	~<machöe/_ty≥s.h
>

36 #i‡
deföed
(
__LP64__
)

37 
	#__PTHREAD_SIZE__
 1168

	)

38 
	#__PTHREAD_ATTR_SIZE__
 56

	)

39 
	#__PTHREAD_MUTEXATTR_SIZE__
 8

	)

40 
	#__PTHREAD_MUTEX_SIZE__
 56

	)

41 
	#__PTHREAD_CONDATTR_SIZE__
 8

	)

42 
	#__PTHREAD_COND_SIZE__
 40

	)

43 
	#__PTHREAD_ONCE_SIZE__
 8

	)

44 
	#__PTHREAD_RWLOCK_SIZE__
 192

	)

45 
	#__PTHREAD_RWLOCKATTR_SIZE__
 16

	)

47 
	#__PTHREAD_SIZE__
 596

	)

48 
	#__PTHREAD_ATTR_SIZE__
 36

	)

49 
	#__PTHREAD_MUTEXATTR_SIZE__
 8

	)

50 
	#__PTHREAD_MUTEX_SIZE__
 40

	)

51 
	#__PTHREAD_CONDATTR_SIZE__
 4

	)

52 
	#__PTHREAD_COND_SIZE__
 24

	)

53 
	#__PTHREAD_ONCE_SIZE__
 4

	)

54 
	#__PTHREAD_RWLOCK_SIZE__
 124

	)

55 
	#__PTHREAD_RWLOCKATTR_SIZE__
 12

	)

58 
	s__d¨wö_±hªad_h™dÀr_ªc


60 (*
	m__routöe
)(*);

61 *
	m__¨g
;

62 
__d¨wö_±hªad_h™dÀr_ªc
 *
	m__√xt
;

64 
	s_›aque_±hªad_©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_ATTR_SIZE__
]; };

65 
	s_›aque_±hªad_c⁄d_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_COND_SIZE__
]; };

66 
	s_›aque_±hªad_c⁄d©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_CONDATTR_SIZE__
]; };

67 
	s_›aque_±hªad_muãx_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_MUTEX_SIZE__
]; };

68 
	s_›aque_±hªad_muãx©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_MUTEXATTR_SIZE__
]; };

69 
	s_›aque_±hªad_⁄˚_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_ONCE_SIZE__
]; };

70 
	s_›aque_±hªad_rwlock_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_RWLOCK_SIZE__
]; };

71 
	s_›aque_±hªad_rwlock©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_RWLOCKATTR_SIZE__
]; };

72 
	s_›aque_±hªad_t
 { 
	m__sig
; 
__d¨wö_±hªad_h™dÀr_ªc
 *
	m__˛ónup_°ack
; 
	m__›aque
[
__PTHREAD_SIZE__
]; };

80 #ifde‡
__˝lu•lus


81 #ifde‡
__GNUG__


82 
	#__DARWIN_NULL
 
__nuŒ


	)

84 #ifde‡
__LP64__


85 
	#__DARWIN_NULL
 (0L)

	)

87 
	#__DARWIN_NULL
 0

	)

91 
	#__DARWIN_NULL
 ((*)0)

	)

94 
__öt64_t
 
	t__d¨wö_blk˙t_t
;

95 
__öt32_t
 
	t__d¨wö_blksize_t
;

96 
__öt32_t
 
	t__d¨wö_dev_t
;

97 
	t__d¨wö_fsblk˙t_t
;

98 
	t__d¨wö_fsfû˙t_t
;

99 
__uöt32_t
 
	t__d¨wö_gid_t
;

100 
__uöt32_t
 
	t__d¨wö_id_t
;

101 
__uöt64_t
 
	t__d¨wö_öo64_t
;

102 #i‡
__DARWIN_64_BIT_INO_T


103 
__d¨wö_öo64_t
 
	t__d¨wö_öo_t
;

105 
__uöt32_t
 
	t__d¨wö_öo_t
;

107 
__d¨wö_«tuøl_t
 
	t__d¨wö_mach_p‹t_«me_t
;

108 
__d¨wö_mach_p‹t_«me_t
 
	t__d¨wö_mach_p‹t_t
;

109 
__uöt16_t
 
	t__d¨wö_mode_t
;

110 
__öt64_t
 
	t__d¨wö_off_t
;

111 
__öt32_t
 
	t__d¨wö_pid_t
;

112 
_›aque_±hªad_©å_t


113 
	t__d¨wö_±hªad_©å_t
;

114 
_›aque_±hªad_c⁄d_t


115 
	t__d¨wö_±hªad_c⁄d_t
;

116 
_›aque_±hªad_c⁄d©å_t


117 
	t__d¨wö_±hªad_c⁄d©å_t
;

118 
	t__d¨wö_±hªad_key_t
;

119 
_›aque_±hªad_muãx_t


120 
	t__d¨wö_±hªad_muãx_t
;

121 
_›aque_±hªad_muãx©å_t


122 
	t__d¨wö_±hªad_muãx©å_t
;

123 
_›aque_±hªad_⁄˚_t


124 
	t__d¨wö_±hªad_⁄˚_t
;

125 
_›aque_±hªad_rwlock_t


126 
	t__d¨wö_±hªad_rwlock_t
;

127 
_›aque_±hªad_rwlock©å_t


128 
	t__d¨wö_±hªad_rwlock©å_t
;

129 
_›aque_±hªad_t


130 *
	t__d¨wö_±hªad_t
;

131 
__uöt32_t
 
	t__d¨wö_sig£t_t
;

132 
__öt32_t
 
	t__d¨wö_su£c⁄ds_t
;

133 
__uöt32_t
 
	t__d¨wö_uid_t
;

134 
__uöt32_t
 
	t__d¨wö_u£c⁄ds_t
;

135 
	t__d¨wö_uuid_t
[16];

136 
	t__d¨wö_uuid_°rög_t
[37];

	@/usr/include/sys/appleapiopts.h

29 #i‚de‡
__SYS_APPLEAPIOPTS_H__


30 
	#__SYS_APPLEAPIOPTS_H__


	)

33 #i‚de‡
__APPLE_API_STANDARD


34 
	#__APPLE_API_STANDARD


	)

37 #i‚de‡
__APPLE_API_STABLE


38 
	#__APPLE_API_STABLE


	)

41 #i‚de‡
__APPLE_API_STRICT_CONFORMANCE


43 #i‚de‡
__APPLE_API_EVOLVING


44 
	#__APPLE_API_EVOLVING


	)

47 #i‚de‡
__APPLE_API_UNSTABLE


48 
	#__APPLE_API_UNSTABLE


	)

51 #i‚de‡
__APPLE_API_PRIVATE


52 
	#__APPLE_API_PRIVATE


	)

55 #i‚de‡
__APPLE_API_OBSOLETE


56 
	#__APPLE_API_OBSOLETE


	)

	@/usr/include/sys/cdefs.h

67 #i‚def 
_CDEFS_H_


68 
	#_CDEFS_H_


	)

70 #i‡
deföed
(
__˝lu•lus
)

71 
	#__BEGIN_DECLS
 "C" {

	)

72 
	#__END_DECLS
 }

	)

74 
	#__BEGIN_DECLS


	)

75 
	#__END_DECLS


	)

85 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

86 
	#__P
(
¥Ÿos
Ë¥Ÿo†

	)

87 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

88 
	#__STRING
(
x
Ë#x

	)

90 
	#__c⁄°
 c⁄°

	)

91 
	#__sig√d
 sig√d

	)

92 
	#__vﬁ©ûe
 vﬁ©ûe

	)

93 #i‡
deföed
(
__˝lu•lus
)

94 
	#__ölöe
 
ölöe


	)

96 #i‚de‡
__GNUC__


97 
	#__ölöe


	)

102 
	#__P
(
¥Ÿos
Ë(Ë

	)

103 
	#__CONCAT
(
x
,
y
Ëx 
	)
y

104 
	#__STRING
(
x
Ë"x"

	)

106 #i‚de‡
__GNUC__


107 
	#__c⁄°


	)

108 
	#__ölöe


	)

109 
	#__sig√d


	)

110 
	#__vﬁ©ûe


	)

121 #i‚def 
NO_ANSI_KEYWORDS


122 c⁄° 
__c⁄°


	)

123 
	#ölöe
 
__ölöe


	)

124 sig√d 
__sig√d


	)

125 vﬁ©ûê
__vﬁ©ûe


	)

137 #i‡
deföed
(
__MWERKS__
) && (__MWERKS__ > 0x2400)

139 #ñi‡
__GNUC__
 > 2 || __GNUC__ =2 && 
__GNUC_MINOR__
 >= 5

140 
	#__dód2
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

141 
	#__puª2
 
	`__©åibuã__
((
__c⁄°__
))

	)

142 #i‡
__GNUC__
 =2 && 
__GNUC_MINOR__
 >= 5 && __GNUC_MINOR__ < 7

143 
	#__unu£d


	)

145 
	#__unu£d
 
	`__©åibuã__
((
__unu£d__
))

	)

148 
	#__©åibuã__
(
x
Ë

	)

149 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

151 
	#__dód
 
__vﬁ©ûe


	)

152 
	#__puª
 
__c⁄°


	)

157 #i‚de‡
__dód


158 
	#__dód


	)

159 
	#__puª


	)

161 #i‚de‡
__dód2


162 
	#__dód2


	)

163 
	#__puª2


	)

164 
	#__unu£d


	)

173 #i‡!(
__GNUC__
 =2 && 
__GNUC_MINOR__
 == 95)

174 #i‡
__STDC_VERSION__
 < 199901

175 
	#__ª°ri˘


	)

177 
	#__ª°ri˘
 
ª°ri˘


	)

189 #i‡
__GNUC__
 > 2 || __GNUC__ =2 && 
__GNUC_MINOR__
 >= 7

190 
	#__¥ötÊike
(
fmèrg
, 
fú°v¨¨g
) \

191 
	`__©åibuã__
((
	`__f‹m©__
 (
__¥ötf__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

192 
	#__sˇnÊike
(
fmèrg
, 
fú°v¨¨g
) \

193 
	`__©åibuã__
((
	`__f‹m©__
 (
__sˇnf__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

195 
	#__¥ötÊike
(
fmèrg
, 
fú°v¨¨g
)

	)

196 
	#__sˇnÊike
(
fmèrg
, 
fú°v¨¨g
)

	)

199 
	#__IDSTRING
(
«me
,
°rög
Ëc⁄° «me[] 
__unu£d
 = 
	)
string

201 #i‚de‡
__COPYRIGHT


202 
	#__COPYRIGHT
(
s
Ë
	`__IDSTRING
(
c›yright
,s)

	)

205 #i‚de‡
__RCSID


206 
	#__RCSID
(
s
Ë
	`__IDSTRING
(
rcsid
,s)

	)

209 #i‚de‡
__SCCSID


210 
	#__SCCSID
(
s
Ë
	`__IDSTRING
(
sccsid
,s)

	)

213 #i‚de‡
__PROJECT_VERSION


214 
	#__PROJECT_VERSION
(
s
Ë
	`__IDSTRING
(
¥oje˘_vîsi⁄
,s)

	)

256 
	#__DARWIN_ONLY_64_BIT_INO_T
 0

	)

258 
	#__DARWIN_ONLY_VERS_1050
 0

	)

278 #i‡!
deföed
(
__DARWIN_ONLY_UNIX_CONFORMANCE
)

279 #i‡
deföed
(
__LP64__
)

280 
	#__DARWIN_ONLY_UNIX_CONFORMANCE
 1

	)

282 
	#__DARWIN_ONLY_UNIX_CONFORMANCE
 0

	)

286 #i‡!
deföed
(
__DARWIN_UNIX03
)

287 #i‡ 
__DARWIN_ONLY_UNIX_CONFORMANCE


288 #i‡
deföed
(
_NONSTD_SOURCE
)

291 
	#__DARWIN_UNIX03
 1

	)

292 #ñi‡
deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_XOPEN_SOURCE
Ë|| deföed(
_POSIX_C_SOURCE
)

293 #i‡
deföed
(
_NONSTD_SOURCE
)

296 
	#__DARWIN_UNIX03
 1

	)

297 #ñi‡
deföed
(
_NONSTD_SOURCE
)

298 
	#__DARWIN_UNIX03
 0

	)

300 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1050)

301 
	#__DARWIN_UNIX03
 0

	)

303 
	#__DARWIN_UNIX03
 1

	)

308 #i‡!
deföed
(
__DARWIN_64_BIT_INO_T
)

309 #i‡ 
deföed
(
_DARWIN_USE_64_BIT_INODE
)

310 #i‡
deföed
(
_DARWIN_NO_64_BIT_INODE
)

313 
	#__DARWIN_64_BIT_INO_T
 1

	)

314 #ñi‡
deföed
(
_DARWIN_NO_64_BIT_INODE
)

315 #i‡
__DARWIN_ONLY_64_BIT_INO_T


318 
	#__DARWIN_64_BIT_INO_T
 0

	)

320 #i‡
__DARWIN_ONLY_64_BIT_INO_T


321 
	#__DARWIN_64_BIT_INO_T
 1

	)

322 #ñi‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
Ë&& ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0Ë< 1060Ë|| 
__DARWIN_UNIX03
 == 0

323 
	#__DARWIN_64_BIT_INO_T
 0

	)

325 
	#__DARWIN_64_BIT_INO_T
 1

	)

330 #i‡!
deföed
(
__DARWIN_VERS_1050
)

331 #i‡ 
__DARWIN_ONLY_VERS_1050


332 
	#__DARWIN_VERS_1050
 1

	)

333 #ñi‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
Ë&& ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0Ë< 1050Ë|| 
__DARWIN_UNIX03
 == 0

334 
	#__DARWIN_VERS_1050
 0

	)

336 
	#__DARWIN_VERS_1050
 1

	)

340 #i‡!
deföed
(
__DARWIN_NON_CANCELABLE
)

341 
	#__DARWIN_NON_CANCELABLE
 0

	)

347 #i‡
__DARWIN_UNIX03


348 #i‡
__DARWIN_ONLY_UNIX_CONFORMANCE


349 
	#__DARWIN_SUF_UNIX03


	)

351 
	#__DARWIN_SUF_UNIX03
 "$UNIX2003"

	)

354 #i‡
__DARWIN_64_BIT_INO_T


355 #i‡
__DARWIN_ONLY_64_BIT_INO_T


356 
	#__DARWIN_SUF_64_BIT_INO_T


	)

358 
	#__DARWIN_SUF_64_BIT_INO_T
 "$INODE64"

	)

361 
	#__DARWIN_SUF_64_BIT_INO_T


	)

364 #i‡
__DARWIN_VERS_1050


365 #i‡
__DARWIN_ONLY_VERS_1050


366 
	#__DARWIN_SUF_1050


	)

368 
	#__DARWIN_SUF_1050
 "$1050"

	)

371 
	#__DARWIN_SUF_1050


	)

374 #i‡
__DARWIN_NON_CANCELABLE


375 
	#__DARWIN_SUF_NON_CANCELABLE
 "$NOCANCEL"

	)

377 
	#__DARWIN_SUF_NON_CANCELABLE


	)

381 
	#__DARWIN_SUF_UNIX03


	)

382 
	#__DARWIN_SUF_64_BIT_INO_T


	)

383 
	#__DARWIN_SUF_NON_CANCELABLE


	)

384 
	#__DARWIN_SUF_1050


	)

387 
	#__DARWIN_SUF_EXTSN
 "$DARWIN_EXTSN"

	)

392 
	#__DARWIN_ALIAS
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_UNIX03
)

	)

393 
	#__DARWIN_ALIAS_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_NON_CANCELABLE
 
__DARWIN_SUF_UNIX03
)

	)

394 
	#__DARWIN_ALIAS_I
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_64_BIT_INO_T
 
__DARWIN_SUF_UNIX03
)

	)

395 
	#__DARWIN_INODE64
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_64_BIT_INO_T
)

	)

397 
	#__DARWIN_1050
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
)

	)

398 
	#__DARWIN_1050ALIAS
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_UNIX03
)

	)

399 
	#__DARWIN_1050ALIAS_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_NON_CANCELABLE
 
__DARWIN_SUF_UNIX03
)

	)

400 
	#__DARWIN_1050ALIAS_I
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_64_BIT_INO_T
 
__DARWIN_SUF_UNIX03
)

	)

401 
	#__DARWIN_1050INODE64
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_64_BIT_INO_T
)

	)

403 
	#__DARWIN_EXTSN
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_EXTSN
)

	)

404 
	#__DARWIN_EXTSN_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_EXTSN
 
__DARWIN_SUF_NON_CANCELABLE
)

	)

409 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1060)

410 #unde‡
__DARWIN_10_6_AND_LATER


411 
	#__DARWIN_10_6_AND_LATER_ALIAS
(
x
Ë

	)

413 
	#__DARWIN_10_6_AND_LATER


	)

414 
	#__DARWIN_10_6_AND_LATER_ALIAS
(
x
Ë
	)
x

438 #i‡
deföed
(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE == 1L

439 #unde‡
_POSIX_C_SOURCE


440 
	#_POSIX_C_SOURCE
 199009L

	)

444 #i‡
deföed
(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE == 2L

445 #unde‡
_POSIX_C_SOURCE


446 
	#_POSIX_C_SOURCE
 199209L

	)

450 #ifde‡
_XOPEN_SOURCE


451 #i‡
_XOPEN_SOURCE
 - 0L >= 600L

452 #unde‡
_POSIX_C_SOURCE


453 
	#_POSIX_C_SOURCE
 200112L

	)

454 #ñi‡
_XOPEN_SOURCE
 - 0L >= 500L

455 #unde‡
_POSIX_C_SOURCE


456 
	#_POSIX_C_SOURCE
 199506L

	)

464 #i‡
deföed
(
_POSIX_SOURCE
Ë&& !deföed(
_POSIX_C_SOURCE
)

465 
	#_POSIX_C_SOURCE
 198808L

	)

473 
	#__DARWIN_NO_LONG_LONG
 (
	`deföed
(
__STRICT_ANSI__
) \

474 && (
__STDC_VERSION__
-0 < 199901L) \

475 && !
	`deföed
(
__GNUG__
))

	)

483 #i‡
deföed
(
__¨m__
)

484 
	#__DARWIN_LDBL_COMPAT
(
x
Ë

	)

485 
	#__DARWIN_LDBL_COMPAT2
(
x
Ë

	)

486 
	#__DARWIN_LONG_DOUBLE_IS_DOUBLE
 1

	)

487 #ñi‡
deföed
(
__µc__
)

488 #i‡
deföed
(
__LDBL_MANT_DIG__
Ë&& deföed(
__DBL_MANT_DIG__
) && \

489 
__LDBL_MANT_DIG__
 > 
__DBL_MANT_DIG__


490 #i‡
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
-0 < 1040

491 
	#__DARWIN_LDBL_COMPAT
(
x
Ë
	`__asm
("_" 
	`__STRING
(xË"$LDBLStub")

	)

493 
	#__DARWIN_LDBL_COMPAT
(
x
Ë
	`__asm
("_" 
	`__STRING
(xË"$LDBL128")

	)

495 
	#__DARWIN_LDBL_COMPAT2
(
x
Ë
	`__asm
("_" 
	`__STRING
(xË"$LDBL128")

	)

496 
	#__DARWIN_LONG_DOUBLE_IS_DOUBLE
 0

	)

498 
	#__DARWIN_LDBL_COMPAT
(
x
Ë

	)

499 
	#__DARWIN_LDBL_COMPAT2
(
x
Ë

	)

500 
	#__DARWIN_LONG_DOUBLE_IS_DOUBLE
 1

	)

502 #ñi‡
deföed
(
__i386__
Ë|| deföed(
__µc64__
Ë|| deföed(
__x86_64__
)

503 
	#__DARWIN_LDBL_COMPAT
(
x
Ë

	)

504 
	#__DARWIN_LDBL_COMPAT2
(
x
Ë

	)

505 
	#__DARWIN_LONG_DOUBLE_IS_DOUBLE
 0

	)

507 #îr‹ 
Unknown
 
¨chôe˘uª


513 #i‡
__GNUC__
 >= 3

514 
	#__dïªˇãd
 
	`__©åibuã__
((
dïªˇãd
))

	)

516 
	#__dïªˇãd


	)

527 #i‡
__DARWIN_64_BIT_INO_T


528 
	#_DARWIN_FEATURE_64_BIT_INODE
 1

	)

535 #i‡
__DARWIN_LONG_DOUBLE_IS_DOUBLE


536 
	#_DARWIN_FEATURE_LONG_DOUBLE_IS_DOUBLE
 1

	)

545 #i‡
__DARWIN_ONLY_64_BIT_INO_T


546 
	#_DARWIN_FEATURE_ONLY_64_BIT_INODE
 1

	)

553 #i‡
__DARWIN_ONLY_VERS_1050


554 
	#_DARWIN_FEATURE_ONLY_VERS_1050
 1

	)

561 #i‡
__DARWIN_ONLY_UNIX_CONFORMANCE


562 
	#_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE
 1

	)

569 #i‡
__DARWIN_UNIX03


570 
	#_DARWIN_FEATURE_UNIX_CONFORMANCE
 3

	)

579 #i‚de‡
__CAST_AWAY_QUALIFIER


580 
	#__CAST_AWAY_QUALIFIER
(
v¨übÀ
, 
quÆifõr
, 
ty≥
Ë—y≥Ë((*)0 + ((quÆifõ∏*)(v¨übÀË- (quÆifõ∏*)0Ë)

	)

	@/usr/include/sys/errno.h

69 #i‚def 
_SYS_ERRNO_H_


70 
	#_SYS_ERRNO_H_


	)

72 
	~<sys/cdefs.h
>

73 
__BEGIN_DECLS


74 * 
__îr‹
();

75 
	#î∫o
 (*
	`__îr‹
())

	)

76 
	g__END_DECLS


82 
	#EPERM
 1

	)

83 
	#ENOENT
 2

	)

84 
	#ESRCH
 3

	)

85 
	#EINTR
 4

	)

86 
	#EIO
 5

	)

87 
	#ENXIO
 6

	)

88 
	#E2BIG
 7

	)

89 
	#ENOEXEC
 8

	)

90 
	#EBADF
 9

	)

91 
	#ECHILD
 10

	)

92 
	#EDEADLK
 11

	)

94 
	#ENOMEM
 12

	)

95 
	#EACCES
 13

	)

96 
	#EFAULT
 14

	)

97 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

98 
	#ENOTBLK
 15

	)

100 
	#EBUSY
 16

	)

101 
	#EEXIST
 17

	)

102 
	#EXDEV
 18

	)

103 
	#ENODEV
 19

	)

104 
	#ENOTDIR
 20

	)

105 
	#EISDIR
 21

	)

106 
	#EINVAL
 22

	)

107 
	#ENFILE
 23

	)

108 
	#EMFILE
 24

	)

109 
	#ENOTTY
 25

	)

110 
	#ETXTBSY
 26

	)

111 
	#EFBIG
 27

	)

112 
	#ENOSPC
 28

	)

113 
	#ESPIPE
 29

	)

114 
	#EROFS
 30

	)

115 
	#EMLINK
 31

	)

116 
	#EPIPE
 32

	)

119 
	#EDOM
 33

	)

120 
	#ERANGE
 34

	)

123 
	#EAGAIN
 35

	)

124 
	#EWOULDBLOCK
 
EAGAIN


	)

125 
	#EINPROGRESS
 36

	)

126 
	#EALREADY
 37

	)

129 
	#ENOTSOCK
 38

	)

130 
	#EDESTADDRREQ
 39

	)

131 
	#EMSGSIZE
 40

	)

132 
	#EPROTOTYPE
 41

	)

133 
	#ENOPROTOOPT
 42

	)

134 
	#EPROTONOSUPPORT
 43

	)

135 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

136 
	#ESOCKTNOSUPPORT
 44

	)

138 
	#ENOTSUP
 45

	)

139 #i‡!
__DARWIN_UNIX03
 && !
deföed
(
KERNEL
)

148 
	#EOPNOTSUPP
 
ENOTSUP


	)

151 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

152 
	#EPFNOSUPPORT
 46

	)

154 
	#EAFNOSUPPORT
 47

	)

155 
	#EADDRINUSE
 48

	)

156 
	#EADDRNOTAVAIL
 49

	)

159 
	#ENETDOWN
 50

	)

160 
	#ENETUNREACH
 51

	)

161 
	#ENETRESET
 52

	)

162 
	#ECONNABORTED
 53

	)

163 
	#ECONNRESET
 54

	)

164 
	#ENOBUFS
 55

	)

165 
	#EISCONN
 56

	)

166 
	#ENOTCONN
 57

	)

167 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

168 
	#ESHUTDOWN
 58

	)

169 
	#ETOOMANYREFS
 59

	)

171 
	#ETIMEDOUT
 60

	)

172 
	#ECONNREFUSED
 61

	)

174 
	#ELOOP
 62

	)

175 
	#ENAMETOOLONG
 63

	)

178 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

179 
	#EHOSTDOWN
 64

	)

181 
	#EHOSTUNREACH
 65

	)

182 
	#ENOTEMPTY
 66

	)

185 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

186 
	#EPROCLIM
 67

	)

187 
	#EUSERS
 68

	)

189 
	#EDQUOT
 69

	)

192 
	#ESTALE
 70

	)

193 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

194 
	#EREMOTE
 71

	)

195 
	#EBADRPC
 72

	)

196 
	#ERPCMISMATCH
 73

	)

197 
	#EPROGUNAVAIL
 74

	)

198 
	#EPROGMISMATCH
 75

	)

199 
	#EPROCUNAVAIL
 76

	)

202 
	#ENOLCK
 77

	)

203 
	#ENOSYS
 78

	)

205 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

206 
	#EFTYPE
 79

	)

207 
	#EAUTH
 80

	)

208 
	#ENEEDAUTH
 81

	)

211 
	#EPWROFF
 82

	)

212 
	#EDEVERR
 83

	)

215 
	#EOVERFLOW
 84

	)

218 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

219 
	#EBADEXEC
 85

	)

220 
	#EBADARCH
 86

	)

221 
	#ESHLIBVERS
 87

	)

222 
	#EBADMACHO
 88

	)

225 
	#ECANCELED
 89

	)

227 
	#EIDRM
 90

	)

228 
	#ENOMSG
 91

	)

229 
	#EILSEQ
 92

	)

230 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

231 
	#ENOATTR
 93

	)

234 
	#EBADMSG
 94

	)

235 
	#EMULTIHOP
 95

	)

236 
	#ENODATA
 96

	)

237 
	#ENOLINK
 97

	)

238 
	#ENOSR
 98

	)

239 
	#ENOSTR
 99

	)

240 
	#EPROTO
 100

	)

241 
	#ETIME
 101

	)

243 #i‡
__DARWIN_UNIX03
 || 
deföed
(
KERNEL
)

245 
	#EOPNOTSUPP
 102

	)

248 
	#ENOPOLICY
 103

	)

250 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

251 
	#ELAST
 103

	)

	@/usr/include/sys/fcntl.h

70 #i‚de‡
_SYS_FCNTL_H_


71 
	#_SYS_FCNTL_H_


	)

78 
	~<sys/_ty≥s.h
>

79 
	~<sys/cdefs.h
>

82 #i‚de‡
_SIZE_T


83 
	#_SIZE_T


	)

84 
__d¨wö_size_t
 
	tsize_t
;

87 #i‚def 
_MODE_T


88 
__d¨wö_mode_t
 
	tmode_t
;

89 
	#_MODE_T


	)

92 #i‚de‡
_OFF_T


93 
__d¨wö_off_t
 
	toff_t
;

94 
	#_OFF_T


	)

97 #i‚de‡
_PID_T


98 
__d¨wö_pid_t
 
	tpid_t
;

99 
	#_PID_T


	)

110 
	#O_RDONLY
 0x0000

	)

111 
	#O_WRONLY
 0x0001

	)

112 
	#O_RDWR
 0x0002

	)

113 
	#O_ACCMODE
 0x0003

	)

123 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

124 
	#FREAD
 0x0001

	)

125 
	#FWRITE
 0x0002

	)

127 
	#O_NONBLOCK
 0x0004

	)

128 
	#O_APPEND
 0x0008

	)

129 #i‚de‡
O_SYNC


130 
	#O_SYNC
 0x0080

	)

132 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

133 
	#O_SHLOCK
 0x0010

	)

134 
	#O_EXLOCK
 0x0020

	)

135 
	#O_ASYNC
 0x0040

	)

136 
	#O_FSYNC
 
O_SYNC


	)

137 
	#O_NOFOLLOW
 0x0100

	)

139 
	#O_CREAT
 0x0200

	)

140 
	#O_TRUNC
 0x0400

	)

141 
	#O_EXCL
 0x0800

	)

142 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

143 
	#O_EVTONLY
 0x8000

	)

147 
	#O_NOCTTY
 0x20000

	)

150 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

151 
	#O_DIRECTORY
 0x100000

	)

152 
	#O_SYMLINK
 0x200000

	)

155 #i‚de‡
O_DSYNC


156 
	#O_DSYNC
 0x400000

	)

165 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

166 
	#FAPPEND
 
O_APPEND


	)

167 
	#FASYNC
 
O_ASYNC


	)

168 
	#FFSYNC
 
O_FSYNC


	)

169 
	#FFDSYNC
 
O_DSYNC


	)

170 
	#FNONBLOCK
 
O_NONBLOCK


	)

171 
	#FNDELAY
 
O_NONBLOCK


	)

172 
	#O_NDELAY
 
O_NONBLOCK


	)

179 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

180 
	#CPF_OVERWRITE
 1

	)

181 
	#CPF_IGNORE_MODE
 2

	)

182 
	#CPF_MASK
 (
CPF_OVERWRITE
|
CPF_IGNORE_MODE
)

	)

190 
	#F_DUPFD
 0

	)

191 
	#F_GETFD
 1

	)

192 
	#F_SETFD
 2

	)

193 
	#F_GETFL
 3

	)

194 
	#F_SETFL
 4

	)

195 
	#F_GETOWN
 5

	)

196 
	#F_SETOWN
 6

	)

197 
	#F_GETLK
 7

	)

198 
	#F_SETLK
 8

	)

199 
	#F_SETLKW
 9

	)

200 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

201 
	#F_CHKCLEAN
 41

	)

202 
	#F_PREALLOCATE
 42

	)

203 
	#F_SETSIZE
 43

	)

204 
	#F_RDADVISE
 44

	)

205 
	#F_RDAHEAD
 45

	)

206 
	#F_READBOOTSTRAP
 46

	)

207 
	#F_WRITEBOOTSTRAP
 47

	)

208 
	#F_NOCACHE
 48

	)

209 
	#F_LOG2PHYS
 49

	)

210 
	#F_GETPATH
 50

	)

211 
	#F_FULLFSYNC
 51

	)

212 
	#F_PATHPKG_CHECK
 52

	)

213 
	#F_FREEZE_FS
 53

	)

214 
	#F_THAW_FS
 54

	)

215 
	#F_GLOBAL_NOCACHE
 55

	)

218 
	#F_ADDSIGS
 59

	)

220 
	#F_MARKDEPENDENCY
 60

	)

222 
	#F_ADDFILESIGS
 61

	)

224 
	#F_GETPROTECTIONCLASS
 62

	)

225 
	#F_SETPROTECTIONCLASS
 63

	)

228 
	#FCNTL_FS_SPECIFIC_BASE
 0x00010000

	)

233 
	#FD_CLOEXEC
 1

	)

236 
	#F_RDLCK
 1

	)

237 
	#F_UNLCK
 2

	)

238 
	#F_WRLCK
 3

	)

244 #i‚de‡
SEEK_SET


245 
	#SEEK_SET
 0

	)

246 
	#SEEK_CUR
 1

	)

247 
	#SEEK_END
 2

	)

254 #i‚de‡
S_IFMT


256 
	#S_IFMT
 0170000

	)

257 
	#S_IFIFO
 0010000

	)

258 
	#S_IFCHR
 0020000

	)

259 
	#S_IFDIR
 0040000

	)

260 
	#S_IFBLK
 0060000

	)

261 
	#S_IFREG
 0100000

	)

262 
	#S_IFLNK
 0120000

	)

263 
	#S_IFSOCK
 0140000

	)

264 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

265 
	#S_IFWHT
 0160000

	)

270 
	#S_IRWXU
 0000700

	)

271 
	#S_IRUSR
 0000400

	)

272 
	#S_IWUSR
 0000200

	)

273 
	#S_IXUSR
 0000100

	)

275 
	#S_IRWXG
 0000070

	)

276 
	#S_IRGRP
 0000040

	)

277 
	#S_IWGRP
 0000020

	)

278 
	#S_IXGRP
 0000010

	)

280 
	#S_IRWXO
 0000007

	)

281 
	#S_IROTH
 0000004

	)

282 
	#S_IWOTH
 0000002

	)

283 
	#S_IXOTH
 0000001

	)

285 
	#S_ISUID
 0004000

	)

286 
	#S_ISGID
 0002000

	)

287 
	#S_ISVTX
 0001000

	)

289 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

290 
	#S_ISTXT
 
S_ISVTX


	)

291 
	#S_IREAD
 
S_IRUSR


	)

292 
	#S_IWRITE
 
S_IWUSR


	)

293 
	#S_IEXEC
 
S_IXUSR


	)

297 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

300 
	#F_ALLOCATECONTIG
 0x00000002

	)

301 
	#F_ALLOCATEALL
 0x00000004

	)

305 
	#F_PEOFPOSMODE
 3

	)

307 
	#F_VOLPOSMODE
 4

	)

314 
	sÊock
 {

315 
off_t
 
	ml_°¨t
;

316 
off_t
 
	ml_Àn
;

317 
pid_t
 
	ml_pid
;

318 
	ml_ty≥
;

319 
	ml_whí˚
;

323 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

330 
	sødvis‹y
 {

331 
off_t
 
	mø_off£t
;

332 
	mø_cou¡
;

342 
	sfsig«tuªs
 {

343 
off_t
 
	mfs_fûe_°¨t
;

344 *
	mfs_blob_°¨t
;

345 
size_t
 
	mfs_blob_size
;

346 } 
	tfsig«tuªs_t
;

349 
	#LOCK_SH
 0x01

	)

350 
	#LOCK_EX
 0x02

	)

351 
	#LOCK_NB
 0x04

	)

352 
	#LOCK_UN
 0x08

	)

356 
	sf°‹e
 {

357 
	mf°_Êags
;

358 
	mf°_posmode
;

359 
off_t
 
	mf°_off£t
;

360 
off_t
 
	mf°_Àngth
;

361 
off_t
 
	mf°_byãßŒoc
;

362 } 
	tf°‹e_t
;

366 
	sfboŸ°ø±øns„r
 {

367 
off_t
 
	mfbt_off£t
;

368 
size_t
 
	mfbt_Àngth
;

369 *
	mfbt_buf„r
;

370 } 
	tfboŸ°ø±øns„r_t
;

389 #¥agm®
∑ck
(4)

391 
	slog2phys
 {

392 
	ml2p_Êags
;

393 
off_t
 
	ml2p_c⁄tigbyãs
;

394 
off_t
 
	ml2p_devoff£t
;

397 #¥agm®
∑ck
()

399 
	#O_POPUP
 0x80000000

	)

400 
	#O_ALERT
 0x20000000

	)

406 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

407 #i‚de‡
_FILESEC_T


408 
	g_fûe£c
;

409 
_fûe£c
 *
	tfûe£c_t
;

410 
	#_FILESEC_T


	)

413 
	mFILESEC_OWNER
 = 1,

414 
	mFILESEC_GROUP
 = 2,

415 
	mFILESEC_UUID
 = 3,

416 
	mFILESEC_MODE
 = 4,

417 
	mFILESEC_ACL
 = 5,

418 
	mFILESEC_GRPUUID
 = 6,

421 
	mFILESEC_ACL_RAW
 = 100,

422 
	mFILESEC_ACL_ALLOCSIZE
 = 101

423 } 
	tfûe£c_¥›îty_t
;

426 
	#FILESEC_GUID
 
FILESEC_UUID


	)

429 
__BEGIN_DECLS


430 
	$›í
(c⁄° *, , ...Ë
	`__DARWIN_ALIAS_C
(
›í
);

431 
	$¸ót
(c⁄° *, 
mode_t
Ë
	`__DARWIN_ALIAS_C
(
¸ót
);

432 
	$f˙é
(, , ...Ë
	`__DARWIN_ALIAS_C
(
f˙é
);

433 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

435 
	`›íx_≈
(c⁄° *, , 
fûe£c_t
);

436 
	`Êock
(, );

437 
fûe£c_t
 
	`fûe£c_öô
();

438 
fûe£c_t
 
	`fûe£c_dup
(filesec_t);

439 
	`fûe£c_‰ì
(
fûe£c_t
);

440 
	`fûe£c_gë_¥›îty
(
fûe£c_t
, 
fûe£c_¥›îty_t
, *);

441 
	`fûe£c_quîy_¥›îty
(
fûe£c_t
, 
fûe£c_¥›îty_t
, *);

442 
	`fûe£c_£t_¥›îty
(
fûe£c_t
, 
fûe£c_¥›îty_t
, const *);

443 
	`fûe£c_un£t_¥›îty
(
fûe£c_t
, 
fûe£c_¥›îty_t
);

444 
	#_FILESEC_UNSET_PROPERTY
 ((*)0)

	)

445 
	#_FILESEC_REMOVE_ACL
 ((*)1)

	)

447 
__END_DECLS


	@/usr/include/sys/poll.h

57 #i‚de‡
_SYS_POLL_H_


58 
	#_SYS_POLL_H_


	)

68 
	#POLLIN
 0x0001

	)

69 
	#POLLPRI
 0x0002

	)

70 
	#POLLOUT
 0x0004

	)

71 
	#POLLRDNORM
 0x0040

	)

72 
	#POLLWRNORM
 
POLLOUT


	)

73 
	#POLLRDBAND
 0x0080

	)

74 
	#POLLWRBAND
 0x0100

	)

80 
	#POLLEXTEND
 0x0200

	)

81 
	#POLLATTRIB
 0x0400

	)

82 
	#POLLNLINK
 0x0800

	)

83 
	#POLLWRITE
 0x1000

	)

89 
	#POLLERR
 0x0008

	)

90 
	#POLLHUP
 0x0010

	)

91 
	#POLLNVAL
 0x0020

	)

93 
	#POLLSTANDARD
 (
POLLIN
|
POLLPRI
|
POLLOUT
|
POLLRDNORM
|
POLLRDBAND
|\

94 
POLLWRBAND
|
POLLERR
|
POLLHUP
|
POLLNVAL
)

	)

96 
	spﬁlfd


98 
	mfd
;

99 
	mevíts
;

100 
	mªvíts
;

103 
	tnfds_t
;

106 
	~<sys/cdefs.h
>

108 
__BEGIN_DECLS


114 
	$pﬁl
 (
pﬁlfd
 *, 
nfds_t
, Ë
	`__DARWIN_ALIAS_C
(
pﬁl
);

116 
__END_DECLS


	@/usr/include/sys/select.h

63 #i‚de‡
_SYS_SELECT_H_


64 
	#_SYS_SELECT_H_


	)

66 
	~<sys/≠∂ópi›ts.h
>

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

75 
	#__√ed_fd_£t


	)

76 
	#__√ed_°ru˘_time•ec


	)

77 
	#__√ed_°ru˘_timevÆ


	)

78 
	~<sys/_°ru˘s.h
>

85 #i‚def 
_TIME_T


86 
	#_TIME_T


	)

87 
__d¨wö_time_t
 
	ttime_t
;

90 #i‚de‡
_SUSECONDS_T


91 
	#_SUSECONDS_T


	)

92 
__d¨wö_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

95 #i‚de‡
_SIGSET_T


96 
	#_SIGSET_T


	)

97 
__d¨wö_sig£t_t
 
	tsig£t_t
;

112 #i‚def 
FD_SETSIZE


113 
	#FD_SETSIZE
 
__DARWIN_FD_SETSIZE


	)

115 #i‚de‡
FD_SET


116 
	#FD_SET
(
n
, 
p
Ë
	`__DARWIN_FD_SET
“,Ö)

	)

118 #i‚de‡
FD_CLR


119 
	#FD_CLR
(
n
, 
p
Ë
	`__DARWIN_FD_CLR
“,Ö)

	)

121 #i‚de‡
FD_ISSET


122 
	#FD_ISSET
(
n
, 
p
Ë
	`__DARWIN_FD_ISSET
“,Ö)

	)

124 #i‚de‡
FD_ZERO


125 
	#FD_ZERO
(
p
Ë
	`__DARWIN_FD_ZERO
’)

	)

127 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

128 #i‚de‡
FD_COPY


129 
	#FD_COPY
(
f
, 
t
Ë
	`__DARWIN_FD_COPY
(f,Å)

	)

134 
	g__BEGIN_DECLS


136 #i‚de‡ 
__MWERKS__


137 
	$p£À˘
(, 
fd_£t
 * 
__ª°ri˘
, fd_set * __restrict,

138 
fd_£t
 * 
__ª°ri˘
, c⁄° 
time•ec
 * __restrict,

139 c⁄° 
sig£t_t
 * 
__ª°ri˘
)

140 #i‡
	`deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_UNLIMITED_SELECT
)

141 
	$__DARWIN_EXTSN_C
(
p£À˘
)

143 #i‡
	`deföed
(
__LP64__
Ë&& !
__DARWIN_NON_CANCELABLE


144 
	$__DARWIN_1050
(
p£À˘
)

146 
	$__DARWIN_ALIAS_C
(
p£À˘
)

152 
	~<sys/_£À˘.h
>

154 
__END_DECLS


	@/usr/include/sys/signal.h

69 #i‚def 
_SYS_SIGNAL_H_


70 
	#_SYS_SIGNAL_H_


	)

72 
	~<sys/cdefs.h
>

73 
	~<sys/≠∂ópi›ts.h
>

75 
	#__DARWIN_NSIG
 32

	)

77 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

78 
	#NSIG
 
__DARWIN_NSIG


	)

81 
	~<machöe/sig«l.h
>

83 
	#SIGHUP
 1

	)

84 
	#SIGINT
 2

	)

85 
	#SIGQUIT
 3

	)

86 
	#SIGILL
 4

	)

87 
	#SIGTRAP
 5

	)

88 
	#SIGABRT
 6

	)

89 #i‡ (
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
))

90 
	#SIGPOLL
 7

	)

92 
	#SIGIOT
 
SIGABRT


	)

93 
	#SIGEMT
 7

	)

95 
	#SIGFPE
 8

	)

96 
	#SIGKILL
 9

	)

97 
	#SIGBUS
 10

	)

98 
	#SIGSEGV
 11

	)

99 
	#SIGSYS
 12

	)

100 
	#SIGPIPE
 13

	)

101 
	#SIGALRM
 14

	)

102 
	#SIGTERM
 15

	)

103 
	#SIGURG
 16

	)

104 
	#SIGSTOP
 17

	)

105 
	#SIGTSTP
 18

	)

106 
	#SIGCONT
 19

	)

107 
	#SIGCHLD
 20

	)

108 
	#SIGTTIN
 21

	)

109 
	#SIGTTOU
 22

	)

110 #i‡ (!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

111 
	#SIGIO
 23

	)

113 
	#SIGXCPU
 24

	)

114 
	#SIGXFSZ
 25

	)

115 
	#SIGVTALRM
 26

	)

116 
	#SIGPROF
 27

	)

117 #i‡ (!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

118 
	#SIGWINCH
 28

	)

119 
	#SIGINFO
 29

	)

121 
	#SIGUSR1
 30

	)

122 
	#SIGUSR2
 31

	)

124 #i‡
deföed
(
_ANSI_SOURCE
Ë|| 
__DARWIN_UNIX03
 || deföed(
__˝lu•lus
)

130 
	#SIG_DFL
 ((*)())0

	)

131 
	#SIG_IGN
 ((*)())1

	)

132 
	#SIG_HOLD
 ((*)())5

	)

133 
	#SIG_ERR
 (((*)())-1)

	)

136 
	#SIG_DFL
 ((*)–))0

	)

137 
	#SIG_IGN
 ((*)–))1

	)

138 
	#SIG_HOLD
 ((*)–))5

	)

139 
	#SIG_ERR
 (((*)–))-1)

	)

142 #i‚de‡
_ANSI_SOURCE


143 
	~<sys/_ty≥s.h
>

145 
	#__√ed_mc⁄ãxt_t


	)

146 
	#__√ed_°ack_t


	)

147 
	#__√ed_uc⁄ãxt_t


	)

148 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

149 #i‡
deföed
(
__µc__
Ë|| deföed(
__µc64__
)

150 
	#__√ed_mc⁄ãxt64_t


	)

151 
	#__√ed_uc⁄ãxt64_t


	)

154 
	~<sys/_°ru˘s.h
>

156 #i‚de‡
_PID_T


157 
	#_PID_T


	)

158 
__d¨wö_pid_t
 
	tpid_t
;

161 #i‚de‡
_PTHREAD_ATTR_T


162 
	#_PTHREAD_ATTR_T


	)

163 
__d¨wö_±hªad_©å_t
 
	t±hªad_©å_t
;

166 #i‚de‡
_SIGSET_T


167 
	#_SIGSET_T


	)

168 
__d¨wö_sig£t_t
 
	tsig£t_t
;

171 #i‚def 
_SIZE_T


172 
	#_SIZE_T


	)

173 
__d¨wö_size_t
 
	tsize_t
;

176 #i‚de‡
_UID_T


177 
	#_UID_T


	)

178 
__d¨wö_uid_t
 
	tuid_t
;

181 
	usigvÆ
 {

183 
	msivÆ_öt
;

184 *
	msivÆ_±r
;

187 
	#SIGEV_NONE
 0

	)

188 
	#SIGEV_SIGNAL
 1

	)

189 
	#SIGEV_THREAD
 3

	)

191 
	ssigevít
 {

192 
	msigev_nŸify
;

193 
	msigev_signo
;

194 
sigvÆ
 
	msigev_vÆue
;

195 (*
	msigev_nŸify_fun˘i⁄
)(
	msigvÆ
);

196 
±hªad_©å_t
 *
	msigev_nŸify_©åibuãs
;

200 
	s__sigöfo
 {

201 
	msi_signo
;

202 
	msi_î∫o
;

203 
	msi_code
;

204 
pid_t
 
	msi_pid
;

205 
uid_t
 
	msi_uid
;

206 
	msi_°©us
;

207 *
	msi_addr
;

208 
sigvÆ
 
	msi_vÆue
;

209 
	msi_b™d
;

210 
	m__∑d
[7];

211 } 
	tsigöfo_t
;

228 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

229 
	#ILL_NOOP
 0

	)

231 
	#ILL_ILLOPC
 1

	)

232 
	#ILL_ILLTRP
 2

	)

233 
	#ILL_PRVOPC
 3

	)

234 
	#ILL_ILLOPN
 4

	)

235 
	#ILL_ILLADR
 5

	)

236 
	#ILL_PRVREG
 6

	)

237 
	#ILL_COPROC
 7

	)

238 
	#ILL_BADSTK
 8

	)

241 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

242 
	#FPE_NOOP
 0

	)

244 
	#FPE_FLTDIV
 1

	)

245 
	#FPE_FLTOVF
 2

	)

246 
	#FPE_FLTUND
 3

	)

247 
	#FPE_FLTRES
 4

	)

248 
	#FPE_FLTINV
 5

	)

249 
	#FPE_FLTSUB
 6

	)

250 
	#FPE_INTDIV
 7

	)

251 
	#FPE_INTOVF
 8

	)

254 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

255 
	#SEGV_NOOP
 0

	)

257 
	#SEGV_MAPERR
 1

	)

258 
	#SEGV_ACCERR
 2

	)

261 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

262 
	#BUS_NOOP
 0

	)

264 
	#BUS_ADRALN
 1

	)

265 
	#BUS_ADRERR
 2

	)

266 
	#BUS_OBJERR
 3

	)

269 
	#TRAP_BRKPT
 1

	)

270 
	#TRAP_TRACE
 2

	)

273 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

274 
	#CLD_NOOP
 0

	)

276 
	#CLD_EXITED
 1

	)

277 
	#CLD_KILLED
 2

	)

278 
	#CLD_DUMPED
 3

	)

279 
	#CLD_TRAPPED
 4

	)

280 
	#CLD_STOPPED
 5

	)

281 
	#CLD_CONTINUED
 6

	)

284 
	#POLL_IN
 1

	)

285 
	#POLL_OUT
 2

	)

286 
	#POLL_MSG
 3

	)

287 
	#POLL_ERR
 4

	)

288 
	#POLL_PRI
 5

	)

289 
	#POLL_HUP
 6

	)

292 
	u__siga˘i⁄_u
 {

293 (*
	m__ß_h™dÀr
)();

294 (*
	m__ß_siga˘i⁄
)(, 
	m__sigöfo
 *,

299 
	s__siga˘i⁄
 {

300 
__siga˘i⁄_u
 
	m__siga˘i⁄_u
;

301 (*
	mß_åamp
)(*, , , 
	msigöfo_t
 *, *);

302 
sig£t_t
 
	mß_mask
;

303 
	mß_Êags
;

309 
	ssiga˘i⁄
 {

310 
__siga˘i⁄_u
 
	m__siga˘i⁄_u
;

311 
sig£t_t
 
	mß_mask
;

312 
	mß_Êags
;

318 
	#ß_h™dÀr
 
__siga˘i⁄_u
.
__ß_h™dÀr


	)

319 
	#ß_siga˘i⁄
 
__siga˘i⁄_u
.
__ß_siga˘i⁄


	)

321 
	#SA_ONSTACK
 0x0001

	)

322 
	#SA_RESTART
 0x0002

	)

323 
	#SA_RESETHAND
 0x0004

	)

324 
	#SA_NOCLDSTOP
 0x0008

	)

325 
	#SA_NODEFER
 0x0010

	)

326 
	#SA_NOCLDWAIT
 0x0020

	)

327 
	#SA_SIGINFO
 0x0040

	)

328 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

329 
	#SA_USERTRAMP
 0x0100

	)

331 
	#SA_64REGSET
 0x0200

	)

337 
	#SA_USERSPACE_MASK
 (
SA_ONSTACK
 | 
SA_RESTART
 | 
SA_RESETHAND
 | 
SA_NOCLDSTOP
 | 
SA_NODEFER
 | 
SA_NOCLDWAIT
 | 
SA_SIGINFO
)

	)

342 
	#SIG_BLOCK
 1

	)

343 
	#SIG_UNBLOCK
 2

	)

344 
	#SIG_SETMASK
 3

	)

347 
	#SI_USER
 0x10001

	)

348 
	#SI_QUEUE
 0x10002

	)

349 
	#SI_TIMER
 0x10003

	)

350 
	#SI_ASYNCIO
 0x10004

	)

351 
	#SI_MESGQ
 0x10005

	)

353 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

354 (*
	tsig_t
)();

361 
	#SS_ONSTACK
 0x0001

	)

362 
	#SS_DISABLE
 0x0004

	)

363 
	#MINSIGSTKSZ
 32768

	)

364 
	#SIGSTKSZ
 131072

	)

366 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

371 
	ssigvec
 {

372 (*
sv_h™dÀr
)();

373 
sv_mask
;

374 
sv_Êags
;

377 
	#SV_ONSTACK
 
SA_ONSTACK


	)

378 
	#SV_INTERRUPT
 
SA_RESTART


	)

379 
	#SV_RESETHAND
 
SA_RESETHAND


	)

380 
	#SV_NODEFER
 
SA_NODEFER


	)

381 
	#SV_NOCLDSTOP
 
SA_NOCLDSTOP


	)

382 
	#SV_SIGINFO
 
SA_SIGINFO


	)

384 
	#sv_⁄°ack
 
sv_Êags


	)

390 
	ssig°ack
 {

391 *
ss_•
;

392 
ss_⁄°ack
;

395 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

400 
	#sigmask
(
m
Ë(1 << ((m)-1))

	)

403 
	#BADSIG
 
SIG_ERR


	)

412 
__BEGIN_DECLS


413 (*
	`sig«l
(, (*)()))();

414 
__END_DECLS


	@/usr/include/sys/syslimits.h

65 #i‚de‡
_SYS_SYSLIMITS_H_


66 
	#_SYS_SYSLIMITS_H_


	)

68 
	~<sys/cdefs.h
>

70 #i‡!
deföed
(
_ANSI_SOURCE
)

75 
	#ARG_MAX
 (256 * 1024Ë

	)

76 
	#CHILD_MAX
 266

	)

77 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

78 
	#GID_MAX
 2147483647U

	)

80 
	#LINK_MAX
 32767

	)

81 
	#MAX_CANON
 1024

	)

82 
	#MAX_INPUT
 1024

	)

83 
	#NAME_MAX
 255

	)

84 
	#NGROUPS_MAX
 16

	)

85 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

86 
	#UID_MAX
 2147483647U

	)

88 
	#OPEN_MAX
 10240

	)

91 
	#PATH_MAX
 1024

	)

92 
	#PIPE_BUF
 512

	)

94 
	#BC_BASE_MAX
 99

	)

95 
	#BC_DIM_MAX
 2048

	)

96 
	#BC_SCALE_MAX
 99

	)

97 
	#BC_STRING_MAX
 1000

	)

98 
	#CHARCLASS_NAME_MAX
 14

	)

99 
	#COLL_WEIGHTS_MAX
 2

	)

100 
	#EQUIV_CLASS_MAX
 2

	)

101 
	#EXPR_NEST_MAX
 32

	)

102 
	#LINE_MAX
 2048

	)

103 
	#RE_DUP_MAX
 255

	)

105 #i‡
__DARWIN_UNIX03


106 
	#NZERO
 20

	)

111 
	#NZERO
 0

	)

	@/usr/include/sys/termios.h

64 #i‚de‡
_SYS_TERMIOS_H_


65 
	#_SYS_TERMIOS_H_


	)

67 
	~<sys/cdefs.h
>

76 
	#VEOF
 0

	)

77 
	#VEOL
 1

	)

78 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

79 
	#VEOL2
 2

	)

81 
	#VERASE
 3

	)

82 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

83 
	#VWERASE
 4

	)

85 
	#VKILL
 5

	)

86 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

87 
	#VREPRINT
 6

	)

90 
	#VINTR
 8

	)

91 
	#VQUIT
 9

	)

92 
	#VSUSP
 10

	)

93 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

94 
	#VDSUSP
 11

	)

96 
	#VSTART
 12

	)

97 
	#VSTOP
 13

	)

98 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

99 
	#VLNEXT
 14

	)

100 
	#VDISCARD
 15

	)

102 
	#VMIN
 16

	)

103 
	#VTIME
 17

	)

104 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

105 
	#VSTATUS
 18

	)

108 
	#NCCS
 20

	)

110 #i‚de‡
_POSIX_VDISABLE


111 
	#_POSIX_VDISABLE
 0xff

	)

114 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

115 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË? (vÆË!
_POSIX_VDISABLE
 : 0)

	)

121 
	#IGNBRK
 0x00000001

	)

122 
	#BRKINT
 0x00000002

	)

123 
	#IGNPAR
 0x00000004

	)

124 
	#PARMRK
 0x00000008

	)

125 
	#INPCK
 0x00000010

	)

126 
	#ISTRIP
 0x00000020

	)

127 
	#INLCR
 0x00000040

	)

128 
	#IGNCR
 0x00000080

	)

129 
	#ICRNL
 0x00000100

	)

130 
	#IXON
 0x00000200

	)

131 
	#IXOFF
 0x00000400

	)

132 
	#IXANY
 0x00000800

	)

133 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

134 
	#IMAXBEL
 0x00002000

	)

135 
	#IUTF8
 0x00004000

	)

141 
	#OPOST
 0x00000001

	)

142 
	#ONLCR
 0x00000002

	)

143 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

144 
	#OXTABS
 0x00000004

	)

145 
	#ONOEOT
 0x00000008

	)

153 
	#OCRNL
 0x00000010

	)

154 
	#ONOCR
 0x00000020

	)

155 
	#ONLRET
 0x00000040

	)

156 
	#OFILL
 0x00000080

	)

157 
	#NLDLY
 0x00000300

	)

158 
	#TABDLY
 0x00000c04

	)

159 
	#CRDLY
 0x00003000

	)

160 
	#FFDLY
 0x00004000

	)

161 
	#BSDLY
 0x00008000

	)

162 
	#VTDLY
 0x00010000

	)

163 
	#OFDEL
 0x00020000

	)

164 #i‡!
deföed
(
_SYS_IOCTL_COMPAT_H_
Ë|| 
__DARWIN_UNIX03


175 
	#NL0
 0x00000000

	)

176 
	#NL1
 0x00000100

	)

177 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

178 
	#NL2
 0x00000200

	)

179 
	#NL3
 0x00000300

	)

181 
	#TAB0
 0x00000000

	)

182 
	#TAB1
 0x00000400

	)

183 
	#TAB2
 0x00000800

	)

185 
	#TAB3
 0x00000004

	)

186 
	#CR0
 0x00000000

	)

187 
	#CR1
 0x00001000

	)

188 
	#CR2
 0x00002000

	)

189 
	#CR3
 0x00003000

	)

190 
	#FF0
 0x00000000

	)

191 
	#FF1
 0x00004000

	)

192 
	#BS0
 0x00000000

	)

193 
	#BS1
 0x00008000

	)

194 
	#VT0
 0x00000000

	)

195 
	#VT1
 0x00010000

	)

204 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

205 
	#CIGNORE
 0x00000001

	)

207 
	#CSIZE
 0x00000300

	)

208 
	#CS5
 0x00000000

	)

209 
	#CS6
 0x00000100

	)

210 
	#CS7
 0x00000200

	)

211 
	#CS8
 0x00000300

	)

212 
	#CSTOPB
 0x00000400

	)

213 
	#CREAD
 0x00000800

	)

214 
	#PARENB
 0x00001000

	)

215 
	#PARODD
 0x00002000

	)

216 
	#HUPCL
 0x00004000

	)

217 
	#CLOCAL
 0x00008000

	)

218 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

219 
	#CCTS_OFLOW
 0x00010000

	)

220 
	#CRTSCTS
 (
CCTS_OFLOW
 | 
CRTS_IFLOW
)

	)

221 
	#CRTS_IFLOW
 0x00020000

	)

222 
	#CDTR_IFLOW
 0x00040000

	)

223 
	#CDSR_OFLOW
 0x00080000

	)

224 
	#CCAR_OFLOW
 0x00100000

	)

225 
	#MDMBUF
 0x00100000

	)

237 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

238 
	#ECHOKE
 0x00000001

	)

240 
	#ECHOE
 0x00000002

	)

241 
	#ECHOK
 0x00000004

	)

242 
	#ECHO
 0x00000008

	)

243 
	#ECHONL
 0x00000010

	)

244 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

245 
	#ECHOPRT
 0x00000020

	)

246 
	#ECHOCTL
 0x00000040

	)

248 
	#ISIG
 0x00000080

	)

249 
	#ICANON
 0x00000100

	)

250 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

251 
	#ALTWERASE
 0x00000200

	)

253 
	#IEXTEN
 0x00000400

	)

254 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

255 
	#EXTPROC
 0x00000800

	)

257 
	#TOSTOP
 0x00400000

	)

258 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

259 
	#FLUSHO
 0x00800000

	)

260 
	#NOKERNINFO
 0x02000000

	)

261 
	#PENDIN
 0x20000000

	)

263 
	#NOFLSH
 0x80000000

	)

265 
	ttcÊag_t
;

266 
	tcc_t
;

267 
	t•ìd_t
;

269 
	sãrmios
 {

270 
tcÊag_t
 
	mc_iÊag
;

271 
tcÊag_t
 
	mc_oÊag
;

272 
tcÊag_t
 
	mc_cÊag
;

273 
tcÊag_t
 
	mc_lÊag
;

274 
cc_t
 
	mc_cc
[
NCCS
];

275 
•ìd_t
 
	mc_i•ìd
;

276 
•ìd_t
 
	mc_o•ìd
;

283 
	#TCSANOW
 0

	)

284 
	#TCSADRAIN
 1

	)

285 
	#TCSAFLUSH
 2

	)

286 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

287 
	#TCSASOFT
 0x10

	)

293 
	#B0
 0

	)

294 
	#B50
 50

	)

295 
	#B75
 75

	)

296 
	#B110
 110

	)

297 
	#B134
 134

	)

298 
	#B150
 150

	)

299 
	#B200
 200

	)

300 
	#B300
 300

	)

301 
	#B600
 600

	)

302 
	#B1200
 1200

	)

303 
	#B1800
 1800

	)

304 
	#B2400
 2400

	)

305 
	#B4800
 4800

	)

306 
	#B9600
 9600

	)

307 
	#B19200
 19200

	)

308 
	#B38400
 38400

	)

309 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

310 
	#B7200
 7200

	)

311 
	#B14400
 14400

	)

312 
	#B28800
 28800

	)

313 
	#B57600
 57600

	)

314 
	#B76800
 76800

	)

315 
	#B115200
 115200

	)

316 
	#B230400
 230400

	)

317 
	#EXTA
 19200

	)

318 
	#EXTB
 38400

	)

322 
	#TCIFLUSH
 1

	)

323 
	#TCOFLUSH
 2

	)

324 
	#TCIOFLUSH
 3

	)

325 
	#TCOOFF
 1

	)

326 
	#TCOON
 2

	)

327 
	#TCIOFF
 3

	)

328 
	#TCION
 4

	)

330 
	~<sys/cdefs.h
>

332 
__BEGIN_DECLS


333 
•ìd_t
 
cfgëi•ìd
(c⁄° 
ãrmios
 *);

334 
•ìd_t
 
cfgëo•ìd
(c⁄° 
ãrmios
 *);

335 
cf£ti•ìd
(
ãrmios
 *, 
•ìd_t
);

336 
cf£to•ìd
(
ãrmios
 *, 
•ìd_t
);

337 
tcgë©å
(, 
ãrmios
 *);

338 
tc£èâr
(, , c⁄° 
ãrmios
 *);

339 
	$tcdøö
(Ë
	`__DARWIN_ALIAS_C
(
tcdøö
);

340 
	`tcÊow
(, );

341 
	`tcÊush
(, );

342 
	`tc£ndbªak
(, );

344 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

345 
	`cfmakîaw
(
ãrmios
 *);

346 
	`cf£t•ìd
(
ãrmios
 *, 
•ìd_t
);

348 
__END_DECLS


351 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

358 
	~<sys/âycom.h
>

366 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

367 
	~<sys/âydeÁu…s.h
>

	@/usr/include/sys/ttycom.h

69 #i‚def 
_SYS_TTYCOM_H_


70 
	#_SYS_TTYCOM_H_


	)

72 
	~<sys/ioccom.h
>

83 
	swösize
 {

84 
	mws_row
;

85 
	mws_cﬁ
;

86 
	mws_xpixñ
;

87 
	mws_ypixñ
;

90 
	#TIOCMODG
 
	`_IOR
('t', 3, Ë

	)

91 
	#TIOCMODS
 
	`_IOW
('t', 4, Ë

	)

92 
	#TIOCM_LE
 0001

	)

93 
	#TIOCM_DTR
 0002

	)

94 
	#TIOCM_RTS
 0004

	)

95 
	#TIOCM_ST
 0010

	)

96 
	#TIOCM_SR
 0020

	)

97 
	#TIOCM_CTS
 0040

	)

98 
	#TIOCM_CAR
 0100

	)

99 
	#TIOCM_CD
 
TIOCM_CAR


	)

100 
	#TIOCM_RNG
 0200

	)

101 
	#TIOCM_RI
 
TIOCM_RNG


	)

102 
	#TIOCM_DSR
 0400

	)

104 
	#TIOCEXCL
 
	`_IO
('t', 13Ë

	)

105 
	#TIOCNXCL
 
	`_IO
('t', 14Ë

	)

107 
	#TIOCFLUSH
 
	`_IOW
('t', 16, Ë

	)

109 
	#TIOCGETA
 
	`_IOR
('t', 19, 
ãrmios
Ë

	)

110 
	#TIOCSETA
 
	`_IOW
('t', 20, 
ãrmios
Ë

	)

111 
	#TIOCSETAW
 
	`_IOW
('t', 21, 
ãrmios
Ë

	)

112 
	#TIOCSETAF
 
	`_IOW
('t', 22, 
ãrmios
Ë

	)

113 
	#TIOCGETD
 
	`_IOR
('t', 26, Ë

	)

114 
	#TIOCSETD
 
	`_IOW
('t', 27, Ë

	)

115 
	#TIOCIXON
 
	`_IO
('t', 129Ë

	)

116 
	#TIOCIXOFF
 
	`_IO
('t', 128Ë

	)

118 
	#TIOCSBRK
 
	`_IO
('t', 123Ë

	)

119 
	#TIOCCBRK
 
	`_IO
('t', 122Ë

	)

120 
	#TIOCSDTR
 
	`_IO
('t', 121Ë

	)

121 
	#TIOCCDTR
 
	`_IO
('t', 120Ë

	)

122 
	#TIOCGPGRP
 
	`_IOR
('t', 119, Ë

	)

123 
	#TIOCSPGRP
 
	`_IOW
('t', 118, Ë

	)

125 
	#TIOCOUTQ
 
	`_IOR
('t', 115, Ë

	)

126 
	#TIOCSTI
 
	`_IOW
('t', 114, Ë

	)

127 
	#TIOCNOTTY
 
	`_IO
('t', 113Ë

	)

128 
	#TIOCPKT
 
	`_IOW
('t', 112, Ë

	)

129 
	#TIOCPKT_DATA
 0x00

	)

130 
	#TIOCPKT_FLUSHREAD
 0x01

	)

131 
	#TIOCPKT_FLUSHWRITE
 0x02

	)

132 
	#TIOCPKT_STOP
 0x04

	)

133 
	#TIOCPKT_START
 0x08

	)

134 
	#TIOCPKT_NOSTOP
 0x10

	)

135 
	#TIOCPKT_DOSTOP
 0x20

	)

136 
	#TIOCPKT_IOCTL
 0x40

	)

137 
	#TIOCSTOP
 
	`_IO
('t', 111Ë

	)

138 
	#TIOCSTART
 
	`_IO
('t', 110Ë

	)

139 
	#TIOCMSET
 
	`_IOW
('t', 109, Ë

	)

140 
	#TIOCMBIS
 
	`_IOW
('t', 108, Ë

	)

141 
	#TIOCMBIC
 
	`_IOW
('t', 107, Ë

	)

142 
	#TIOCMGET
 
	`_IOR
('t', 106, Ë

	)

143 
	#TIOCREMOTE
 
	`_IOW
('t', 105, Ë

	)

144 
	#TIOCGWINSZ
 
	`_IOR
('t', 104, 
wösize
Ë

	)

145 
	#TIOCSWINSZ
 
	`_IOW
('t', 103, 
wösize
Ë

	)

146 
	#TIOCUCNTL
 
	`_IOW
('t', 102, Ë

	)

147 
	#TIOCSTAT
 
	`_IO
('t', 101Ë

	)

148 
	#UIOCCMD
(
n
Ë
	`_IO
('u',ÇË

	)

149 
	#TIOCSCONS
 
	`_IO
('t', 99Ë

	)

150 
	#TIOCCONS
 
	`_IOW
('t', 98, Ë

	)

151 
	#TIOCSCTTY
 
	`_IO
('t', 97Ë

	)

152 
	#TIOCEXT
 
	`_IOW
('t', 96, Ë

	)

153 
	#TIOCSIG
 
	`_IO
('t', 95Ë

	)

154 
	#TIOCDRAIN
 
	`_IO
('t', 94Ë

	)

155 
	#TIOCMSDTRWAIT
 
	`_IOW
('t', 91, Ë

	)

156 
	#TIOCMGDTRWAIT
 
	`_IOR
('t', 90, Ë

	)

157 
	#TIOCTIMESTAMP
 
	`_IOR
('t', 89, 
timevÆ
Ë

	)

159 
	#TIOCDCDTIMESTAMP
 
	`_IOR
('t', 88, 
timevÆ
Ë

	)

161 
	#TIOCSDRAINWAIT
 
	`_IOW
('t', 87, Ë

	)

162 
	#TIOCGDRAINWAIT
 
	`_IOR
('t', 86, Ë

	)

163 
	#TIOCDSIMICROCODE
 
	`_IO
('t', 85Ë

	)

165 
	#TIOCPTYGRANT
 
	`_IO
('t', 84Ë

	)

166 
	#TIOCPTYGNAME
 
	`_IOC
(
IOC_OUT
, 't', 83, 128Ë

	)

167 
	#TIOCPTYUNLK
 
	`_IO
('t', 82Ë

	)

169 
	#TTYDISC
 0

	)

170 
	#TABLDISC
 3

	)

171 
	#SLIPDISC
 4

	)

172 
	#PPPDISC
 5

	)

	@/usr/include/sys/unistd.h

64 #i‚de‡
_SYS_UNISTD_H_


65 
	#_SYS_UNISTD_H_


	)

67 
	~<sys/cdefs.h
>

75 #ifdef 
_NOT_AVAILABLE


76 
	#_POSIX_SAVED_IDS


	)

79 
	#_POSIX_VERSION
 200112L

	)

80 
	#_POSIX2_VERSION
 200112L

	)

84 #i‚de‡
_POSIX_VDISABLE


85 
	#_POSIX_VDISABLE
 (()'\377')

	)

88 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

91 
	#F_OK
 0

	)

92 
	#X_OK
 (1<<0Ë

	)

93 
	#W_OK
 (1<<1Ë

	)

94 
	#R_OK
 (1<<2Ë

	)

96 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

102 
	#_READ_OK
 (1<<9Ë

	)

103 
	#_WRITE_OK
 (1<<10Ë

	)

104 
	#_EXECUTE_OK
 (1<<11Ë

	)

105 
	#_DELETE_OK
 (1<<12Ë

	)

106 
	#_APPEND_OK
 (1<<13Ë

	)

107 
	#_RMFILE_OK
 (1<<14Ë

	)

108 
	#_RATTR_OK
 (1<<15Ë

	)

109 
	#_WATTR_OK
 (1<<16Ë

	)

110 
	#_REXT_OK
 (1<<17Ë

	)

111 
	#_WEXT_OK
 (1<<18Ë

	)

112 
	#_RPERM_OK
 (1<<19Ë

	)

113 
	#_WPERM_OK
 (1<<20Ë

	)

114 
	#_CHOWN_OK
 (1<<21Ë

	)

116 
	#_ACCESS_EXTENDED_MASK
 (
_READ_OK
 | 
_WRITE_OK
 | 
_EXECUTE_OK
 | \

117 
_DELETE_OK
 | 
_APPEND_OK
 | \

118 
_RMFILE_OK
 | 
_REXT_OK
 | \

119 
_WEXT_OK
 | 
_RATTR_OK
 | 
_WATTR_OK
 | 
_RPERM_OK
 | \

120 
_WPERM_OK
 | 
_CHOWN_OK
)

	)

124 #i‚de‡
SEEK_SET


125 
	#SEEK_SET
 0

	)

126 
	#SEEK_CUR
 1

	)

127 
	#SEEK_END
 2

	)

130 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

132 
	#L_SET
 
SEEK_SET


	)

133 
	#L_INCR
 
SEEK_CUR


	)

134 
	#L_XTND
 
SEEK_END


	)

137 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

138 
	sac˚ssx_des¸ùt‹
 {

139 
	mad_«me_off£t
;

140 
	mad_Êags
;

141 
	mad_∑d
[2];

143 
	#ACCESSX_MAX_DESCRIPTORS
 100

	)

144 
	#ACCESSX_MAX_TABLESIZE
 (16 * 1024)

	)

148 
	#_PC_LINK_MAX
 1

	)

149 
	#_PC_MAX_CANON
 2

	)

150 
	#_PC_MAX_INPUT
 3

	)

151 
	#_PC_NAME_MAX
 4

	)

152 
	#_PC_PATH_MAX
 5

	)

153 
	#_PC_PIPE_BUF
 6

	)

154 
	#_PC_CHOWN_RESTRICTED
 7

	)

155 
	#_PC_NO_TRUNC
 8

	)

156 
	#_PC_VDISABLE
 9

	)

158 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

159 
	#_PC_NAME_CHARS_MAX
 10

	)

160 
	#_PC_CASE_SENSITIVE
 11

	)

161 
	#_PC_CASE_PRESERVING
 12

	)

162 
	#_PC_EXTENDED_SECURITY_NP
 13

	)

163 
	#_PC_AUTH_OPAQUE_NP
 14

	)

166 
	#_PC_2_SYMLINKS
 15

	)

167 
	#_PC_ALLOC_SIZE_MIN
 16

	)

168 
	#_PC_ASYNC_IO
 17

	)

169 
	#_PC_FILESIZEBITS
 18

	)

170 
	#_PC_PRIO_IO
 19

	)

171 
	#_PC_REC_INCR_XFER_SIZE
 20

	)

172 
	#_PC_REC_MAX_XFER_SIZE
 21

	)

173 
	#_PC_REC_MIN_XFER_SIZE
 22

	)

174 
	#_PC_REC_XFER_ALIGN
 23

	)

175 
	#_PC_SYMLINK_MAX
 24

	)

176 
	#_PC_SYNC_IO
 25

	)

179 
	#_CS_PATH
 1

	)

	@/usr/include/sys/wait.h

64 #i‚de‡
_SYS_WAIT_H_


65 
	#_SYS_WAIT_H_


	)

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

80 
	mP_ALL
,

81 
	mP_PID
,

82 
	mP_PGID


83 } 
	tidty≥_t
;

89 #i‚de‡
_PID_T


90 
__d¨wö_pid_t
 
	tpid_t
;

91 
	#_PID_T


	)

94 #i‚de‡
_ID_T


95 
__d¨wö_id_t
 
	tid_t
;

96 
	#_ID_T


	)

116 
	~<sys/sig«l.h
>

117 
	~<sys/ªsour˚.h
>

128 
	#WNOHANG
 0x00000001

	)

129 
	#WUNTRACED
 0x00000002

	)

135 #i‡
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
)

136 
	#_W_INT
(
i
Ë(i)

	)

138 
	#_W_INT
(
w
Ë(*(*)&(w)Ë

	)

139 
	#WCOREFLAG
 0200

	)

143 
	#_WSTATUS
(
x
Ë(
	`_W_INT
(xË& 0177)

	)

144 
	#_WSTOPPED
 0177

	)

150 #i‡
__DARWIN_UNIX03


151 
	#WEXITSTATUS
(
x
Ë((
	`_W_INT
(xË>> 8Ë& 0x000000ff)

	)

153 
	#WEXITSTATUS
(
x
Ë(
	`_W_INT
(xË>> 8)

	)

156 
	#WSTOPSIG
(
x
Ë(
	`_W_INT
(xË>> 8)

	)

157 
	#WIFCONTINUED
(
x
Ë(
	`_WSTATUS
(xË=
_WSTOPPED
 && 
	`WSTOPSIG
(xË=0x13)

	)

158 
	#WIFSTOPPED
(
x
Ë(
	`_WSTATUS
(xË=
_WSTOPPED
 && 
	`WSTOPSIG
(xË!0x13)

	)

159 
	#WIFEXITED
(
x
Ë(
	`_WSTATUS
(xË=0)

	)

160 
	#WIFSIGNALED
(
x
Ë(
	`_WSTATUS
(xË!
_WSTOPPED
 && _WSTATUS(xË!0)

	)

161 
	#WTERMSIG
(
x
Ë(
	`_WSTATUS
(x))

	)

162 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

163 
	#WCOREDUMP
(
x
Ë(
	`_W_INT
(xË& 
WCOREFLAG
)

	)

165 
	#W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

166 
	#W_STOPCODE
(
sig
Ë((sigË<< 8 | 
_WSTOPPED
)

	)

175 
	#WEXITED
 0x00000004

	)

176 #i‡
__DARWIN_UNIX03


178 
	#WSTOPPED
 0x00000008

	)

180 
	#WCONTINUED
 0x00000010

	)

181 
	#WNOWAIT
 0x00000020

	)

184 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

190 
	#WAIT_ANY
 (-1Ë

	)

191 
	#WAIT_MYPGRP
 0

	)

193 
	~<machöe/ídün.h
>

201 
	uwaô
 {

202 
	mw_°©us
;

207 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_LITTLE_ENDIAN


208 
	mw_Tîmsig
:7,

209 
	mw_C‹edump
:1,

210 
	mw_Rëcode
:8,

211 
	mw_FûÀr
:16;

213 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


214 
	mw_FûÀr
:16,

215 
	mw_Rëcode
:8,

216 
	mw_C‹edump
:1,

217 
	mw_Tîmsig
:7;

219 } 
	mw_T
;

226 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_LITTLE_ENDIAN


227 
	mw_St›vÆ
:8,

228 
	mw_St›sig
:8,

229 
	mw_FûÀr
:16;

231 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


232 
	mw_FûÀr
:16,

233 
	mw_St›sig
:8,

234 
	mw_St›vÆ
:8;

236 } 
	mw_S
;

238 
	#w_ãrmsig
 
w_T
.
w_Tîmsig


	)

239 
	#w_c‹edump
 
w_T
.
w_C‹edump


	)

240 
	#w_ªtcode
 
w_T
.
w_Rëcode


	)

241 
	#w_°›vÆ
 
w_S
.
w_St›vÆ


	)

242 
	#w_°›sig
 
w_S
.
w_St›sig


	)

246 #i‡!(
__DARWIN_UNIX03
 - 0)

251 
	#WSTOPPED
 
_WSTOPPED


	)

254 
__BEGIN_DECLS


255 
pid_t
 
	$waô
(*Ë
	`__DARWIN_ALIAS_C
(
waô
);

256 
pid_t
 
	$waôpid
(
pid_t
, *, Ë
	`__DARWIN_ALIAS_C
(
waôpid
);

257 #i‚de‡
_ANSI_SOURCE


258 
	$waôid
(
idty≥_t
, 
id_t
, 
sigöfo_t
 *, Ë
	`__DARWIN_ALIAS_C
(
waôid
);

260 #i‡ (!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

261 
pid_t
 
	`waô3
(*, , 
rußge
 *);

262 
pid_t
 
	`waô4
’id_t, *, , 
rußge
 *);

264 
__END_DECLS


	@/usr/include/time.h

63 #i‚de‡
_TIME_H_


64 
	#_TIME_H_


	)

66 
	~<_ty≥s.h
>

68 
	#__√ed_°ru˘_time•ec


	)

69 
	~<_°ru˘s.h
>

71 #i‚de‡
NULL


72 
	#NULL
 
__DARWIN_NULL


	)

75 #i‚def 
_CLOCK_T


76 
	#_CLOCK_T


	)

77 
__d¨wö_˛ock_t
 
	t˛ock_t
;

80 #i‚def 
_SIZE_T


81 
	#_SIZE_T


	)

82 
__d¨wö_size_t
 
	tsize_t
;

85 #i‚def 
_TIME_T


86 
	#_TIME_T


	)

87 
__d¨wö_time_t
 
	ttime_t
;

90 
	stm
 {

91 
	mtm_£c
;

92 
	mtm_mö
;

93 
	mtm_hour
;

94 
	mtm_mday
;

95 
	mtm_m⁄
;

96 
	mtm_yór
;

97 
	mtm_wday
;

98 
	mtm_yday
;

99 
	mtm_isd°
;

100 
	mtm_gmtoff
;

101 *
	mtm_z⁄e
;

104 #i‡
__DARWIN_UNIX03


105 
	#CLOCKS_PER_SEC
 1000000

	)

107 
	~<machöe/_limôs.h
>

109 
	#CLOCKS_PER_SEC
 (
__DARWIN_CLK_TCK
)

	)

112 #i‚de‡
_ANSI_SOURCE


113 *
tz«me
[];

116 
gëd©e_îr
;

117 #i‡
__DARWIN_UNIX03


118 
timez⁄e
 
__DARWIN_ALIAS
(timezone);

120 
daylight
;

122 
__BEGIN_DECLS


123 *
as˘ime
(c⁄° 
tm
 *);

124 
˛ock_t
 
	$˛ock
(Ë
	`__DARWIN_ALIAS
(
˛ock
);

125 *
	`˘ime
(c⁄° 
time_t
 *);

126 
	`dif·ime
(
time_t
,Åime_t);

127 
tm
 *
	`gëd©e
(const *);

128 
tm
 *
	`gmtime
(c⁄° 
time_t
 *);

129 
tm
 *
	`loˇ…ime
(c⁄° 
time_t
 *);

130 
time_t
 
	$mktime
(
tm
 *Ë
	`__DARWIN_ALIAS
(
mktime
);

131 
size_t
 
	$°r·ime
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, c⁄° 
tm
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
°r·ime
);

132 *
	$°Ωtime
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
tm
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
°Ωtime
);

133 
time_t
 
	`time
(time_t *);

135 #i‚de‡
_ANSI_SOURCE


136 
	`tz£t
();

140 *
	`as˘ime_r
(c⁄° 
tm
 * 
__ª°ri˘
, * __restrict);

141 *
	`˘ime_r
(c⁄° 
time_t
 *, *);

142 
tm
 *
	`gmtime_r
(c⁄° 
time_t
 * 
__ª°ri˘
, tm * __restrict);

143 
tm
 *
	`loˇ…ime_r
(c⁄° 
time_t
 * 
__ª°ri˘
, tm * __restrict);

145 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

146 
time_t
 
	`posix2time
(time_t);

147 #i‡!
__DARWIN_UNIX03


148 *
	`timez⁄e
(, );

150 
	`tz£twÆl
();

151 
time_t
 
	`time2posix
(time_t);

152 
time_t
 
	`timñoˇl
(
tm
 * const);

153 
time_t
 
	`timegm
(
tm
 * const);

156 #i‡!
	`deföed
(
_ANSI_SOURCE
)

157 
	$«no¶ìp
(c⁄° 
time•ec
 *, time•e¯*Ë
	`__DARWIN_ALIAS_C
(
«no¶ìp
);

159 
__END_DECLS


161 #ifde‡
_USE_EXTENDED_LOCALES_


162 
	~<xloˇÀ/_time.h
>

	@/usr/include/utmp.h

63 #i‚def 
_UTMP_H_


64 
	#_UTMP_H_


	)

74 
	~<_ty≥s.h
>

76 #i‚de‡
_TIME_T


77 
	#_TIME_T


	)

78 
__d¨wö_time_t
 
	ttime_t
;

82 
	#_PATH_UTMP
 "/v¨/run/utmp"

	)

83 
	#_PATH_WTMP
 "/v¨/log/wtmp"

	)

84 
	#_PATH_LASTLOG
 "/v¨/log/œ°log"

	)

86 
	#UT_NAMESIZE
 8

	)

87 
	#UT_LINESIZE
 8

	)

88 
	#UT_HOSTSIZE
 16

	)

90 
	sœ°log
 {

91 
time_t
 
	mŒ_time
;

92 
	mŒ_löe
[
UT_LINESIZE
];

93 
	mŒ_ho°
[
UT_HOSTSIZE
];

94 } 
	g__dïªˇãd
;

96 
	sutmp
 {

97 
	mut_löe
[
UT_LINESIZE
];

98 
	mut_«me
[
UT_NAMESIZE
];

99 
	mut_ho°
[
UT_HOSTSIZE
];

100 
	mut_time
;

101 } 
	g__dïªˇãd
;

	@/usr/include/xlocale/_ctype.h

24 #i‚de‡
_XLOCALE__CTYPE_H_


25 
	#_XLOCALE__CTYPE_H_


	)

30 #i‡!
deföed
(
_DONT_USE_CTYPE_INLINE_
) && \

31 (
deföed
(
_USE_CTYPE_INLINE_
Ë|| deföed(
__GNUC__
Ë|| 
	$deföed
(
__˝lu•lus
))

34 
__BEGIN_DECLS


35 
	`___ru√ty≥_l
(
__d¨wö_˘_ru√_t
, 
loˇÀ_t
);

36 
__d¨wö_˘_ru√_t
 
	`___tﬁowî_l
(__d¨wö_˘_ru√_t, 
loˇÀ_t
);

37 
__d¨wö_˘_ru√_t
 
	`___touµî_l
(__d¨wö_˘_ru√_t, 
loˇÀ_t
);

38 
__END_DECLS


40 
__BEGIN_DECLS


41 
	`__maskru√_l
(
__d¨wö_˘_ru√_t
, , 
loˇÀ_t
);

42 
__END_DECLS


44 
__DARWIN_CTYPE_°©ic_ölöe
 

45 
	$__i°y≥_l
(
__d¨wö_˘_ru√_t
 
_c
, 
_f
, 
loˇÀ_t
 
_l
)

47  !!(
	`ißscii
(
_c
Ë? (
_DeÁu…Ru√LoˇÀ
.
__ru√ty≥
[_c] & 
_f
)

48 : 
	`__maskru√_l
(
_c
, 
_f
, 
_l
));

49 
	}
}

51 
__DARWIN_CTYPE_°©ic_ölöe
 
__d¨wö_˘_ru√_t


52 
	$__touµî_l
(
__d¨wö_˘_ru√_t
 
_c
, 
loˇÀ_t
 
_l
)

54  
	`ißscii
(
_c
Ë? 
_DeÁu…Ru√LoˇÀ
.
__m≠uµî
[_c]

55 : 
	`___touµî_l
(
_c
, 
_l
);

56 
	}
}

58 
__DARWIN_CTYPE_°©ic_ölöe
 
__d¨wö_˘_ru√_t


59 
	$__tﬁowî_l
(
__d¨wö_˘_ru√_t
 
_c
, 
loˇÀ_t
 
_l
)

61  
	`ißscii
(
_c
Ë? 
_DeÁu…Ru√LoˇÀ
.
__m≠lowî
[_c]

62 : 
	`___tﬁowî_l
(
_c
, 
_l
);

63 
	}
}

65 
__DARWIN_CTYPE_°©ic_ölöe
 

66 
	$__wcwidth_l
(
__d¨wö_˘_ru√_t
 
_c
, 
loˇÀ_t
 
_l
)

68 
_x
;

70 i‡(
_c
 == 0)

72 
_x
 = ()
	`__maskru√_l
(
_c
, 
_CTYPE_SWM
|
_CTYPE_R
, 
_l
);

73 i‡((
_x
 & 
_CTYPE_SWM
) != 0)

74  ((
_x
 & 
_CTYPE_SWM
Ë>> 
_CTYPE_SWS
);

75  ((
_x
 & 
_CTYPE_R
) != 0 ? 1 : -1);

76 
	}
}

78 #i‚de‡
_EXTERNALIZE_CTYPE_INLINES_


80 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

81 
	$digôtoöt_l
(
c
, 
loˇÀ_t
 
l
)

83  (
	`__maskru√_l
(
c
, 0x0F, 
l
));

84 
	}
}

86 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

87 
	$iß um_l
(
c
, 
loˇÀ_t
 
l
)

89  (
	`__i°y≥_l
(
c
, 
_CTYPE_A
|
_CTYPE_D
, 
l
));

90 
	}
}

92 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

93 
	$ißÕha_l
(
c
, 
loˇÀ_t
 
l
)

95  (
	`__i°y≥_l
(
c
, 
_CTYPE_A
, 
l
));

96 
	}
}

98 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

99 
	$isbœnk_l
(
c
, 
loˇÀ_t
 
l
)

101  (
	`__i°y≥_l
(
c
, 
_CTYPE_B
, 
l
));

102 
	}
}

104 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

105 
	$is˙ål_l
(
c
, 
loˇÀ_t
 
l
)

107  (
	`__i°y≥_l
(
c
, 
_CTYPE_C
, 
l
));

108 
	}
}

110 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

111 
	$isdigô_l
(
c
, 
loˇÀ_t
 
l
)

113  (
	`__i°y≥_l
(
c
, 
_CTYPE_D
, 
l
));

114 
	}
}

116 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

117 
	$isgøph_l
(
c
, 
loˇÀ_t
 
l
)

119  (
	`__i°y≥_l
(
c
, 
_CTYPE_G
, 
l
));

120 
	}
}

122 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

123 
	$ishexnumbî_l
(
c
, 
loˇÀ_t
 
l
)

125  (
	`__i°y≥_l
(
c
, 
_CTYPE_X
, 
l
));

126 
	}
}

128 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

129 
	$isideogøm_l
(
c
, 
loˇÀ_t
 
l
)

131  (
	`__i°y≥_l
(
c
, 
_CTYPE_I
, 
l
));

132 
	}
}

134 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

135 
	$i¶owî_l
(
c
, 
loˇÀ_t
 
l
)

137  (
	`__i°y≥_l
(
c
, 
_CTYPE_L
, 
l
));

138 
	}
}

140 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

141 
	$i¢umbî_l
(
c
, 
loˇÀ_t
 
l
)

143  (
	`__i°y≥_l
(
c
, 
_CTYPE_D
, 
l
));

144 
	}
}

146 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

147 
	$i•h⁄ogøm_l
(
c
, 
loˇÀ_t
 
l
)

149  (
	`__i°y≥_l
(
c
, 
_CTYPE_Q
, 
l
));

150 
	}
}

152 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

153 
	$i•röt_l
(
c
, 
loˇÀ_t
 
l
)

155  (
	`__i°y≥_l
(
c
, 
_CTYPE_R
, 
l
));

156 
	}
}

158 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

159 
	$i•un˘_l
(
c
, 
loˇÀ_t
 
l
)

161  (
	`__i°y≥_l
(
c
, 
_CTYPE_P
, 
l
));

162 
	}
}

164 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

165 
	$i§u√_l
(
c
, 
loˇÀ_t
 
l
)

167  (
	`__i°y≥_l
(
c
, 0xFFFFFFF0L, 
l
));

168 
	}
}

170 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

171 
	$is•a˚_l
(
c
, 
loˇÀ_t
 
l
)

173  (
	`__i°y≥_l
(
c
, 
_CTYPE_S
, 
l
));

174 
	}
}

176 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

177 
	$is•ecül_l
(
c
, 
loˇÀ_t
 
l
)

179  (
	`__i°y≥_l
(
c
, 
_CTYPE_T
, 
l
));

180 
	}
}

182 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

183 
	$isuµî_l
(
c
, 
loˇÀ_t
 
l
)

185  (
	`__i°y≥_l
(
c
, 
_CTYPE_U
, 
l
));

186 
	}
}

188 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

189 
	$isxdigô_l
(
c
, 
loˇÀ_t
 
l
)

191  (
	`__i°y≥_l
(
c
, 
_CTYPE_X
, 
l
));

192 
	}
}

194 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

195 
	$tﬁowî_l
(
c
, 
loˇÀ_t
 
l
)

197  (
	`__tﬁowî_l
(
c
, 
l
));

198 
	}
}

200 
__DARWIN_CTYPE_TOP_°©ic_ölöe
 

201 
	$touµî_l
(
c
, 
loˇÀ_t
 
l
)

203  (
	`__touµî_l
(
c
, 
l
));

204 
	}
}

209 
__BEGIN_DECLS


210 
digôtoöt_l
(, 
loˇÀ_t
);

211 
iß um_l
(, 
loˇÀ_t
);

212 
ißÕha_l
(, 
loˇÀ_t
);

213 
isbœnk_l
(, 
loˇÀ_t
);

214 
is˙ål_l
(, 
loˇÀ_t
);

215 
isdigô_l
(, 
loˇÀ_t
);

216 
isgøph_l
(, 
loˇÀ_t
);

217 
ishexnumbî_l
(, 
loˇÀ_t
);

218 
isideogøm_l
(, 
loˇÀ_t
);

219 
i¶owî_l
(, 
loˇÀ_t
);

220 
i¢umbî_l
(, 
loˇÀ_t
);

221 
i•h⁄ogøm_l
(, 
loˇÀ_t
);

222 
i•röt_l
(, 
loˇÀ_t
);

223 
i•un˘_l
(, 
loˇÀ_t
);

224 
i§u√_l
(, 
loˇÀ_t
);

225 
is•a˚_l
(, 
loˇÀ_t
);

226 
is•ecül_l
(, 
loˇÀ_t
);

227 
isuµî_l
(, 
loˇÀ_t
);

228 
isxdigô_l
(, 
loˇÀ_t
);

229 
tﬁowî_l
(, 
loˇÀ_t
);

230 
touµî_l
(, 
loˇÀ_t
);

231 
	g__END_DECLS


	@/usr/include/xlocale/_stdio.h

24 #i‚de‡
_XLOCALE__STDIO_H_


25 
	#_XLOCALE__STDIO_H_


	)

27 
__BEGIN_DECLS


28 
	$a•rötf_l
(**, 
loˇÀ_t
, const *, ...)

29 
	$__DARWIN_LDBL_COMPAT2
(
a•rötf_l
Ë
	`__¥ötÊike
(3, 4);

30 
	$Ârötf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict, ...)

31 
	$__DARWIN_LDBL_COMPAT2
(
Ârötf_l
Ë
	`__¥ötÊike
(3, 4);

32 
	$fsˇnf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict, ...)

33 
	$__DARWIN_LDBL_COMPAT2
(
fsˇnf_l
Ë
	`__sˇnÊike
(3, 4);

34 
	$¥ötf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, ...)

35 
	$__DARWIN_LDBL_COMPAT2
(
¥ötf_l
Ë
	`__¥ötÊike
(2, 3);

36 
	$sˇnf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, ...)

37 
	$__DARWIN_LDBL_COMPAT2
(
sˇnf_l
Ë
	`__sˇnÊike
(2, 3);

38 
	$¢¥ötf_l
(* 
__ª°ri˘
, 
size_t
, 
loˇÀ_t
,

39 c⁄° * 
__ª°ri˘
, ...)

40 
	$__DARWIN_LDBL_COMPAT2
(
¢¥ötf_l
Ë
	`__¥ötÊike
(4, 5);

41 
	$•rötf_l
(* 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict, ...)

42 
	$__DARWIN_LDBL_COMPAT2
(
•rötf_l
Ë
	`__¥ötÊike
(3, 4);

43 
	$ssˇnf_l
(c⁄° * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict,

44 ...Ë
	$__DARWIN_LDBL_COMPAT2
(
ssˇnf_l
Ë
	`__sˇnÊike
(3, 4);

45 
	$va•rötf_l
(**, 
loˇÀ_t
, c⁄° *, 
va_li°
)

46 
	$__DARWIN_LDBL_COMPAT2
(
va•rötf_l
Ë
	`__¥ötÊike
(3, 0);

47 
	$vÂrötf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict,

48 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT2
(
vÂrötf_l
Ë
	`__¥ötÊike
(3, 0);

49 
	$vfsˇnf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict,

50 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT2
(
vfsˇnf_l
Ë
	`__sˇnÊike
(3, 0);

51 
	$v¥ötf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, 
va_li°
)

52 
	$__DARWIN_LDBL_COMPAT2
(
v¥ötf_l
Ë
	`__¥ötÊike
(2, 0);

53 
	$vsˇnf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, 
va_li°
)

54 
	$__DARWIN_LDBL_COMPAT2
(
vsˇnf_l
Ë
	`__sˇnÊike
(2, 0);

55 
	$v¢¥ötf_l
(* 
__ª°ri˘
, 
size_t
, 
loˇÀ_t
,

56 c⁄° * 
__ª°ri˘
, 
va_li°
)

57 
	$__DARWIN_LDBL_COMPAT2
(
v¢¥ötf_l
Ë
	`__¥ötÊike
(4, 0);

58 
	$v•rötf_l
(* 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict,

59 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT2
(
v•rötf_l
Ë
	`__¥ötÊike
(3, 0);

60 
	$vssˇnf_l
(c⁄° * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict,

61 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT2
(
vssˇnf_l
Ë
	`__sˇnÊike
(3, 0);

62 
__END_DECLS


	@/usr/include/xlocale/_stdlib.h

24 #i‚de‡
_XLOCALE__STDLIB_H_


25 
	#_XLOCALE__STDLIB_H_


	)

27 
__BEGIN_DECLS


28 
©of_l
(c⁄° *, 
loˇÀ_t
);

29 
©oi_l
(c⁄° *, 
loˇÀ_t
);

30 
©ﬁ_l
(c⁄° *, 
loˇÀ_t
);

31 #i‡!
__DARWIN_NO_LONG_LONG


33 
©ﬁl_l
(c⁄° *, 
loˇÀ_t
);

35 
mbÀn_l
(c⁄° *, 
size_t
, 
loˇÀ_t
);

36 
size_t
 
mb°owcs_l
(
wch¨_t
 * 
__ª°ri˘
 , const * __restrict, size_t,

37 
loˇÀ_t
);

38 
mbtowc_l
(
wch¨_t
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
size_t
,

39 
loˇÀ_t
);

40 
	$°πod_l
(c⁄° *, **, 
loˇÀ_t
Ë
	`__DARWIN_ALIAS
(
°πod_l
);

41 
	$°πof_l
(c⁄° *, **, 
loˇÀ_t
Ë
	`__DARWIN_ALIAS
(
°πof_l
);

42 
	`°πﬁ_l
(c⁄° *, **, , 
loˇÀ_t
);

44 
	$°πﬁd_l
(c⁄° *, **, 
loˇÀ_t
)

45 
	`__DARWIN_LDBL_COMPAT2
(
°πﬁd_l
);

47 
	`°πﬁl_l
(c⁄° *, **, , 
loˇÀ_t
);

48 #i‡!
__DARWIN_NO_LONG_LONG


50 
	`°πoq_l
(c⁄° *, **, , 
loˇÀ_t
);

53 
	`°πoul_l
(c⁄° *, **, , 
loˇÀ_t
);

55 
	`°πouŒ_l
(c⁄° *, **, , 
loˇÀ_t
);

56 #i‡!
__DARWIN_NO_LONG_LONG


58 
	`°πouq_l
(c⁄° *, **, , 
loˇÀ_t
);

60 
size_t
 
	`wc°ombs_l
(* 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict, size_t,

61 
loˇÀ_t
);

62 
	`w˘omb_l
(*, 
wch¨_t
, 
loˇÀ_t
);

65 #i‡!
	`deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

66 #¥agm®
GCC
 
pois⁄
 
mb°owcs_l
 
mbtowc_l
 
wc°ombs_l
 
w˘omb_l


68 
__END_DECLS


	@/usr/include/xlocale/_string.h

24 #i‚de‡
_XLOCALE__STRING_H_


25 
	#_XLOCALE__STRING_H_


	)

27 
__BEGIN_DECLS


28 
°rcﬁl_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

29 
size_t
 
°rx‰m_l
(*, c⁄° *, size_t, 
loˇÀ_t
);

30 
°rˇ£cmp_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

31 *
°rˇ£°r_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

32 
°∫ˇ£cmp_l
(c⁄° *, c⁄° *, 
size_t
, 
loˇÀ_t
);

33 
	g__END_DECLS


	@/usr/include/AvailabilityInternal.h

30 #i‚de‡
__AVAILABILITY_INTERNAL__


31 
	#__AVAILABILITY_INTERNAL__


	)

36 
	#__AVAILABILITY_INTERNAL_DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
,
	`visibûôy
("deÁu…")))

	)

37 
	#__AVAILABILITY_INTERNAL_UNAVAILABLE
 
	`__©åibuã__
((
u«vaûabÀ
,
	`visibûôy
("deÁu…")))

	)

38 
	#__AVAILABILITY_INTERNAL_WEAK_IMPORT
 
	`__©åibuã__
((
wók_imp‹t
,
	`visibûôy
("deÁu…")))

	)

39 
	#__AVAILABILITY_INTERNAL_REGULAR
 
	`__©åibuã__
((
	`visibûôy
("deÁu…")))

	)

42 #i‚de‡
__IPHONE_OS_VERSION_MIN_REQUIRED


43 #ifde‡
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__


45 
	#__IPHONE_OS_VERSION_MIN_REQUIRED
 
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__


	)

50 #ifde‡
__IPHONE_OS_VERSION_MIN_REQUIRED


52 #i‚de‡
__IPHONE_OS_VERSION_MAX_ALLOWED


53 
	#__IPHONE_OS_VERSION_MAX_ALLOWED
 
__IPHONE_3_0


	)

56 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_0


57 #unde‡
__IPHONE_OS_VERSION_MIN_REQUIRED


58 
	#__IPHONE_OS_VERSION_MIN_REQUIRED
 
__IPHONE_2_0


	)

62 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_2_0


63 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

64 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_0


65 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

67 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

69 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_2_0


	)

70 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

72 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_2_1


73 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

74 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


75 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

77 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

79 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

80 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


81 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

82 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

84 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

85 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

88 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_2_2


89 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

90 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


91 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

93 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

95 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

96 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


97 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

98 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

99 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

100 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


101 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

102 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

103 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

105 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

106 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

107 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

110 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_3_0


111 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

112 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


113 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

115 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

117 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

118 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


119 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

120 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

121 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

122 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

123 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


124 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

125 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

126 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

127 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

128 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


129 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

130 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

131 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

132 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

134 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

135 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

136 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

137 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

140 
	#__AVAILABILITY_INTERNAL__IPHONE_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

141 
	#__AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

143 #ñi‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
)

145 
	#__MAC_OS_X_VERSION_MIN_REQUIRED
 
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__


	)

147 #i‚de‡
__MAC_OS_X_VERSION_MAX_ALLOWED


148 
	#__MAC_OS_X_VERSION_MAX_ALLOWED
 
__MAC_10_6


	)

152 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_6


153 
	#__AVAILABILITY_INTERNAL__MAC_10_6
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

154 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_6


155 
	#__AVAILABILITY_INTERNAL__MAC_10_6
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

157 
	#__AVAILABILITY_INTERNAL__MAC_10_6
 
__AVAILABILITY_INTERNAL_REGULAR


	)

159 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_5


160 
	#__AVAILABILITY_INTERNAL__MAC_10_5
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

161 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_5


162 
	#__AVAILABILITY_INTERNAL__MAC_10_5
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

164 
	#__AVAILABILITY_INTERNAL__MAC_10_5
 
__AVAILABILITY_INTERNAL_REGULAR


	)

166 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_4


167 
	#__AVAILABILITY_INTERNAL__MAC_10_4
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

168 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_4


169 
	#__AVAILABILITY_INTERNAL__MAC_10_4
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

171 
	#__AVAILABILITY_INTERNAL__MAC_10_4
 
__AVAILABILITY_INTERNAL_REGULAR


	)

173 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_3


174 
	#__AVAILABILITY_INTERNAL__MAC_10_3
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

175 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_3


176 
	#__AVAILABILITY_INTERNAL__MAC_10_3
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

178 
	#__AVAILABILITY_INTERNAL__MAC_10_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

180 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_2


181 
	#__AVAILABILITY_INTERNAL__MAC_10_2
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

182 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_2


183 
	#__AVAILABILITY_INTERNAL__MAC_10_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

185 
	#__AVAILABILITY_INTERNAL__MAC_10_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

187 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_1


188 
	#__AVAILABILITY_INTERNAL__MAC_10_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

189 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_1


190 
	#__AVAILABILITY_INTERNAL__MAC_10_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

192 
	#__AVAILABILITY_INTERNAL__MAC_10_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

194 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_0


195 
	#__AVAILABILITY_INTERNAL__MAC_10_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

196 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_0


197 
	#__AVAILABILITY_INTERNAL__MAC_10_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

199 
	#__AVAILABILITY_INTERNAL__MAC_10_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

201 
	#__AVAILABILITY_INTERNAL__MAC_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

202 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_1


203 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

205 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

207 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_2


208 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

209 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

211 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

212 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

214 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_3


215 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

216 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

217 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

219 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

220 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

221 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

223 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_4


224 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

225 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

226 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

227 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

229 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

230 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

231 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

232 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

234 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_5


235 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

236 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

237 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

238 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

239 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

241 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

242 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

243 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

244 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

245 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

247 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_6


248 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

249 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

250 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

251 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

252 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

253 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

255 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

256 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

257 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

258 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

259 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

260 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

262 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

263 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

264 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

265 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

266 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

267 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

268 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_6


	)

269 
	#__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

	@/usr/include/_structs.h

24 
	~<sys/_°ru˘s.h
>

	@/usr/include/i386/endian.h

66 #i‚de‡
_I386__ENDIAN_H_


67 
	#_I386__ENDIAN_H_


	)

69 
	~<sys/cdefs.h
>

78 
	#_QUAD_HIGHWORD
 1

	)

79 
	#_QUAD_LOWWORD
 0

	)

85 
	#__DARWIN_LITTLE_ENDIAN
 1234

	)

86 
	#__DARWIN_BIG_ENDIAN
 4321

	)

87 
	#__DARWIN_PDP_ENDIAN
 3412

	)

89 
	#__DARWIN_BYTE_ORDER
 
__DARWIN_LITTLE_ENDIAN


	)

91 #if 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

93 
	#LITTLE_ENDIAN
 
__DARWIN_LITTLE_ENDIAN


	)

94 
	#BIG_ENDIAN
 
__DARWIN_BIG_ENDIAN


	)

95 
	#PDP_ENDIAN
 
__DARWIN_PDP_ENDIAN


	)

97 
	#BYTE_ORDER
 
__DARWIN_BYTE_ORDER


	)

99 
	~<sys/_ídün.h
>

	@/usr/include/i386/limits.h

36 #i‚de‡
_I386_LIMITS_H_


37 
	#_I386_LIMITS_H_


	)

39 
	~<sys/cdefs.h
>

40 
	~<i386/_limôs.h
>

42 
	#CHAR_BIT
 8

	)

43 
	#MB_LEN_MAX
 6

	)

45 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

46 
	#CLK_TCK
 
__DARWIN_CLK_TCK


	)

59 
	#SCHAR_MAX
 127

	)

60 
	#SCHAR_MIN
 (-128Ë

	)

62 
	#UCHAR_MAX
 255

	)

63 
	#CHAR_MAX
 127

	)

64 
	#CHAR_MIN
 (-128Ë

	)

66 
	#USHRT_MAX
 65535

	)

67 
	#SHRT_MAX
 32767

	)

68 
	#SHRT_MIN
 (-32768Ë

	)

70 
	#UINT_MAX
 0xfffffff‡

	)

71 
	#INT_MAX
 2147483647

	)

72 
	#INT_MIN
 (-2147483647-1Ë

	)

74 #ifde‡
__LP64__


75 
	#ULONG_MAX
 0xffffffffffffffffUL

	)

76 
	#LONG_MAX
 0x7fffffffffffffffL

	)

77 
	#LONG_MIN
 (-0x7fffffffffffffffL-1Ë

	)

79 
	#ULONG_MAX
 0xffffffffUL

	)

80 
	#LONG_MAX
 2147483647L

	)

81 
	#LONG_MIN
 (-2147483647L-1Ë

	)

84 
	#ULLONG_MAX
 0xffffffffffffffffULL

	)

85 
	#LLONG_MAX
 0x7fffffffffffffffLL

	)

86 
	#LLONG_MIN
 (-0x7fffffffffffffffLL-1Ë

	)

88 #i‡!
deföed
(
_ANSI_SOURCE
)

89 #ifde‡
__LP64__


90 
	#LONG_BIT
 64

	)

92 
	#LONG_BIT
 32

	)

94 
	#SSIZE_MAX
 
LONG_MAX


	)

95 
	#WORD_BIT
 32

	)

97 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

98 
	#SIZE_T_MAX
 
ULONG_MAX


	)

100 
	#UQUAD_MAX
 
ULLONG_MAX


	)

101 
	#QUAD_MAX
 
LLONG_MAX


	)

102 
	#QUAD_MIN
 
LLONG_MIN


	)

	@/usr/include/i386/types.h

66 #i‚def 
_MACHTYPES_H_


67 
	#_MACHTYPES_H_


	)

69 #i‚de‡
__ASSEMBLER__


70 
	~<i386/_ty≥s.h
>

71 
	~<sys/cdefs.h
>

76 #i‚de‡
_INT8_T


77 
	#_INT8_T


	)

78 
__sig√d
 
	töt8_t
;

80 
	tu_öt8_t
;

81 #i‚de‡
_INT16_T


82 
	#_INT16_T


	)

83 
	töt16_t
;

85 
	tu_öt16_t
;

86 #i‚de‡
_INT32_T


87 
	#_INT32_T


	)

88 
	töt32_t
;

90 
	tu_öt32_t
;

91 #i‚de‡
_INT64_T


92 
	#_INT64_T


	)

93 
	töt64_t
;

95 
	tu_öt64_t
;

97 #i‡
__LP64__


98 
öt64_t
 
	tªgi°î_t
;

100 
öt32_t
 
	tªgi°î_t
;

103 #i‚de‡
_INTPTR_T


104 
	#_INTPTR_T


	)

105 
__d¨wö_öçå_t
 
	töçå_t
;

107 #i‚de‡
_UINTPTR_T


108 
	#_UINTPTR_T


	)

109 
	tuöçå_t
;

112 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

114 
u_öt64_t
 
	tu£r_addr_t
;

115 
u_öt64_t
 
	tu£r_size_t
;

116 
öt64_t
 
	tu£r_ssize_t
;

117 
öt64_t
 
	tu£r_l⁄g_t
;

118 
u_öt64_t
 
	tu£r_ul⁄g_t
;

119 
öt64_t
 
	tu£r_time_t
;

120 
öt64_t
 
	tu£r_off_t
;

121 
	#USER_ADDR_NULL
 ((
u£r_addr_t
Ë0)

	)

122 
	#CAST_USER_ADDR_T
(
a_±r
Ë((
u£r_addr_t
)((
uöçå_t
)◊_±r)))

	)

128 
u_öt64_t
 
	tsysˇŒ_¨g_t
;

130 #i‚de‡
__off£tof


131 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

	@/usr/include/machine/_limits.h

28 #i‚de‡
_BSD_MACHINE__LIMITS_H_


29 
	#_BSD_MACHINE__LIMITS_H_


	)

31 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

32 
	~"µc/_limôs.h
"

33 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

34 
	~"i386/_limôs.h
"

35 #ñi‡
deföed
 (
__¨m__
)

36 
	~"¨m/_limôs.h
"

38 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/_structs.h

28 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

29 
	~"µc/_°ru˘s.h
"

30 #ñi‡
deföed
 (
__i386__
Ë|| deföed (
__x86_64__
)

31 
	~"i386/_°ru˘s.h
"

32 #ñi‡
deföed
 (
__¨m__
)

33 
	~"¨m/_°ru˘s.h
"

35 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/_types.h

28 #i‚de‡
_BSD_MACHINE__TYPES_H_


29 
	#_BSD_MACHINE__TYPES_H_


	)

31 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

32 
	~"µc/_ty≥s.h
"

33 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

34 
	~"i386/_ty≥s.h
"

35 #ñi‡
deföed
 (
__¨m__
)

36 
	~"¨m/_ty≥s.h
"

38 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/signal.h

28 #i‚de‡
_BSD_MACHINE_SIGNAL_H_


29 
	#_BSD_MACHINE_SIGNAL_H_


	)

31 #i‡
deföed
 (
__µc__
Ë|| deföed (
__µc64__
)

32 
	~"µc/sig«l.h
"

33 #ñi‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

34 
	~"i386/sig«l.h
"

35 #ñi‡
deföed
 (
__¨m__
)

36 
	~"¨m/sig«l.h
"

38 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/ppc/endian.h

92 #i‚de‡
_PPC_ENDIAN_H_


93 
	#_PPC_ENDIAN_H_


	)

95 
	~<sys/cdefs.h
>

100 
	#_QUAD_HIGHWORD
 0

	)

101 
	#_QUAD_LOWWORD
 1

	)

107 
	#__DARWIN_LITTLE_ENDIAN
 1234

	)

108 
	#__DARWIN_BIG_ENDIAN
 4321

	)

109 
	#__DARWIN_PDP_ENDIAN
 3412

	)

111 
	#__DARWIN_BYTE_ORDER
 
__DARWIN_BIG_ENDIAN


	)

113 #if 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

115 
	#LITTLE_ENDIAN
 
__DARWIN_LITTLE_ENDIAN


	)

116 
	#BIG_ENDIAN
 
__DARWIN_BIG_ENDIAN


	)

117 
	#PDP_ENDIAN
 
__DARWIN_PDP_ENDIAN


	)

119 
	#BYTE_ORDER
 
__DARWIN_BYTE_ORDER


	)

121 
	~<sys/_ídün.h
>

	@/usr/include/ppc/limits.h

36 #i‚de‡
_PPC_LIMITS_H_


37 
	#_PPC_LIMITS_H_


	)

39 
	~<sys/cdefs.h
>

40 
	~<µc/_limôs.h
>

42 
	#CHAR_BIT
 8

	)

43 
	#MB_LEN_MAX
 6

	)

45 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

46 
	#CLK_TCK
 
__DARWIN_CLK_TCK


	)

59 
	#SCHAR_MAX
 127

	)

60 
	#SCHAR_MIN
 (-128Ë

	)

62 
	#UCHAR_MAX
 255

	)

63 
	#CHAR_MAX
 127

	)

64 
	#CHAR_MIN
 (-128Ë

	)

66 
	#USHRT_MAX
 65535

	)

67 
	#SHRT_MAX
 32767

	)

68 
	#SHRT_MIN
 (-32768Ë

	)

70 
	#UINT_MAX
 0xfffffff‡

	)

71 
	#INT_MAX
 2147483647

	)

72 
	#INT_MIN
 (-2147483647-1Ë

	)

74 #ifde‡
__LP64__


75 
	#ULONG_MAX
 0xffffffffffffffffUL

	)

76 
	#LONG_MAX
 0x7fffffffffffffffL

	)

77 
	#LONG_MIN
 (-0x7fffffffffffffffL-1Ë

	)

79 
	#ULONG_MAX
 0xffffffffUL

	)

80 
	#LONG_MAX
 2147483647L

	)

81 
	#LONG_MIN
 (-2147483647L-1Ë

	)

84 
	#ULLONG_MAX
 0xffffffffffffffffULL

	)

85 
	#LLONG_MAX
 0x7fffffffffffffffLL

	)

86 
	#LLONG_MIN
 (-0x7fffffffffffffffLL-1Ë

	)

88 #i‡!
deföed
(
_ANSI_SOURCE
)

89 #ifde‡
__LP64__


90 
	#LONG_BIT
 64

	)

92 
	#LONG_BIT
 32

	)

94 
	#SSIZE_MAX
 
LONG_MAX


	)

95 
	#WORD_BIT
 32

	)

97 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

98 
	#SIZE_T_MAX
 
ULONG_MAX


	)

100 
	#UQUAD_MAX
 
ULLONG_MAX


	)

101 
	#QUAD_MAX
 
LLONG_MAX


	)

102 
	#QUAD_MIN
 
LLONG_MIN


	)

	@/usr/include/ppc/types.h

66 #i‚def 
_MACHTYPES_H_


67 
	#_MACHTYPES_H_


	)

69 #i‚de‡
__ASSEMBLER__


70 
	~<µc/_ty≥s.h
>

71 
	~<sys/cdefs.h
>

76 #i‚de‡
_INT8_T


77 
	#_INT8_T


	)

78 
__sig√d
 
	töt8_t
;

80 
	tu_öt8_t
;

81 #i‚de‡
_INT16_T


82 
	#_INT16_T


	)

83 
	töt16_t
;

85 
	tu_öt16_t
;

86 #i‚de‡
_INT32_T


87 
	#_INT32_T


	)

88 
	töt32_t
;

90 
	tu_öt32_t
;

91 #i‚de‡
_INT64_T


92 
	#_INT64_T


	)

93 
	töt64_t
;

95 
	tu_öt64_t
;

97 #i‡
__LP64__


98 
öt64_t
 
	tªgi°î_t
;

100 
öt32_t
 
	tªgi°î_t
;

103 #i‚de‡
_INTPTR_T


104 
	#_INTPTR_T


	)

105 
__d¨wö_öçå_t
 
	töçå_t
;

107 #i‚de‡
_UINTPTR_T


108 
	#_UINTPTR_T


	)

109 
	tuöçå_t
;

112 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

114 
u_öt64_t
 
	tu£r_addr_t
;

115 
u_öt64_t
 
	tu£r_size_t
;

116 
öt64_t
 
	tu£r_ssize_t
;

117 
öt64_t
 
	tu£r_l⁄g_t
;

118 
u_öt64_t
 
	tu£r_ul⁄g_t
;

119 
öt64_t
 
	tu£r_time_t
;

120 
öt64_t
 
	tu£r_off_t
;

121 
	#USER_ADDR_NULL
 ((
u£r_addr_t
Ë0)

	)

122 
	#CAST_USER_ADDR_T
(
a_±r
Ë((
u£r_addr_t
)((
uöçå_t
)◊_±r)))

	)

128 
u_öt64_t
 
	tsysˇŒ_¨g_t
;

130 #i‚de‡
__off£tof


131 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

	@/usr/include/secure/_common.h

24 #i‚de‡
_SECURE__COMMON_H_


25 
	#_SECURE__COMMON_H_


	)

27 #unde‡
_USE_FORTIFY_LEVEL


28 #i‡
deföed
(
_FORTIFY_SOURCE
) && _FORTIFY_SOURCE > 0

29 #i‡
_FORTIFY_SOURCE
 > 1

30 
	#_USE_FORTIFY_LEVEL
 2

	)

32 
	#_USE_FORTIFY_LEVEL
 1

	)

35 
	#_USE_FORTIFY_LEVEL
 0

	)

38 
	#__d¨wö_obsz0
(
obje˘
Ë
	`__buûtö_obje˘_size
 (obje˘, 0)

	)

39 
	#__d¨wö_obsz
(
obje˘
Ë
	`__buûtö_obje˘_size
 (obje˘, 
_USE_FORTIFY_LEVEL
 > 1)

	)

	@/usr/include/sys/ioccom.h

64 #i‚def 
_SYS_IOCCOM_H_


65 
	#_SYS_IOCCOM_H_


	)

67 
	~<sys/_ty≥s.h
>

74 
	#IOCPARM_MASK
 0x1ff‡

	)

75 
	#IOCPARM_LEN
(
x
Ë(((xË>> 16Ë& 
IOCPARM_MASK
)

	)

76 
	#IOCBASECMD
(
x
Ë((xË& ~(
IOCPARM_MASK
 << 16))

	)

77 
	#IOCGROUP
(
x
Ë(((xË>> 8Ë& 0xff)

	)

79 
	#IOCPARM_MAX
 (
IOCPARM_MASK
 + 1Ë

	)

81 
	#IOC_VOID
 (
__uöt32_t
)0x20000000

	)

83 
	#IOC_OUT
 (
__uöt32_t
)0x40000000

	)

85 
	#IOC_IN
 (
__uöt32_t
)0x80000000

	)

87 
	#IOC_INOUT
 (
IOC_IN
|
IOC_OUT
)

	)

89 
	#IOC_DIRMASK
 (
__uöt32_t
)0xe0000000

	)

91 
	#_IOC
(
öout
,
group
,
num
,
Àn
) \

92 (
öout
 | ((
Àn
 & 
IOCPARM_MASK
Ë<< 16Ë| ((
group
Ë<< 8Ë| (
num
))

	)

93 
	#_IO
(
g
,
n
Ë
	`_IOC
(
IOC_VOID
, (g), (n), 0)

	)

94 
	#_IOR
(
g
,
n
,
t
Ë
	`_IOC
(
IOC_OUT
, (g), (n), —))

	)

95 
	#_IOW
(
g
,
n
,
t
Ë
	`_IOC
(
IOC_IN
, (g), (n), —))

	)

97 
	#_IOWR
(
g
,
n
,
t
Ë
	`_IOC
(
IOC_INOUT
, (g), (n), —))

	)

	@/usr/include/sys/resource.h

64 #i‚de‡
_SYS_RESOURCE_H_


65 
	#_SYS_RESOURCE_H_


	)

67 
	~<sys/≠∂ópi›ts.h
>

68 
	~<sys/cdefs.h
>

69 
	~<sys/_ty≥s.h
>

75 
	#__√ed_°ru˘_timevÆ


	)

76 
	~<sys/_°ru˘s.h
>

79 #i‚de‡
_ID_T


80 
	#_ID_T


	)

81 
__d¨wö_id_t
 
	tid_t
;

88 
__uöt64_t
 
	tæim_t
;

99 
	#PRIO_PROCESS
 0

	)

100 
	#PRIO_PGRP
 1

	)

101 
	#PRIO_USER
 2

	)

103 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

104 
	#PRIO_DARWIN_THREAD
 3

	)

105 
	#PRIO_DARWIN_PROCESS
 4

	)

110 
	#PRIO_MIN
 -20

	)

111 
	#PRIO_MAX
 20

	)

118 
	#PRIO_DARWIN_BG
 0x1000

	)

132 
	#RUSAGE_SELF
 0

	)

133 
	#RUSAGE_CHILDREN
 -1

	)

144 
	srußge
 {

145 
timevÆ
 
	mru_utime
;

146 
timevÆ
 
	mru_°ime
;

147 #i‡
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
)

148 
	mru_›aque
[14];

155 
	mru_maxrss
;

156 
	#ru_fú°
 
ru_ixrss


	)

157 
	mru_ixrss
;

158 
	mru_idrss
;

159 
	mru_i§ss
;

160 
	mru_möÊt
;

161 
	mru_majÊt
;

162 
	mru_nsw≠
;

163 
	mru_öblock
;

164 
	mru_oublock
;

165 
	mru_msg¢d
;

166 
	mru_msgrcv
;

167 
	mru_nsig«ls
;

168 
	mru_nvcsw
;

169 
	mru_nivcsw
;

170 
	#ru_œ°
 
ru_nivcsw


	)

186 
	#RLIM_INFINITY
 (((
__uöt64_t
)1 << 63Ë- 1Ë

	)

187 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

188 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

194 
	#RLIMIT_CPU
 0

	)

195 
	#RLIMIT_FSIZE
 1

	)

196 
	#RLIMIT_DATA
 2

	)

197 
	#RLIMIT_STACK
 3

	)

198 
	#RLIMIT_CORE
 4

	)

199 
	#RLIMIT_AS
 5

	)

200 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

201 
	#RLIMIT_RSS
 
RLIMIT_AS


	)

202 
	#RLIMIT_MEMLOCK
 6

	)

203 
	#RLIMIT_NPROC
 7

	)

205 
	#RLIMIT_NOFILE
 8

	)

206 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

207 
	#RLIM_NLIMITS
 9

	)

209 
	#_RLIMIT_POSIX_FLAG
 0x1000

	)

215 
	sæimô
 {

216 
æim_t
 
	mæim_cur
;

217 
æim_t
 
	mæim_max
;

220 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

222 
	#IOPOL_TYPE_DISK
 0

	)

225 
	#IOPOL_SCOPE_PROCESS
 0

	)

226 
	#IOPOL_SCOPE_THREAD
 1

	)

229 
	#IOPOL_DEFAULT
 0

	)

230 
	#IOPOL_NORMAL
 1

	)

231 
	#IOPOL_PASSIVE
 2

	)

232 
	#IOPOL_THROTTLE
 3

	)

237 
__BEGIN_DECLS


238 
gë¥i‹ôy
(, 
id_t
);

239 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

240 
gëi›ﬁicy_≈
(, );

242 
	$gëæimô
(, 
æimô
 *Ë
	`__DARWIN_ALIAS
(
gëæimô
);

243 
	`gërußge
(, 
rußge
 *);

244 
	`£çri‹ôy
(, 
id_t
, );

245 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

246 
	`£ti›ﬁicy_≈
(, , );

248 
	$£ålimô
(, c⁄° 
æimô
 *Ë
	`__DARWIN_ALIAS
(
£ålimô
);

249 
__END_DECLS


	@/usr/include/sys/ttydefaults.h

72 #i‚de‡
_SYS_TTYDEFAULTS_H_


73 
	#_SYS_TTYDEFAULTS_H_


	)

78 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

79 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
)

	)

80 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

81 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS8
 | 
HUPCL
)

	)

82 
	#TTYDEF_SPEED
 (
B9600
)

	)

87 
	#CTRL
(
x
Ë(x&037)

	)

88 
	#CEOF
 
	`CTRL
('d')

	)

89 
	#CEOL
 0xf‡

	)

90 
	#CERASE
 0177

	)

91 
	#CINTR
 
	`CTRL
('c')

	)

92 
	#CSTATUS
 
	`CTRL
('t')

	)

93 
	#CKILL
 
	`CTRL
('u')

	)

94 
	#CMIN
 1

	)

95 
	#CQUIT
 034

	)

96 
	#CSUSP
 
	`CTRL
('z')

	)

97 
	#CTIME
 0

	)

98 
	#CDSUSP
 
	`CTRL
('y')

	)

99 
	#CSTART
 
	`CTRL
('q')

	)

100 
	#CSTOP
 
	`CTRL
('s')

	)

101 
	#CLNEXT
 
	`CTRL
('v')

	)

102 
	#CDISCARD
 
	`CTRL
('o')

	)

103 
	#CWERASE
 
	`CTRL
('w')

	)

104 
	#CREPRINT
 
	`CTRL
('r')

	)

105 
	#CEOT
 
CEOF


	)

107 
	#CBRK
 
CEOL


	)

108 
	#CRPRNT
 
CREPRINT


	)

109 
	#CFLUSH
 
CDISCARD


	)

117 #ifde‡
TTYDEFCHARS


118 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

119 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

120 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

121 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


123 #unde‡
TTYDEFCHARS


	@/usr/include/xlocale/_time.h

24 #i‚de‡
_XLOCALE__TIME_H_


25 
	#_XLOCALE__TIME_H_


	)

27 
__BEGIN_DECLS


28 
size_t
 
	$°r·ime_l
(* 
__ª°ri˘
, 
size_t
, const * __restrict,

29 c⁄° 
tm
 * 
__ª°ri˘
, 
loˇÀ_t
)

30 
	$__DARWIN_ALIAS
(
°r·ime_l
Ë
	`__°r·imñike
(3);

31 *
	$°Ωtime_l
(c⁄° * 
__ª°ri˘
, const * __restrict,

32 
tm
 * 
__ª°ri˘
, 
loˇÀ_t
)

33 
	$__DARWIN_ALIAS
(
°Ωtime_l
Ë
	`__°r·imñike
(2);

34 
__END_DECLS


	@/usr/include/i386/_limits.h

22 #i‚def 
_I386__LIMITS_H_


23 
	#_I386__LIMITS_H_


	)

25 
	#__DARWIN_CLK_TCK
 100

	)

	@/usr/include/i386/_structs.h

29 
	~<sys/≠∂ópi›ts.h
>

31 #ifde‡
__√ed_mc⁄ãxt_t


32 #i‚de‡
__√ed_°ru˘_mc⁄ãxt


33 
	#__√ed_°ru˘_mc⁄ãxt


	)

37 #i‡
deföed
(
__√ed_°ru˘_mc⁄ãxt
)

38 
	~<mach/i386/_°ru˘s.h
>

42 #ifde‡
__√ed_°ru˘_mc⁄ãxt


43 #unde‡
__√ed_°ru˘_mc⁄ãxt


45 #i‚de‡
_STRUCT_MCONTEXT32


46 #i‡
__DARWIN_UNIX03


47 
	#_STRUCT_MCONTEXT32
 
__d¨wö_mc⁄ãxt32


	)

48 
	g_STRUCT_MCONTEXT32


50 
_STRUCT_X86_EXCEPTION_STATE32
 
	g__es
;

51 
_STRUCT_X86_THREAD_STATE32
 
	g__ss
;

52 
_STRUCT_X86_FLOAT_STATE32
 
	g__fs
;

55 
	#_STRUCT_MCONTEXT32
 
mc⁄ãxt32


	)

56 
	g_STRUCT_MCONTEXT32


58 
_STRUCT_X86_EXCEPTION_STATE32
 
	ges
;

59 
_STRUCT_X86_THREAD_STATE32
 
	gss
;

60 
_STRUCT_X86_FLOAT_STATE32
 
	gfs
;

65 #i‚de‡
_STRUCT_MCONTEXT64


66 #i‡
__DARWIN_UNIX03


67 
	#_STRUCT_MCONTEXT64
 
__d¨wö_mc⁄ãxt64


	)

68 
	g_STRUCT_MCONTEXT64


70 
_STRUCT_X86_EXCEPTION_STATE64
 
	g__es
;

71 
_STRUCT_X86_THREAD_STATE64
 
	g__ss
;

72 
_STRUCT_X86_FLOAT_STATE64
 
	g__fs
;

75 
	#_STRUCT_MCONTEXT64
 
mc⁄ãxt64


	)

76 
	g_STRUCT_MCONTEXT64


78 
_STRUCT_X86_EXCEPTION_STATE64
 
	ges
;

79 
_STRUCT_X86_THREAD_STATE64
 
	gss
;

80 
_STRUCT_X86_FLOAT_STATE64
 
	gfs
;

86 #ifde‡
__√ed_mc⁄ãxt_t


87 #unde‡
__√ed_mc⁄ãxt_t


88 #i‚de‡
_MCONTEXT_T


89 
	#_MCONTEXT_T


	)

90 #i‡
deföed
(
__LP64__
)

91 
_STRUCT_MCONTEXT64
 *
	tmc⁄ãxt_t
;

92 
	#_STRUCT_MCONTEXT
 
_STRUCT_MCONTEXT64


	)

94 
_STRUCT_MCONTEXT32
 *
	tmc⁄ãxt_t
;

95 
	#_STRUCT_MCONTEXT
 
_STRUCT_MCONTEXT32


	)

100 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

101 #i‚de‡
I386_MCONTEXT_SIZE


102 
	#I386_MCONTEXT_SIZE
 (
mc⁄ãxt
)

	)

	@/usr/include/i386/_types.h

28 #i‚def 
_BSD_I386__TYPES_H_


29 
	#_BSD_I386__TYPES_H_


	)

36 #ifde‡
__GNUC__


37 
__sig√d
 
	t__öt8_t
;

39 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 
	t__öt64_t
;

47 
	t__uöt64_t
;

49 
	t__d¨wö_öçå_t
;

50 
	t__d¨wö_«tuøl_t
;

70 
	t__d¨wö_˘_ru√_t
;

77 
	m__mb°©e8
[128];

78 
	m_mb°©eL
;

79 } 
	t__mb°©e_t
;

81 
__mb°©e_t
 
	t__d¨wö_mb°©e_t
;

83 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__PTRDIFF_TYPE__
)

84 
__PTRDIFF_TYPE__
 
	t__d¨wö_±rdiff_t
;

86 
	t__d¨wö_±rdiff_t
;

89 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__SIZE_TYPE__
)

90 
__SIZE_TYPE__
 
	t__d¨wö_size_t
;

92 
	t__d¨wö_size_t
;

95 #i‡(
__GNUC__
 > 2)

96 
__buûtö_va_li°
 
	t__d¨wö_va_li°
;

98 * 
	t__d¨wö_va_li°
;

101 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__WCHAR_TYPE__
)

102 
__WCHAR_TYPE__
 
	t__d¨wö_wch¨_t
;

104 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wch¨_t
;

107 
__d¨wö_wch¨_t
 
	t__d¨wö_ru√_t
;

109 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__WINT_TYPE__
)

110 
__WINT_TYPE__
 
	t__d¨wö_wöt_t
;

112 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wöt_t
;

115 
	t__d¨wö_˛ock_t
;

116 
__uöt32_t
 
	t__d¨wö_sockÀn_t
;

117 
	t__d¨wö_ssize_t
;

118 
	t__d¨wö_time_t
;

	@/usr/include/i386/signal.h

33 #i‚def 
_I386_SIGNAL_H_


34 
	#_I386_SIGNAL_H_
 1

	)

36 
	~<sys/cdefs.h
>

38 #i‚de‡
_ANSI_SOURCE


39 
	tsig_©omic_t
;

41 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

43 
	~<sys/≠∂ópi›ts.h
>

45 #ifde‡
__APPLE_API_OBSOLETE


54 
	#__√ed_°ru˘_sigc⁄ãxt


	)

55 
	~<i386/_°ru˘s.h
>

	@/usr/include/ppc/_limits.h

22 #i‚def 
_PPC__LIMITS_H_


23 
	#_PPC__LIMITS_H_


	)

25 
	#__DARWIN_CLK_TCK
 100

	)

	@/usr/include/ppc/_structs.h

29 
	~<sys/cdefs.h
>

31 #ifde‡
__√ed_mc⁄ãxt_t


32 #i‚de‡
__√ed_°ru˘_mc⁄ãxt


33 
	#__√ed_°ru˘_mc⁄ãxt


	)

37 #ifde‡
__√ed_mc⁄ãxt64_t


38 #i‚de‡
__√ed_°ru˘_mc⁄ãxt64


39 
	#__√ed_°ru˘_mc⁄ãxt64


	)

43 #i‡
deföed
(
__√ed_°ru˘_mc⁄ãxt
Ë|| deföed(
__√ed_°ru˘_mc⁄ãxt64
)

44 
	~<mach/µc/_°ru˘s.h
>

47 #ifde‡
__√ed_°ru˘_mc⁄ãxt


48 #unde‡
__√ed_°ru˘_mc⁄ãxt


49 #i‚de‡
_STRUCT_MCONTEXT


50 #i‡
__DARWIN_UNIX03


51 
	#_STRUCT_MCONTEXT
 
__d¨wö_mc⁄ãxt


	)

52 
	g_STRUCT_MCONTEXT


54 
_STRUCT_PPC_EXCEPTION_STATE
 
	g__es
;

55 
_STRUCT_PPC_THREAD_STATE
 
	g__ss
;

56 
_STRUCT_PPC_FLOAT_STATE
 
	g__fs
;

57 
_STRUCT_PPC_VECTOR_STATE
 
	g__vs
;

60 
	#_STRUCT_MCONTEXT
 
mc⁄ãxt


	)

61 
	g_STRUCT_MCONTEXT


63 
_STRUCT_PPC_EXCEPTION_STATE
 
	ges
;

64 
_STRUCT_PPC_THREAD_STATE
 
	gss
;

65 
_STRUCT_PPC_FLOAT_STATE
 
	gfs
;

66 
_STRUCT_PPC_VECTOR_STATE
 
	gvs
;

72 #ifde‡
__√ed_°ru˘_mc⁄ãxt64


73 #unde‡
__√ed_°ru˘_mc⁄ãxt64


74 #i‚de‡
_STRUCT_MCONTEXT64


75 #i‡
__DARWIN_UNIX03


76 
	#_STRUCT_MCONTEXT64
 
__d¨wö_mc⁄ãxt64


	)

77 
	g_STRUCT_MCONTEXT64


79 
_STRUCT_PPC_EXCEPTION_STATE64
 
	g__es
;

80 
_STRUCT_PPC_THREAD_STATE64
 
	g__ss
;

81 
_STRUCT_PPC_FLOAT_STATE
 
	g__fs
;

82 
_STRUCT_PPC_VECTOR_STATE
 
	g__vs
;

85 
	#_STRUCT_MCONTEXT64
 
mc⁄ãxt64


	)

86 
	g_STRUCT_MCONTEXT64


88 
_STRUCT_PPC_EXCEPTION_STATE64
 
	ges
;

89 
_STRUCT_PPC_THREAD_STATE64
 
	gss
;

90 
_STRUCT_PPC_FLOAT_STATE
 
	gfs
;

91 
_STRUCT_PPC_VECTOR_STATE
 
	gvs
;

97 #ifde‡
__√ed_mc⁄ãxt_t


98 #unde‡
__√ed_mc⁄ãxt_t


99 #i‚de‡
_MCONTEXT_T


100 
	#_MCONTEXT_T


	)

101 
_STRUCT_MCONTEXT
 *
	tmc⁄ãxt_t
;

105 #ifde‡
__√ed_mc⁄ãxt64_t


106 #unde‡
__√ed_mc⁄ãxt64_t


107 #i‚de‡
_MCONTEXT64_T


108 
	#_MCONTEXT64_T


	)

109 
_STRUCT_MCONTEXT64
 *
	tmc⁄ãxt64_t
;

113 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

114 #i‚de‡
PPC_MCONTEXT_SIZE


115 
	#PPC_MCONTEXT_SIZE
 (
PPC_THREAD_STATE_COUNT
 + 
PPC_FLOAT_STATE_COUNT
 + 
PPC_EXCEPTION_STATE_COUNT
 + 
PPC_VECTOR_STATE_COUNT
Ë* ()

	)

117 #i‚de‡
PPC_MCONTEXT64_SIZE


118 
	#PPC_MCONTEXT64_SIZE
 (
PPC_THREAD_STATE64_COUNT
 + 
PPC_FLOAT_STATE_COUNT
 + 
PPC_EXCEPTION_STATE_COUNT
 + 
PPC_VECTOR_STATE_COUNT
Ë* ()

	)

125 #ifde‡
__√ed_°ru˘_sigc⁄ãxt


126 #unde‡
__√ed_°ru˘_sigc⁄ãxt


127 #i‚de‡
_STRUCT_SIGCONTEXT


128 #i‡
__DARWIN_UNIX03


129 
	#_STRUCT_SIGCONTEXT
 
__d¨wö_sigc⁄ãxt


	)

130 
	g_STRUCT_SIGCONTEXT


132 
	g__sc_⁄°ack
;

133 
	g__sc_mask
;

134 
	g__sc_ú
;

135 
	g__sc_psw
;

136 
	g__sc_•
;

137 *
	g__sc_ªgs
;

140 
	#_STRUCT_SIGCONTEXT
 
sigc⁄ãxt


	)

141 
	g_STRUCT_SIGCONTEXT


143 
	gsc_⁄°ack
;

144 
	gsc_mask
;

145 
	gsc_ú
;

146 
	gsc_psw
;

147 
	gsc_•
;

148 *
	gsc_ªgs
;

161 #ifde‡
__√ed_°ru˘_sigc⁄ãxt32


162 #unde‡
__√ed_°ru˘_sigc⁄ãxt32


163 #i‚de‡
_STRUCT_SIGCONTEXT32


164 #i‡
__DARWIN_UNIX03


165 
	#_STRUCT_SIGCONTEXT32
 
__d¨wö_sigc⁄ãxt32


	)

166 
	g_STRUCT_SIGCONTEXT32


168 
	g__sc_⁄°ack
;

169 
	g__sc_mask
;

170 
	g__sc_ú
;

171 
	g__sc_psw
;

172 
	g__sc_•
;

173 *
	g__sc_ªgs
;

176 
	#_STRUCT_SIGCONTEXT32
 
sigc⁄ãxt32


	)

177 
	g_STRUCT_SIGCONTEXT32


179 
	gsc_⁄°ack
;

180 
	gsc_mask
;

181 
	gsc_ú
;

182 
	gsc_psw
;

183 
	gsc_•
;

184 *
	gsc_ªgs
;

190 #ifde‡
__√ed_°ru˘_sigc⁄ãxt64


191 #unde‡
__√ed_°ru˘_sigc⁄ãxt64


192 #i‚de‡
_STRUCT_SIGCONTEXT64


193 #i‡
__DARWIN_UNIX03


194 
	#_STRUCT_SIGCONTEXT64
 
__d¨wö_sigc⁄ãxt64


	)

195 
	g_STRUCT_SIGCONTEXT64


197 
	g__sc_⁄°ack
;

198 
	g__sc_mask
;

199 
	g__sc_ú
;

200 
	g__sc_psw
;

201 
	g__sc_•
;

202 *
	g__sc_ªgs
;

205 
	#_STRUCT_SIGCONTEXT64
 
sigc⁄ãxt64


	)

206 
	g_STRUCT_SIGCONTEXT64


208 
	gsc_⁄°ack
;

209 
	gsc_mask
;

210 
	gsc_ú
;

211 
	gsc_psw
;

212 
	gsc_•
;

213 *
	gsc_ªgs
;

	@/usr/include/ppc/_types.h

28 #i‚def 
_BSD_PPC__TYPES_H_


29 
	#_BSD_PPC__TYPES_H_


	)

36 #ifde‡
__GNUC__


37 
__sig√d
 
	t__öt8_t
;

39 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 
	t__öt64_t
;

47 
	t__uöt64_t
;

49 
	t__d¨wö_öçå_t
;

50 
	t__d¨wö_«tuøl_t
;

70 
	t__d¨wö_˘_ru√_t
;

77 
	m__mb°©e8
[128];

78 
	m_mb°©eL
;

79 } 
	t__mb°©e_t
;

81 
__mb°©e_t
 
	t__d¨wö_mb°©e_t
;

83 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__PTRDIFF_TYPE__
)

84 
__PTRDIFF_TYPE__
 
	t__d¨wö_±rdiff_t
;

86 
	t__d¨wö_±rdiff_t
;

89 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__SIZE_TYPE__
)

90 
__SIZE_TYPE__
 
	t__d¨wö_size_t
;

92 
	t__d¨wö_size_t
;

95 #i‡(
__GNUC__
 > 2)

96 
__buûtö_va_li°
 
	t__d¨wö_va_li°
;

98 * 
	t__d¨wö_va_li°
;

101 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__WCHAR_TYPE__
)

102 
__WCHAR_TYPE__
 
	t__d¨wö_wch¨_t
;

104 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wch¨_t
;

107 
__d¨wö_wch¨_t
 
	t__d¨wö_ru√_t
;

109 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__WINT_TYPE__
)

110 
__WINT_TYPE__
 
	t__d¨wö_wöt_t
;

112 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wöt_t
;

115 
	t__d¨wö_˛ock_t
;

116 
__uöt32_t
 
	t__d¨wö_sockÀn_t
;

117 
	t__d¨wö_ssize_t
;

118 
	t__d¨wö_time_t
;

	@/usr/include/ppc/signal.h

32 #i‚def 
_PPC_SIGNAL_H_


33 
	#_PPC_SIGNAL_H_
 1

	)

35 
	~<sys/cdefs.h
>

37 #i‚de‡
_ANSI_SOURCE


39 
	tsig_©omic_t
;

41 
	~<sys/≠∂ópi›ts.h
>

43 #ifde‡
__APPLE_API_OBSOLETE


45 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

47 
	#__√ed_°ru˘_sigc⁄ãxt


	)

48 
	#__√ed_°ru˘_sigc⁄ãxt32


	)

49 
	#__√ed_°ru˘_sigc⁄ãxt64


	)

50 
	~<µc/_°ru˘s.h
>

55 
	#SV_SAVE_REGS
 0x1000

	)

69 
	mREGS_SAVED_NONE
,

70 
	mREGS_SAVED_CALLER
,

73 
	mREGS_SAVED_ALL


74 } 
	tªgs_ßved_t
;

	@/usr/include/sys/_endian.h

90 #i‚de‡
_SYS__ENDIAN_H_


91 
	#_SYS__ENDIAN_H_


	)

93 
	~<sys/cdefs.h
>

99 #i‡
deföed
(
löt
)

101 
__BEGIN_DECLS


102 
__uöt16_t
 
¡ohs
(__uint16_t);

103 
__uöt16_t
 
ht⁄s
(__uint16_t);

104 
__uöt32_t
 
¡ohl
(__uint32_t);

105 
__uöt32_t
 
ht⁄l
(__uint32_t);

106 
	g__END_DECLS


108 #ñi‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


110 
	#¡ohl
(
x
Ë((
__uöt32_t
)(x))

	)

111 
	#¡ohs
(
x
Ë((
__uöt16_t
)(x))

	)

112 
	#ht⁄l
(
x
Ë((
__uöt32_t
)(x))

	)

113 
	#ht⁄s
(
x
Ë((
__uöt16_t
)(x))

	)

115 #i‡ 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

116 
	#NTOHL
(
x
Ë(x)

	)

117 
	#NTOHS
(
x
Ë(x)

	)

118 
	#HTONL
(
x
Ë(x)

	)

119 
	#HTONS
(
x
Ë(x)

	)

124 
	~<libkîn/_OSByãOrdî.h
>

126 
	#¡ohs
(
x
Ë
	`__DARWIN_OSSw≠I¡16
(x)

	)

127 
	#ht⁄s
(
x
Ë
	`__DARWIN_OSSw≠I¡16
(x)

	)

129 
	#¡ohl
(
x
Ë
	`__DARWIN_OSSw≠I¡32
(x)

	)

130 
	#ht⁄l
(
x
Ë
	`__DARWIN_OSSw≠I¡32
(x)

	)

132 #if 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

133 
	#NTOHL
(
x
Ë(xË
	`¡ohl
((
__uöt32_t
)x)

	)

134 
	#NTOHS
(
x
Ë(xË
	`¡ohs
((
__uöt16_t
)x)

	)

135 
	#HTONL
(
x
Ë(xË
	`ht⁄l
((
__uöt32_t
)x)

	)

136 
	#HTONS
(
x
Ë(xË
	`ht⁄s
((
__uöt16_t
)x)

	)

	@/usr/include/libkern/_OSByteOrder.h

29 #i‚de‡
_OS__OSBYTEORDER_H


30 
	#_OS__OSBYTEORDER_H


	)

40 
	~<sys/_ty≥s.h
>

43 
	#__DARWIN_OSSw≠C⁄°I¡16
(
x
) \

44 ((
__uöt16_t
)((((__uöt16_t)(
x
) & 0xff00) >> 8) | \

45 (((
__uöt16_t
)(
x
Ë& 0x00ffË<< 8)))

	)

47 
	#__DARWIN_OSSw≠C⁄°I¡32
(
x
) \

48 ((
__uöt32_t
)((((__uöt32_t)(
x
) & 0xff000000) >> 24) | \

49 (((
__uöt32_t
)(
x
) & 0x00ff0000) >> 8) | \

50 (((
__uöt32_t
)(
x
) & 0x0000ff00) << 8) | \

51 (((
__uöt32_t
)(
x
Ë& 0x000000ffË<< 24)))

	)

53 
	#__DARWIN_OSSw≠C⁄°I¡64
(
x
) \

54 ((
__uöt64_t
)((((__uöt64_t)(
x
) & 0xff00000000000000ULL) >> 56) | \

55 (((
__uöt64_t
)(
x
) & 0x00ff000000000000ULL) >> 40) | \

56 (((
__uöt64_t
)(
x
) & 0x0000ff0000000000ULL) >> 24) | \

57 (((
__uöt64_t
)(
x
) & 0x000000ff00000000ULL) >> 8) | \

58 (((
__uöt64_t
)(
x
) & 0x00000000ff000000ULL) << 8) | \

59 (((
__uöt64_t
)(
x
) & 0x0000000000ff0000ULL) << 24) | \

60 (((
__uöt64_t
)(
x
) & 0x000000000000ff00ULL) << 40) | \

61 (((
__uöt64_t
)(
x
Ë& 0x00000000000000ffULLË<< 56)))

	)

63 #i‡
deföed
(
__GNUC__
)

65 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

66 
	~<libkîn/i386/_OSByãOrdî.h
>

69 #i‡
deföed
(
__¨m__
)

70 
	~<libkîn/¨m/OSByãOrdî.h
>

74 
	#__DARWIN_OSSw≠I¡16
(
x
) \

75 (
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡16
(xË: 
	`_OSSw≠I¡16
(x))

	)

77 
	#__DARWIN_OSSw≠I¡32
(
x
) \

78 (
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡32
(xË: 
	`_OSSw≠I¡32
(x))

	)

80 
	#__DARWIN_OSSw≠I¡64
(
x
) \

81 (
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡64
(xË: 
	`_OSSw≠I¡64
(x))

	)

85 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

87 #i‡!
deföed
(
__DARWIN_OS_INLINE
)

88 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

89 
	#__DARWIN_OS_INLINE
 
ölöe


	)

90 #ñi‡
deföed
(
__MWERKS__
Ë|| deföed(
__˝lu•lus
)

91 
	#__DARWIN_OS_INLINE
 
ölöe


	)

93 
	#__DARWIN_OS_INLINE
 
__ölöe__


	)

97 
__DARWIN_OS_INLINE


98 
uöt16_t


99 
	$_OSSw≠I¡16
(

100 
uöt16_t
 
d©a


103  
	`__DARWIN_OSSw≠C⁄°I¡16
(
d©a
);

104 
	}
}

106 
__DARWIN_OS_INLINE


107 
uöt32_t


108 
	$_OSSw≠I¡32
(

109 
uöt32_t
 
d©a


112  
	`__DARWIN_OSSw≠C⁄°I¡32
(
d©a
);

113 
	}
}

115 
__DARWIN_OS_INLINE


116 
uöt64_t


117 
	$_OSSw≠I¡64
(

118 
uöt64_t
 
d©a


121  
	`__DARWIN_OSSw≠C⁄°I¡64
(
d©a
);

122 
	}
}

125 
	#__DARWIN_OSSw≠I¡16
(
x
Ë
	`_OSSw≠I¡16
(x)

	)

127 
	#__DARWIN_OSSw≠I¡32
(
x
Ë
	`_OSSw≠I¡32
(x)

	)

129 
	#__DARWIN_OSSw≠I¡64
(
x
Ë
	`_OSSw≠I¡64
(x)

	)

	@/usr/include/mach/i386/_structs.h

32 #i‚def 
_MACH_I386__STRUCTS_H_


33 
	#_MACH_I386__STRUCTS_H_


	)

41 #i‡
__DARWIN_UNIX03


42 
	#_STRUCT_X86_THREAD_STATE32
 
__d¨wö_i386_thªad_°©e


	)

43 
	g_STRUCT_X86_THREAD_STATE32


45 
	g__óx
;

46 
	g__ebx
;

47 
	g__ecx
;

48 
	g__edx
;

49 
	g__edi
;

50 
	g__esi
;

51 
	g__ebp
;

52 
	g__e•
;

53 
	g__ss
;

54 
	g__eÊags
;

55 
	g__eù
;

56 
	g__cs
;

57 
	g__ds
;

58 
	g__es
;

59 
	g__fs
;

60 
	g__gs
;

63 
	#_STRUCT_X86_THREAD_STATE32
 
i386_thªad_°©e


	)

64 
	g_STRUCT_X86_THREAD_STATE32


66 
	góx
;

67 
	gebx
;

68 
	gecx
;

69 
	gedx
;

70 
	gedi
;

71 
	gesi
;

72 
	gebp
;

73 
	ge•
;

74 
	gss
;

75 
	geÊags
;

76 
	geù
;

77 
	gcs
;

78 
	gds
;

79 
	ges
;

80 
	gfs
;

81 
	ggs
;

87 #i‡
__DARWIN_UNIX03


88 
	#_STRUCT_FP_CONTROL
 
__d¨wö_Â_c⁄åﬁ


	)

89 
	g_STRUCT_FP_CONTROL


91 
	g__övÆid
 :1,

92 
	g__dí‹m
 :1,

93 
	g__zdiv
 :1,

94 
	g__ovrÊ
 :1,

95 
	g__undÊ
 :1,

96 
	g__¥ecis
 :1,

98 
	g__pc
 :2,

99 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

100 
	#FP_PREC_24B
 0

	)

101 
	#FP_PREC_53B
 2

	)

102 
	#FP_PREC_64B
 3

	)

104 
	g__rc
 :2,

105 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

106 
	#FP_RND_NEAR
 0

	)

107 
	#FP_RND_DOWN
 1

	)

108 
	#FP_RND_UP
 2

	)

109 
	#FP_CHOP
 3

	)

114 
_STRUCT_FP_CONTROL
 
	t__d¨wö_Â_c⁄åﬁ_t
;

116 
	#_STRUCT_FP_CONTROL
 
Â_c⁄åﬁ


	)

117 
	g_STRUCT_FP_CONTROL


119 
	gövÆid
 :1,

120 
	gdí‹m
 :1,

121 
	gzdiv
 :1,

122 
	govrÊ
 :1,

123 
	gundÊ
 :1,

124 
	g¥ecis
 :1,

126 
	gpc
 :2,

127 
	#FP_PREC_24B
 0

	)

128 
	#FP_PREC_53B
 2

	)

129 
	#FP_PREC_64B
 3

	)

130 
	grc
 :2,

131 
	#FP_RND_NEAR
 0

	)

132 
	#FP_RND_DOWN
 1

	)

133 
	#FP_RND_UP
 2

	)

134 
	#FP_CHOP
 3

	)

138 
_STRUCT_FP_CONTROL
 
	tÂ_c⁄åﬁ_t
;

145 #i‡
__DARWIN_UNIX03


146 
	#_STRUCT_FP_STATUS
 
__d¨wö_Â_°©us


	)

147 
	g_STRUCT_FP_STATUS


149 
	g__övÆid
 :1,

150 
	g__dí‹m
 :1,

151 
	g__zdiv
 :1,

152 
	g__ovrÊ
 :1,

153 
	g__undÊ
 :1,

154 
	g__¥ecis
 :1,

155 
	g__°kÊt
 :1,

156 
	g__îrsumm
 :1,

157 
	g__c0
 :1,

158 
	g__c1
 :1,

159 
	g__c2
 :1,

160 
	g__tos
 :3,

161 
	g__c3
 :1,

162 
	g__busy
 :1;

164 
_STRUCT_FP_STATUS
 
	t__d¨wö_Â_°©us_t
;

166 
	#_STRUCT_FP_STATUS
 
Â_°©us


	)

167 
	g_STRUCT_FP_STATUS


169 
	gövÆid
 :1,

170 
	gdí‹m
 :1,

171 
	gzdiv
 :1,

172 
	govrÊ
 :1,

173 
	gundÊ
 :1,

174 
	g¥ecis
 :1,

175 
	g°kÊt
 :1,

176 
	gîrsumm
 :1,

177 
	gc0
 :1,

178 
	gc1
 :1,

179 
	gc2
 :1,

180 
	gtos
 :3,

181 
	gc3
 :1,

182 
	gbusy
 :1;

184 
_STRUCT_FP_STATUS
 
	tÂ_°©us_t
;

189 #i‡
__DARWIN_UNIX03


190 
	#_STRUCT_MMST_REG
 
__d¨wö_mm°_ªg


	)

191 
	g_STRUCT_MMST_REG


193 
	g__mm°_ªg
[10];

194 
	g__mm°_r§v
[6];

197 
	#_STRUCT_MMST_REG
 
mm°_ªg


	)

198 
	g_STRUCT_MMST_REG


200 
	gmm°_ªg
[10];

201 
	gmm°_r§v
[6];

208 #i‡
__DARWIN_UNIX03


209 
	#_STRUCT_XMM_REG
 
__d¨wö_xmm_ªg


	)

210 
	g_STRUCT_XMM_REG


212 
	g__xmm_ªg
[16];

215 
	#_STRUCT_XMM_REG
 
xmm_ªg


	)

216 
	g_STRUCT_XMM_REG


218 
	gxmm_ªg
[16];

226 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

227 
	#FP_STATE_BYTES
 512

	)

230 #i‡
__DARWIN_UNIX03


231 
	#_STRUCT_X86_FLOAT_STATE32
 
__d¨wö_i386_Êﬂt_°©e


	)

232 
	g_STRUCT_X86_FLOAT_STATE32


234 
	g__Âu_ª£rved
[2];

235 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

236 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

237 
__uöt8_t
 
	g__Âu_·w
;

238 
__uöt8_t
 
	g__Âu_r§v1
;

239 
__uöt16_t
 
	g__Âu_f›
;

240 
__uöt32_t
 
	g__Âu_ù
;

241 
__uöt16_t
 
	g__Âu_cs
;

242 
__uöt16_t
 
	g__Âu_r§v2
;

243 
__uöt32_t
 
	g__Âu_dp
;

244 
__uöt16_t
 
	g__Âu_ds
;

245 
__uöt16_t
 
	g__Âu_r§v3
;

246 
__uöt32_t
 
	g__Âu_mxc§
;

247 
__uöt32_t
 
	g__Âu_mxc§mask
;

248 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

249 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

250 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

251 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

252 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

253 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

254 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

255 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

256 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

257 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

258 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

259 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

260 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

261 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

262 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

263 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

264 
	g__Âu_r§v4
[14*16];

265 
	g__Âu_ª£rved1
;

268 
	#_STRUCT_X86_FLOAT_STATE32
 
i386_Êﬂt_°©e


	)

269 
	g_STRUCT_X86_FLOAT_STATE32


271 
	gÂu_ª£rved
[2];

272 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

273 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

274 
__uöt8_t
 
	gÂu_·w
;

275 
__uöt8_t
 
	gÂu_r§v1
;

276 
__uöt16_t
 
	gÂu_f›
;

277 
__uöt32_t
 
	gÂu_ù
;

278 
__uöt16_t
 
	gÂu_cs
;

279 
__uöt16_t
 
	gÂu_r§v2
;

280 
__uöt32_t
 
	gÂu_dp
;

281 
__uöt16_t
 
	gÂu_ds
;

282 
__uöt16_t
 
	gÂu_r§v3
;

283 
__uöt32_t
 
	gÂu_mxc§
;

284 
__uöt32_t
 
	gÂu_mxc§mask
;

285 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

286 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

287 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

288 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

289 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

290 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

291 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

292 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

293 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

294 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

295 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

296 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

297 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

298 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

299 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

300 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

301 
	gÂu_r§v4
[14*16];

302 
	gÂu_ª£rved1
;

306 #i‡
__DARWIN_UNIX03


307 
	#_STRUCT_X86_EXCEPTION_STATE32
 
__d¨wö_i386_ex˚±i⁄_°©e


	)

308 
	g_STRUCT_X86_EXCEPTION_STATE32


310 
	g__å≠no
;

311 
	g__îr
;

312 
	g__Áu…vaddr
;

315 
	#_STRUCT_X86_EXCEPTION_STATE32
 
i386_ex˚±i⁄_°©e


	)

316 
	g_STRUCT_X86_EXCEPTION_STATE32


318 
	gå≠no
;

319 
	gîr
;

320 
	gÁu…vaddr
;

324 #i‡
__DARWIN_UNIX03


325 
	#_STRUCT_X86_DEBUG_STATE32
 
__d¨wö_x86_debug_°©e32


	)

326 
	g_STRUCT_X86_DEBUG_STATE32


328 
	g__dr0
;

329 
	g__dr1
;

330 
	g__dr2
;

331 
	g__dr3
;

332 
	g__dr4
;

333 
	g__dr5
;

334 
	g__dr6
;

335 
	g__dr7
;

338 
	#_STRUCT_X86_DEBUG_STATE32
 
x86_debug_°©e32


	)

339 
	g_STRUCT_X86_DEBUG_STATE32


341 
	gdr0
;

342 
	gdr1
;

343 
	gdr2
;

344 
	gdr3
;

345 
	gdr4
;

346 
	gdr5
;

347 
	gdr6
;

348 
	gdr7
;

356 #i‡
__DARWIN_UNIX03


357 
	#_STRUCT_X86_THREAD_STATE64
 
__d¨wö_x86_thªad_°©e64


	)

358 
	g_STRUCT_X86_THREAD_STATE64


360 
__uöt64_t
 
	g__øx
;

361 
__uöt64_t
 
	g__rbx
;

362 
__uöt64_t
 
	g__rcx
;

363 
__uöt64_t
 
	g__rdx
;

364 
__uöt64_t
 
	g__rdi
;

365 
__uöt64_t
 
	g__rsi
;

366 
__uöt64_t
 
	g__rbp
;

367 
__uöt64_t
 
	g__r•
;

368 
__uöt64_t
 
	g__r8
;

369 
__uöt64_t
 
	g__r9
;

370 
__uöt64_t
 
	g__r10
;

371 
__uöt64_t
 
	g__r11
;

372 
__uöt64_t
 
	g__r12
;

373 
__uöt64_t
 
	g__r13
;

374 
__uöt64_t
 
	g__r14
;

375 
__uöt64_t
 
	g__r15
;

376 
__uöt64_t
 
	g__rù
;

377 
__uöt64_t
 
	g__rÊags
;

378 
__uöt64_t
 
	g__cs
;

379 
__uöt64_t
 
	g__fs
;

380 
__uöt64_t
 
	g__gs
;

383 
	#_STRUCT_X86_THREAD_STATE64
 
x86_thªad_°©e64


	)

384 
	g_STRUCT_X86_THREAD_STATE64


386 
__uöt64_t
 
	gøx
;

387 
__uöt64_t
 
	grbx
;

388 
__uöt64_t
 
	grcx
;

389 
__uöt64_t
 
	grdx
;

390 
__uöt64_t
 
	grdi
;

391 
__uöt64_t
 
	grsi
;

392 
__uöt64_t
 
	grbp
;

393 
__uöt64_t
 
	gr•
;

394 
__uöt64_t
 
	gr8
;

395 
__uöt64_t
 
	gr9
;

396 
__uöt64_t
 
	gr10
;

397 
__uöt64_t
 
	gr11
;

398 
__uöt64_t
 
	gr12
;

399 
__uöt64_t
 
	gr13
;

400 
__uöt64_t
 
	gr14
;

401 
__uöt64_t
 
	gr15
;

402 
__uöt64_t
 
	grù
;

403 
__uöt64_t
 
	grÊags
;

404 
__uöt64_t
 
	gcs
;

405 
__uöt64_t
 
	gfs
;

406 
__uöt64_t
 
	ggs
;

411 #i‡
__DARWIN_UNIX03


412 
	#_STRUCT_X86_FLOAT_STATE64
 
__d¨wö_x86_Êﬂt_°©e64


	)

413 
	g_STRUCT_X86_FLOAT_STATE64


415 
	g__Âu_ª£rved
[2];

416 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

417 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

418 
__uöt8_t
 
	g__Âu_·w
;

419 
__uöt8_t
 
	g__Âu_r§v1
;

420 
__uöt16_t
 
	g__Âu_f›
;

423 
__uöt32_t
 
	g__Âu_ù
;

424 
__uöt16_t
 
	g__Âu_cs
;

426 
__uöt16_t
 
	g__Âu_r§v2
;

429 
__uöt32_t
 
	g__Âu_dp
;

430 
__uöt16_t
 
	g__Âu_ds
;

432 
__uöt16_t
 
	g__Âu_r§v3
;

433 
__uöt32_t
 
	g__Âu_mxc§
;

434 
__uöt32_t
 
	g__Âu_mxc§mask
;

435 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

436 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

437 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

438 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

439 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

440 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

441 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

442 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

443 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

444 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

445 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

446 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

447 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

448 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

449 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

450 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

451 
_STRUCT_XMM_REG
 
	g__Âu_xmm8
;

452 
_STRUCT_XMM_REG
 
	g__Âu_xmm9
;

453 
_STRUCT_XMM_REG
 
	g__Âu_xmm10
;

454 
_STRUCT_XMM_REG
 
	g__Âu_xmm11
;

455 
_STRUCT_XMM_REG
 
	g__Âu_xmm12
;

456 
_STRUCT_XMM_REG
 
	g__Âu_xmm13
;

457 
_STRUCT_XMM_REG
 
	g__Âu_xmm14
;

458 
_STRUCT_XMM_REG
 
	g__Âu_xmm15
;

459 
	g__Âu_r§v4
[6*16];

460 
	g__Âu_ª£rved1
;

463 
	#_STRUCT_X86_FLOAT_STATE64
 
x86_Êﬂt_°©e64


	)

464 
	g_STRUCT_X86_FLOAT_STATE64


466 
	gÂu_ª£rved
[2];

467 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

468 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

469 
__uöt8_t
 
	gÂu_·w
;

470 
__uöt8_t
 
	gÂu_r§v1
;

471 
__uöt16_t
 
	gÂu_f›
;

474 
__uöt32_t
 
	gÂu_ù
;

475 
__uöt16_t
 
	gÂu_cs
;

477 
__uöt16_t
 
	gÂu_r§v2
;

480 
__uöt32_t
 
	gÂu_dp
;

481 
__uöt16_t
 
	gÂu_ds
;

483 
__uöt16_t
 
	gÂu_r§v3
;

484 
__uöt32_t
 
	gÂu_mxc§
;

485 
__uöt32_t
 
	gÂu_mxc§mask
;

486 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

487 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

488 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

489 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

490 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

491 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

492 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

493 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

494 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

495 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

496 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

497 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

498 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

499 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

500 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

501 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

502 
_STRUCT_XMM_REG
 
	gÂu_xmm8
;

503 
_STRUCT_XMM_REG
 
	gÂu_xmm9
;

504 
_STRUCT_XMM_REG
 
	gÂu_xmm10
;

505 
_STRUCT_XMM_REG
 
	gÂu_xmm11
;

506 
_STRUCT_XMM_REG
 
	gÂu_xmm12
;

507 
_STRUCT_XMM_REG
 
	gÂu_xmm13
;

508 
_STRUCT_XMM_REG
 
	gÂu_xmm14
;

509 
_STRUCT_XMM_REG
 
	gÂu_xmm15
;

510 
	gÂu_r§v4
[6*16];

511 
	gÂu_ª£rved1
;

515 #i‡
__DARWIN_UNIX03


516 
	#_STRUCT_X86_EXCEPTION_STATE64
 
__d¨wö_x86_ex˚±i⁄_°©e64


	)

517 
	g_STRUCT_X86_EXCEPTION_STATE64


519 
	g__å≠no
;

520 
	g__îr
;

521 
__uöt64_t
 
	g__Áu…vaddr
;

524 
	#_STRUCT_X86_EXCEPTION_STATE64
 
x86_ex˚±i⁄_°©e64


	)

525 
	g_STRUCT_X86_EXCEPTION_STATE64


527 
	gå≠no
;

528 
	gîr
;

529 
__uöt64_t
 
	gÁu…vaddr
;

533 #i‡
__DARWIN_UNIX03


534 
	#_STRUCT_X86_DEBUG_STATE64
 
__d¨wö_x86_debug_°©e64


	)

535 
	g_STRUCT_X86_DEBUG_STATE64


537 
__uöt64_t
 
	g__dr0
;

538 
__uöt64_t
 
	g__dr1
;

539 
__uöt64_t
 
	g__dr2
;

540 
__uöt64_t
 
	g__dr3
;

541 
__uöt64_t
 
	g__dr4
;

542 
__uöt64_t
 
	g__dr5
;

543 
__uöt64_t
 
	g__dr6
;

544 
__uöt64_t
 
	g__dr7
;

547 
	#_STRUCT_X86_DEBUG_STATE64
 
x86_debug_°©e64


	)

548 
	g_STRUCT_X86_DEBUG_STATE64


550 
__uöt64_t
 
	gdr0
;

551 
__uöt64_t
 
	gdr1
;

552 
__uöt64_t
 
	gdr2
;

553 
__uöt64_t
 
	gdr3
;

554 
__uöt64_t
 
	gdr4
;

555 
__uöt64_t
 
	gdr5
;

556 
__uöt64_t
 
	gdr6
;

557 
__uöt64_t
 
	gdr7
;

	@/usr/include/mach/ppc/_structs.h

32 #i‚def 
_MACH_PPC__STRUCTS_H_


33 
	#_MACH_PPC__STRUCTS_H_


	)

35 
	~<sys/cdefs.h
>

43 #i‡
__DARWIN_UNIX03


44 
	#_STRUCT_PPC_THREAD_STATE
 
__d¨wö_µc_thªad_°©e


	)

45 
	g_STRUCT_PPC_THREAD_STATE


47 
	g__§r0
;

48 
	g__§r1
;

49 
	g__r0
;

50 
	g__r1
;

51 
	g__r2
;

52 
	g__r3
;

53 
	g__r4
;

54 
	g__r5
;

55 
	g__r6
;

56 
	g__r7
;

57 
	g__r8
;

58 
	g__r9
;

59 
	g__r10
;

60 
	g__r11
;

61 
	g__r12
;

62 
	g__r13
;

63 
	g__r14
;

64 
	g__r15
;

65 
	g__r16
;

66 
	g__r17
;

67 
	g__r18
;

68 
	g__r19
;

69 
	g__r20
;

70 
	g__r21
;

71 
	g__r22
;

72 
	g__r23
;

73 
	g__r24
;

74 
	g__r25
;

75 
	g__r26
;

76 
	g__r27
;

77 
	g__r28
;

78 
	g__r29
;

79 
	g__r30
;

80 
	g__r31
;

82 
	g__¸
;

83 
	g__xî
;

84 
	g__Ã
;

85 
	g__˘r
;

86 
	g__mq
;

88 
	g__vrßve
;

91 
	#_STRUCT_PPC_THREAD_STATE
 
µc_thªad_°©e


	)

92 
	g_STRUCT_PPC_THREAD_STATE


94 
	g§r0
;

95 
	g§r1
;

96 
	gr0
;

97 
	gr1
;

98 
	gr2
;

99 
	gr3
;

100 
	gr4
;

101 
	gr5
;

102 
	gr6
;

103 
	gr7
;

104 
	gr8
;

105 
	gr9
;

106 
	gr10
;

107 
	gr11
;

108 
	gr12
;

109 
	gr13
;

110 
	gr14
;

111 
	gr15
;

112 
	gr16
;

113 
	gr17
;

114 
	gr18
;

115 
	gr19
;

116 
	gr20
;

117 
	gr21
;

118 
	gr22
;

119 
	gr23
;

120 
	gr24
;

121 
	gr25
;

122 
	gr26
;

123 
	gr27
;

124 
	gr28
;

125 
	gr29
;

126 
	gr30
;

127 
	gr31
;

129 
	g¸
;

130 
	gxî
;

131 
	gÃ
;

132 
	g˘r
;

133 
	gmq
;

135 
	gvrßve
;

139 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

141 #¥agm®
∑ck
(4)

143 #i‡
__DARWIN_UNIX03


144 
	#_STRUCT_PPC_THREAD_STATE64
 
__d¨wö_µc_thªad_°©e64


	)

145 
	g_STRUCT_PPC_THREAD_STATE64


147 
	g__§r0
;

148 
	g__§r1
;

149 
	g__r0
;

150 
	g__r1
;

151 
	g__r2
;

152 
	g__r3
;

153 
	g__r4
;

154 
	g__r5
;

155 
	g__r6
;

156 
	g__r7
;

157 
	g__r8
;

158 
	g__r9
;

159 
	g__r10
;

160 
	g__r11
;

161 
	g__r12
;

162 
	g__r13
;

163 
	g__r14
;

164 
	g__r15
;

165 
	g__r16
;

166 
	g__r17
;

167 
	g__r18
;

168 
	g__r19
;

169 
	g__r20
;

170 
	g__r21
;

171 
	g__r22
;

172 
	g__r23
;

173 
	g__r24
;

174 
	g__r25
;

175 
	g__r26
;

176 
	g__r27
;

177 
	g__r28
;

178 
	g__r29
;

179 
	g__r30
;

180 
	g__r31
;

182 
	g__¸
;

183 
	g__xî
;

184 
	g__Ã
;

185 
	g__˘r
;

187 
	g__vrßve
;

190 
	#_STRUCT_PPC_THREAD_STATE64
 
µc_thªad_°©e64


	)

191 
	g_STRUCT_PPC_THREAD_STATE64


193 
	g§r0
;

194 
	g§r1
;

195 
	gr0
;

196 
	gr1
;

197 
	gr2
;

198 
	gr3
;

199 
	gr4
;

200 
	gr5
;

201 
	gr6
;

202 
	gr7
;

203 
	gr8
;

204 
	gr9
;

205 
	gr10
;

206 
	gr11
;

207 
	gr12
;

208 
	gr13
;

209 
	gr14
;

210 
	gr15
;

211 
	gr16
;

212 
	gr17
;

213 
	gr18
;

214 
	gr19
;

215 
	gr20
;

216 
	gr21
;

217 
	gr22
;

218 
	gr23
;

219 
	gr24
;

220 
	gr25
;

221 
	gr26
;

222 
	gr27
;

223 
	gr28
;

224 
	gr29
;

225 
	gr30
;

226 
	gr31
;

228 
	g¸
;

229 
	gxî
;

230 
	gÃ
;

231 
	g˘r
;

233 
	gvrßve
;

237 #¥agm®
∑ck
()

243 #i‡
__DARWIN_UNIX03


244 
	#_STRUCT_PPC_FLOAT_STATE
 
__d¨wö_µc_Êﬂt_°©e


	)

245 
	g_STRUCT_PPC_FLOAT_STATE


247 
	g__Âªgs
[32];

249 
	g__Âs¸_∑d
;

250 
	g__Âs¸
;

253 
	#_STRUCT_PPC_FLOAT_STATE
 
µc_Êﬂt_°©e


	)

254 
	g_STRUCT_PPC_FLOAT_STATE


256 
	gÂªgs
[32];

258 
	gÂs¸_∑d
;

259 
	gÂs¸
;

263 #¥agm®
∑ck
(4)

265 #i‡
__DARWIN_UNIX03


266 
	#_STRUCT_PPC_VECTOR_STATE
 
__d¨wö_µc_ve˘‹_°©e


	)

267 
	g_STRUCT_PPC_VECTOR_STATE


269 #i‡
deföed
(
__LP64__
)

270 
	g__ßve_vr
[32][4];

271 
	g__ßve_vs¸
[4];

273 
	g__ßve_vr
[32][4];

274 
	g__ßve_vs¸
[4];

276 
	g__ßve_∑d5
[4];

277 
	g__ßve_vrvÆid
;

278 
	g__ßve_∑d6
[7];

281 
	#_STRUCT_PPC_VECTOR_STATE
 
µc_ve˘‹_°©e


	)

282 
	g_STRUCT_PPC_VECTOR_STATE


284 #i‡
deföed
(
__LP64__
)

285 
	gßve_vr
[32][4];

286 
	gßve_vs¸
[4];

288 
	gßve_vr
[32][4];

289 
	gßve_vs¸
[4];

291 
	gßve_∑d5
[4];

292 
	gßve_vrvÆid
;

293 
	gßve_∑d6
[7];

297 #¥agm®
∑ck
()

316 #¥agm®
∑ck
(4)

318 #i‡
__DARWIN_UNIX03


319 
	#_STRUCT_PPC_EXCEPTION_STATE
 
__d¨wö_µc_ex˚±i⁄_°©e


	)

320 
	g_STRUCT_PPC_EXCEPTION_STATE


322 #i‡
deföed
(
__LP64__
)

323 
	g__d¨
;

324 
	g__dsi§
;

325 
	g__ex˚±i⁄
;

326 
	g__∑d0
;

327 
	g__∑d1
[4];

329 
	g__d¨
;

330 
	g__dsi§
;

331 
	g__ex˚±i⁄
;

332 
	g__∑d0
;

333 
	g__∑d1
[4];

337 
	#_STRUCT_PPC_EXCEPTION_STATE
 
µc_ex˚±i⁄_°©e


	)

338 
	g_STRUCT_PPC_EXCEPTION_STATE


340 #i‡
deföed
(
__LP64__
)

341 
	gd¨
;

342 
	gdsi§
;

343 
	gex˚±i⁄
;

344 
	g∑d0
;

345 
	g∑d1
[4];

347 
	gd¨
;

348 
	gdsi§
;

349 
	gex˚±i⁄
;

350 
	g∑d0
;

351 
	g∑d1
[4];

356 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

357 #i‡
__DARWIN_UNIX03


358 
	#_STRUCT_PPC_EXCEPTION_STATE64
 
__d¨wö_µc_ex˚±i⁄_°©e64


	)

359 
	g_STRUCT_PPC_EXCEPTION_STATE64


361 
	g__d¨
;

362 #i‡
deföed
(
__LP64__
)

363 
	g__dsi§
;

364 
	g__ex˚±i⁄
;

365 
	g__∑d1
[4];

367 
	g__dsi§
;

368 
	g__ex˚±i⁄
;

369 
	g__∑d1
[4];

373 
	#_STRUCT_PPC_EXCEPTION_STATE64
 
µc_ex˚±i⁄_°©e64


	)

374 
	g_STRUCT_PPC_EXCEPTION_STATE64


376 
	gd¨
;

377 #i‡
deföed
(
__LP64__
)

378 
	gdsi§
;

379 
	gex˚±i⁄
;

380 
	g∑d1
[4];

382 
	gdsi§
;

383 
	gex˚±i⁄
;

384 
	g∑d1
[4];

390 #¥agm®
∑ck
()

	@/usr/include/libkern/i386/_OSByteOrder.h

29 #i‚de‡
_OS__OSBYTEORDERI386_H


30 
	#_OS__OSBYTEORDERI386_H


	)

32 #i‡!
deföed
(
__DARWIN_OS_INLINE
)

33 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

34 
	#__DARWIN_OS_INLINE
 
ölöe


	)

35 #ñi‡
deföed
(
__MWERKS__
Ë|| deföed(
__˝lu•lus
)

36 
	#__DARWIN_OS_INLINE
 
ölöe


	)

38 
	#__DARWIN_OS_INLINE
 
__ölöe__


	)

44 
__DARWIN_OS_INLINE


45 
__uöt16_t


46 
	$_OSSw≠I¡16
(

47 
__uöt16_t
 
_d©a


50  ((
_d©a
 << 8) | (_data >> 8));

51 
	}
}

53 
__DARWIN_OS_INLINE


54 
__uöt32_t


55 
	$_OSSw≠I¡32
(

56 
__uöt32_t
 
_d©a


59 #i‡
	`deföed
(
__Œvm__
)

60  
	`__buûtö_bsw≠32
(
_d©a
);

62 
	`__asm__
 ("bsw≠ %0" : "+r" (
_d©a
));

63  
_d©a
;

65 
	}
}

67 #i‡
deföed
(
__Œvm__
)

68 
__DARWIN_OS_INLINE


69 
__uöt64_t


70 
	$_OSSw≠I¡64
(

71 
__uöt64_t
 
_d©a


74  
	`__buûtö_bsw≠64
(
_d©a
);

75 
	}
}

77 #ñi‡
deföed
(
__i386__
)

78 
__DARWIN_OS_INLINE


79 
__uöt64_t


80 
	$_OSSw≠I¡64
(

81 
__uöt64_t
 
_d©a


84 
	`__asm__
 ("bswap %%eax\n\t"

87 : "+A" (
_d©a
));

88  
_d©a
;

89 
	}
}

90 #ñi‡
deföed
(
__x86_64__
)

91 
__DARWIN_OS_INLINE


92 
__uöt64_t


93 
	$_OSSw≠I¡64
(

94 
__uöt64_t
 
_d©a


97 
	`__asm__
 ("bsw≠ %0" : "+r" (
_d©a
));

98  
_d©a
;

99 
	}
}

101 #îr‹ 
Unknown
 
¨chôe˘uª


	@
1
.
1
/usr/include
120
2696
asm.c
dasm.c
dlist.h
fifostdio.c
instr_table.c
instr_table.h
instructions.c
instructions.h
instructions_test.c
mbox.c
mbox.h
sim.c
sim_core.c
sim_core.h
sim_core_test.c
sim_cp_if.c
sim_cp_if.h
sim_cp_nvram.c
sim_cp_nvram.h
sim_cp_timer.c
sim_cp_timer.h
sim_cp_uart.c
sim_cp_uart.h
sim_memif.c
sim_memif.h
sim_physmem.c
sim_physmem.h
sim_utils.c
sim_utils.h
utils.c
utils.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/limits.h
/usr/include/poll.h
/usr/include/pthread.h
/usr/include/signal.h
/usr/include/stdarg.h
/usr/include/stdbool.h
/usr/include/stddef.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/mman.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/termios.h
/usr/include/unistd.h
/usr/include/util.h
/usr/include/Availability.h
/usr/include/_types.h
/usr/include/_xlocale.h
/usr/include/alloca.h
/usr/include/machine/endian.h
/usr/include/machine/limits.h
/usr/include/machine/types.h
/usr/include/pthread_impl.h
/usr/include/pwd.h
/usr/include/runetype.h
/usr/include/sched.h
/usr/include/secure/_stdio.h
/usr/include/secure/_string.h
/usr/include/sys/_select.h
/usr/include/sys/_structs.h
/usr/include/sys/_types.h
/usr/include/sys/appleapiopts.h
/usr/include/sys/cdefs.h
/usr/include/sys/errno.h
/usr/include/sys/fcntl.h
/usr/include/sys/poll.h
/usr/include/sys/select.h
/usr/include/sys/signal.h
/usr/include/sys/syslimits.h
/usr/include/sys/termios.h
/usr/include/sys/ttycom.h
/usr/include/sys/unistd.h
/usr/include/sys/wait.h
/usr/include/time.h
/usr/include/utmp.h
/usr/include/xlocale/_ctype.h
/usr/include/xlocale/_stdio.h
/usr/include/xlocale/_stdlib.h
/usr/include/xlocale/_string.h
/usr/include/AvailabilityInternal.h
/usr/include/_structs.h
/usr/include/i386/endian.h
/usr/include/i386/limits.h
/usr/include/i386/types.h
/usr/include/machine/_limits.h
/usr/include/machine/_structs.h
/usr/include/machine/_types.h
/usr/include/machine/signal.h
/usr/include/ppc/endian.h
/usr/include/ppc/limits.h
/usr/include/ppc/types.h
/usr/include/secure/_common.h
/usr/include/sys/ioccom.h
/usr/include/sys/resource.h
/usr/include/sys/ttydefaults.h
/usr/include/xlocale/_time.h
/usr/include/i386/_limits.h
/usr/include/i386/_structs.h
/usr/include/i386/_types.h
/usr/include/i386/signal.h
/usr/include/ppc/_limits.h
/usr/include/ppc/_structs.h
/usr/include/ppc/_types.h
/usr/include/ppc/signal.h
/usr/include/sys/_endian.h
/usr/include/libkern/_OSByteOrder.h
/usr/include/mach/i386/_structs.h
/usr/include/mach/ppc/_structs.h
/usr/include/libkern/i386/_OSByteOrder.h
